{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/diaspora/source/css/diaspora.css","path":"css/diaspora.css","modified":1,"renderable":1},{"_id":"themes/diaspora/source/img/cover.jpg","path":"img/cover.jpg","modified":0,"renderable":1},{"_id":"themes/diaspora/source/img/logo.png","path":"img/logo.png","modified":0,"renderable":1},{"_id":"themes/diaspora/source/img/welcome-cover.jpg","path":"img/welcome-cover.jpg","modified":0,"renderable":1},{"_id":"themes/diaspora/source/js/diaspora.js","path":"js/diaspora.js","modified":1,"renderable":1},{"_id":"themes/diaspora/source/js/jquery.min.js","path":"js/jquery.min.js","modified":1,"renderable":1},{"_id":"themes/diaspora/source/js/plugin.js","path":"js/plugin.js","modified":1,"renderable":1},{"_id":"themes/diaspora/source/js/typed.js","path":"js/typed.js","modified":1,"renderable":1},{"_id":"themes/diaspora/source/photoswipe/photoswipe-ui-default.js","path":"photoswipe/photoswipe-ui-default.js","modified":1,"renderable":1},{"_id":"themes/diaspora/source/photoswipe/photoswipe-ui-default.min.js","path":"photoswipe/photoswipe-ui-default.min.js","modified":1,"renderable":1},{"_id":"themes/diaspora/source/photoswipe/photoswipe.css","path":"photoswipe/photoswipe.css","modified":1,"renderable":1},{"_id":"themes/diaspora/source/photoswipe/photoswipe.js","path":"photoswipe/photoswipe.js","modified":1,"renderable":1},{"_id":"themes/diaspora/source/photoswipe/photoswipe.min.js","path":"photoswipe/photoswipe.min.js","modified":1,"renderable":1},{"_id":"themes/diaspora/source/photoswipe/default-skin/default-skin.css","path":"photoswipe/default-skin/default-skin.css","modified":1,"renderable":1},{"_id":"themes/diaspora/source/photoswipe/default-skin/default-skin.png","path":"photoswipe/default-skin/default-skin.png","modified":0,"renderable":1},{"_id":"themes/diaspora/source/photoswipe/default-skin/default-skin.svg","path":"photoswipe/default-skin/default-skin.svg","modified":0,"renderable":1},{"_id":"themes/diaspora/source/photoswipe/default-skin/preloader.gif","path":"photoswipe/default-skin/preloader.gif","modified":0,"renderable":1},{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"themes/diaspora/source/audio/鸣小明 - 无人之岛.mp3","path":"audio/鸣小明 - 无人之岛.mp3","modified":0,"renderable":1},{"_id":"themes/diaspora/source/audio/片岡真央 - メインテーマ.mp3","path":"audio/片岡真央 - メインテーマ.mp3","modified":0,"renderable":1},{"_id":"themes/diaspora/source/img/cover1.jpeg","path":"img/cover1.jpeg","modified":0,"renderable":1},{"_id":"themes/diaspora/source/img/cover2.jpeg","path":"img/cover2.jpeg","modified":0,"renderable":1},{"_id":"themes/diaspora/source/img/cover3.jpeg","path":"img/cover3.jpeg","modified":0,"renderable":1},{"_id":"themes/diaspora/source/img/cover4.jpeg","path":"img/cover4.jpeg","modified":0,"renderable":1},{"_id":"themes/diaspora/source/img/cover5.jpeg","path":"img/cover5.jpeg","modified":0,"renderable":1},{"_id":"themes/diaspora/source/img/cover6.jpeg","path":"img/cover6.jpeg","modified":0,"renderable":1},{"_id":"themes/diaspora/source/img/cover7.jpeg","path":"img/cover7.jpeg","modified":0,"renderable":1},{"_id":"themes/diaspora/source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":1},{"_id":"source/assets/me.jpg","path":"assets/me.jpg","modified":0,"renderable":0},{"_id":"source/assets/me_cricle.jpg","path":"assets/me_cricle.jpg","modified":0,"renderable":0},{"_id":"source/assets/me_rect.jpg","path":"assets/me_rect.jpg","modified":0,"renderable":0},{"_id":"source/assets/Screenshot_1.png","path":"assets/Screenshot_1.png","modified":0,"renderable":0},{"_id":"source/assets/zuifuli.jpg","path":"assets/zuifuli.jpg","modified":0,"renderable":0},{"_id":"themes/diaspora/source/img/cover8.jpg","path":"img/cover8.jpg","modified":0,"renderable":1},{"_id":"themes/diaspora/source/img/cover9.jpg","path":"img/cover9.jpg","modified":0,"renderable":1},{"_id":"source/assets/2020-11-15-1.png","path":"assets/2020-11-15-1.png","modified":1,"renderable":0},{"_id":"source/assets/2020-11-15-2.png","path":"assets/2020-11-15-2.png","modified":1,"renderable":0},{"_id":"source/assets/latency-quantiles.png","path":"assets/latency-quantiles.png","modified":1,"renderable":0},{"_id":"source/assets/latency-raw.png","path":"assets/latency-raw.png","modified":1,"renderable":0},{"_id":"source/assets/rate.png","path":"assets/rate.png","modified":1,"renderable":0},{"_id":"themes/diaspora/source/img/cover10.jpg","path":"img/cover10.jpg","modified":1,"renderable":1}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"acad91ace80b80295b11a9b7ad4c29a2dcfdd8fb","modified":1601694708353},{"_id":"themes/landscape/.gitignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1601633928869},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1601633928869},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1601633928869},{"_id":"themes/landscape/README.md","hash":"37fae88639ef60d63bd0de22314d7cc4c5d94b07","modified":1601633928869},{"_id":"themes/landscape/_config.yml","hash":"79ac6b9ed6a4de5a21ea53fc3f5a3de92e2475ff","modified":1601633928869},{"_id":"themes/landscape/package.json","hash":"544f21a0b2c7034998b36ae94dba6e3e0f39f228","modified":1601633928869},{"_id":"themes/landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1601633928869},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1601633928869},{"_id":"themes/landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1601633928869},{"_id":"themes/landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1601633928869},{"_id":"themes/landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1601633928869},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1601633928869},{"_id":"themes/landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1601633928869},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1601633928869},{"_id":"themes/landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1601633928869},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1601633928869},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1601633928869},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1601633928869},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1601633928869},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1601633928869},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1601633928869},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1601633928869},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1601633928869},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1601633928869},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1601633928869},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1601633928869},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"d0d753d39038284d52b10e5075979cc97db9cd20","modified":1601633928869},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1601633928869},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"950ddd91db8718153b329b96dc14439ab8463ba5","modified":1601633928869},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"c4c835615d96a950d51fa2c3b5d64d0596534fed","modified":1601633928869},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"93518893cf91287e797ebac543c560e2a63b8d0e","modified":1601633928869},{"_id":"themes/landscape/layout/_partial/gauges-analytics.ejs","hash":"aad6312ac197d6c5aaf2104ac863d7eba46b772a","modified":1601633928869},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1601633928869},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"5abf77aec957d9445fc71a8310252f0013c84578","modified":1601633928869},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"7e749050be126eadbc42decfbea75124ae430413","modified":1601633928869},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1601633928869},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1601633928869},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1601633928869},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1601633928869},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1601633928869},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1601633928869},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1601633928869},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1601633928869},{"_id":"themes/landscape/source/css/_variables.styl","hash":"628e307579ea46b5928424313993f17b8d729e92","modified":1601633928873},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1601633928877},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1601633928877},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1601633928877},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1601633928877},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1601633928877},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1601633928877},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1601633928877},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1601633928881},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1601633928881},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1601633928881},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1601633928881},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1601633928869},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1601633928869},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1601633928869},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1601633928869},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1601633928869},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1601633928869},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1601633928869},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1601633928869},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1601633928869},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1601633928869},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1601633928869},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1601633928873},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1601633928873},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1601633928873},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1601633928873},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1601633928873},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1601633928873},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1601633928873},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1601633928873},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1601633928873},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1601633928877},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1601633928877},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1601633928877},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1601633928877},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1601633928877},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1601633928881},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1601633928881},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1601633928877},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1601633928873},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1601633928877},{"_id":"themes/diaspora/.gitignore","hash":"711861c1bdc49a4d5c6704a22546dcafc31d4730","modified":1612611366049},{"_id":"themes/diaspora/LICENSE","hash":"63175a16773044bed84e1778009a54ad03dd5520","modified":1612611366049},{"_id":"themes/diaspora/README.md","hash":"a99289142b877da1e6203f21eeaed712495369b6","modified":1612611366049},{"_id":"themes/diaspora/_config.yml","hash":"41f8932535a318b2d97ce3768051887c35940fb0","modified":1612622007032},{"_id":"themes/diaspora/languages/default.yml","hash":"1b2b75ca9ff3bfeddb596239889b584cdfcecc32","modified":1612611366049},{"_id":"themes/diaspora/languages/fr.yml","hash":"84ab164b37c6abf625473e9a0c18f6f815dd5fd9","modified":1612611366049},{"_id":"themes/diaspora/languages/it.yml","hash":"6ae71000ed039f56572143ffe90da17b95d1a66f","modified":1612611366049},{"_id":"themes/diaspora/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1612611366049},{"_id":"themes/diaspora/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1612611366049},{"_id":"themes/diaspora/languages/zh-CN.yml","hash":"ccbba6315760755926f5abfe1b98c225a6650581","modified":1612611366053},{"_id":"themes/diaspora/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1612611366049},{"_id":"themes/diaspora/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1612611366053},{"_id":"themes/diaspora/layout/archive.ejs","hash":"80aa442d757c082f37590a35a1f8f4f798996b4e","modified":1612611366053},{"_id":"themes/diaspora/layout/category.ejs","hash":"920114db892fe39fab097c4f65d8ffc9b2a76b69","modified":1612611366053},{"_id":"themes/diaspora/layout/index.ejs","hash":"61158c6df5bb665aa5fa39f5fba950f23867eef6","modified":1612611366053},{"_id":"themes/diaspora/layout/layout.ejs","hash":"b9acea1512eba9ae16a6fd7f3f37b9fa3f4a0c95","modified":1612611366053},{"_id":"themes/diaspora/layout/page.ejs","hash":"ad954fb44615f603674782703a5a7f5b1f24ebf4","modified":1612611366053},{"_id":"themes/diaspora/layout/post.ejs","hash":"e585d8b4680c52dccfc40ffa6b2c5df515bf20d2","modified":1612611366053},{"_id":"themes/diaspora/layout/tag.ejs","hash":"e0c36bded984989c864227801dcd289207241f76","modified":1601634685313},{"_id":"themes/diaspora/scripts/page_title.js","hash":"35dbc39e4edd53b20f5433dc0d1708024049186d","modified":1612611366053},{"_id":"themes/diaspora/.github/ISSUE_TEMPLATE/issues-template.md","hash":"34869fddae53c69c2648712d2f82fe9cb6e9cb0d","modified":1612611366049},{"_id":"themes/diaspora/layout/_partial/categories.ejs","hash":"4a569e3d4e1a0498238aea62abdaf27af96d5a12","modified":1612611366053},{"_id":"themes/diaspora/layout/_partial/google-analytics.ejs","hash":"41841321642acdf2643f9ff596f8da1a653e757b","modified":1612611366053},{"_id":"themes/diaspora/layout/_partial/head.ejs","hash":"7f7f2955fb48205673f8fe96293bfc80ea63963a","modified":1612611366053},{"_id":"themes/diaspora/layout/_partial/list.ejs","hash":"8e03499580aa81ec0b4c8316347b4e3839849007","modified":1612611366053},{"_id":"themes/diaspora/layout/_partial/mathjax.ejs","hash":"87918a6547489265695cf21e09c35559412c29b1","modified":1612611366053},{"_id":"themes/diaspora/layout/_partial/menu.ejs","hash":"ace01623958bbbf40207e71ed6ef9da0c46e1326","modified":1612611366053},{"_id":"themes/diaspora/layout/_partial/pagination.ejs","hash":"23bf862b3b8a3cd831850504d9b5a24d21b005e7","modified":1612611366053},{"_id":"themes/diaspora/layout/_partial/photoswipe.ejs","hash":"d1d36cf0a2c03ff3c2acbc208fe11cd0afd8b7bd","modified":1612611366053},{"_id":"themes/diaspora/layout/_partial/screen.ejs","hash":"59afaa5d9cb7c05aa02968f7fdcdc2c7f4b0ca71","modified":1612611366053},{"_id":"themes/diaspora/layout/_partial/scripts.ejs","hash":"ecb5fbee97c93ed438650f64d7939c5e9401c11e","modified":1612611366053},{"_id":"themes/diaspora/layout/_partial/search.ejs","hash":"12210ce0d939650b336f428fb8ba4e40b19b42ae","modified":1612611366053},{"_id":"themes/diaspora/layout/_partial/tags.ejs","hash":"fd398ab315ef57c8197cd218237ec07dcd92f372","modified":1612611366053},{"_id":"themes/diaspora/source/css/diaspora.css","hash":"57c5663395a58ff7fedd6812a1b92652c6353a26","modified":1612611366085},{"_id":"themes/diaspora/source/img/favicon.png","hash":"4bd0ead42912b788e2d414d34af3de7ad04fc501","modified":1601713465609},{"_id":"themes/diaspora/source/img/logo.png","hash":"8505ea8b5967daae75d139632663e3422b4b1baa","modified":1601640081877},{"_id":"themes/diaspora/source/js/diaspora.js","hash":"72b0ebc9c56f9478879e22f86793c89c90ce269c","modified":1612611366101},{"_id":"themes/diaspora/source/js/plugin.js","hash":"0ac6bf36a9a11ca6fad0af1f20e5705bc326abf4","modified":1612611366101},{"_id":"themes/diaspora/source/js/typed.js","hash":"e817f2a2b12c2da5e76cc1428912fe5900eb100c","modified":1612611366101},{"_id":"themes/diaspora/source/photoswipe/photoswipe-ui-default.js","hash":"c844cca2f9a9969a810a0fb534063e008424c936","modified":1612611366101},{"_id":"themes/diaspora/source/photoswipe/photoswipe-ui-default.min.js","hash":"d80b713ca1bab90f27a8af7d8e43563f0fe81860","modified":1612611366101},{"_id":"themes/diaspora/source/photoswipe/photoswipe.css","hash":"a31fa495095783ef5a84ba4dba0bd6f7de3b07ea","modified":1612611366101},{"_id":"themes/diaspora/source/photoswipe/photoswipe.min.js","hash":"791703278e7c576b08b67f18404bae9eb8cebfaf","modified":1612611366101},{"_id":"themes/diaspora/layout/_partial/post/article.ejs","hash":"c0e10d93dcfba6c519a239f630bf7965d4863771","modified":1612611366053},{"_id":"themes/diaspora/layout/_partial/post/date.ejs","hash":"6f2d1aa9562df343b797d25705f1945323c465fb","modified":1612611366053},{"_id":"themes/diaspora/layout/_partial/post/gitalk.ejs","hash":"d3d7d3cfd57fcfb2ab41ae743569853dd4489098","modified":1612611366053},{"_id":"themes/diaspora/layout/_partial/post/header.ejs","hash":"6e1bdde001df6c3b97bf4bf0bf7c2c4160f2071c","modified":1612611366053},{"_id":"themes/diaspora/layout/_partial/post/item.ejs","hash":"17992d3ebcefa840c4bdd5d2de4a7b80c2a7f999","modified":1612611366053},{"_id":"themes/diaspora/layout/_partial/post/tag.ejs","hash":"c2b4ce7e1d7eed59f4c333915cd431f008f898e3","modified":1612611366053},{"_id":"themes/diaspora/layout/_partial/post/title.ejs","hash":"33f2a96f17fb1efa354c92aef906d96984abd9ab","modified":1612611366053},{"_id":"themes/diaspora/source/photoswipe/default-skin/default-skin.css","hash":"5763bd1a8015774f37215359bfcb5edd65d198a6","modified":1612611366101},{"_id":"themes/diaspora/source/photoswipe/default-skin/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1601634685325},{"_id":"themes/diaspora/source/photoswipe/default-skin/default-skin.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1601634685325},{"_id":"themes/diaspora/source/photoswipe/default-skin/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1601634685325},{"_id":"themes/diaspora/source/js/jquery.min.js","hash":"3f1b0e9e54af1af2db2c8a639530448723462151","modified":1612611366101},{"_id":"themes/diaspora/source/photoswipe/photoswipe.js","hash":"30967789eb2a3e1da9927e71f4f3c5339ebed39a","modified":1612611366101},{"_id":"themes/diaspora/source/img/cover.jpg","hash":"dc7103d4c4e05650595712b3fa395b89726df32b","modified":1601634685317},{"_id":"themes/diaspora/source/img/welcome-cover.jpg","hash":"c393dfeb52aff20a9921c1f56e2ce127683ab35a","modified":1601634685321},{"_id":"source/CNAME","hash":"e5a6073819db5768e31d087664602bc0e8c499ae","modified":1601639098839},{"_id":"source/categories/index.md","hash":"33173cc24147112970f91ab809f27c4f951579ad","modified":1612611366049},{"_id":"source/search/index.md","hash":"8c575d28130833f909c6eb107ec9530dac83156b","modified":1612611366049},{"_id":"source/tags/index.md","hash":"5f4e3ac56b151090f08d6d689ee12a7e70ed4fc6","modified":1612611366049},{"_id":"themes/diaspora/source/img/favicon.ico","hash":"81d96af1b493bbf83ee62b7ade88e3227b6a9ce8","modified":1597997096000},{"_id":"source/about/index.md","hash":"459f09ec4c424f53166ad47e7207b829be8bb235","modified":1612611366041},{"_id":"themes/diaspora/source/audio/片岡真央 - メインテーマ.mp3","hash":"894f1fd94bad786e9d4a7cb5a341c8bc31fb1ac0","modified":1601694497760},{"_id":"themes/diaspora/source/audio/鸣小明 - 无人之岛.mp3","hash":"d07a03c6529fc8f52632edc4549bd43d4470b43e","modified":1601436271146},{"_id":"themes/diaspora/source/img/cover2.jpeg","hash":"3bca8d45edfa5be01a162094b3bee97094f73c12","modified":1601723752105},{"_id":"themes/diaspora/source/img/cover3.jpeg","hash":"f80de2f2b9a12e7f9765918bdc909d1261dc56eb","modified":1601715394415},{"_id":"themes/diaspora/source/img/cover5.jpeg","hash":"14493a0c53b2049b48eb2ba996509b3e78806903","modified":1601715752635},{"_id":"themes/diaspora/source/img/cover6.jpeg","hash":"16ae9be802a18b1a8b70889e0619c186fb73b106","modified":1601724031010},{"_id":"themes/diaspora/source/img/cover1.jpeg","hash":"34c2427247d20e9488a70cee920d68d4e46109b0","modified":1601715427474},{"_id":"themes/diaspora/source/img/cover4.jpeg","hash":"f7c1180fca70c13e0c7865222621fb6a619387c5","modified":1601723910337},{"_id":"source/_posts/combain-image.md","hash":"d67e9f832a59ba5b0d9ec2e2db86a733579ca427","modified":1612611366041},{"_id":"source/_drafts/802-1-x.md","hash":"e31eb17222f0313151904ebdb27d1d9aeca5788a","modified":1601705916089},{"_id":"source/_drafts/android-webview.md","hash":"b7dd1e45c0c14744d07240f96cd49fdbdbe3597d","modified":1601806269937},{"_id":"source/_drafts/primitive.md","hash":"5e557aa2793dbeb80afd08036f2fe82300963109","modified":1601771239472},{"_id":"source/_drafts/rasp-ctl.md","hash":"b2a08dcb9d62f76a473e858e03ae27d19e86b0b5","modified":1601712968391},{"_id":"themes/diaspora/source/img/cover7.jpeg","hash":"97645eb2e8b9f0b2b1542a2a3f0ded4608c18215","modified":1601715506553},{"_id":"source/assets/me.jpg","hash":"537373be2bd36cb3316420ec8888224f221b743d","modified":1601771208270},{"_id":"source/_posts/primitive.md","hash":"862d79a3f487f7bba26d438f930a54683472e967","modified":1612611366041},{"_id":"source/images/me.jpg","hash":"537373be2bd36cb3316420ec8888224f221b743d","modified":1601771208270},{"_id":"source/_posts/802-1-x.md","hash":"6d3f663d3c96e88e3cf18537c6f16c57653f5a88","modified":1612611366041},{"_id":"source/assets/me_rect.jpg","hash":"9424606b76a9df27900d24e0d2dfd13481d3c0b3","modified":1601771932305},{"_id":"source/assets/me_cricle.jpg","hash":"c4934887b1f26c9c3d732b8482fbd09eb55768df","modified":1601771894006},{"_id":"source/_posts/rasp-ctl.md","hash":"30383073fd6758df7835170cf3501384ef443f44","modified":1612611366041},{"_id":"source/assets/Screenshot_1.png","hash":"fd8bb762706113e3621ea21b0d8bc779e9a72a0d","modified":1601773161016},{"_id":"source/_posts/tic80.md","hash":"fcddf10fb11ea2e591ad76e11c5bbbdc0d1aac81","modified":1612611366041},{"_id":"source/_posts/doukutsu.md","hash":"327bcbe9affe3c6600124bcca89d0d39fcefa9e8","modified":1612611366041},{"_id":"source/_posts/china-weather.md","hash":"f13730a5132f3fcb1803fae51dc3e4240abe8809","modified":1612611366041},{"_id":"source/assets/zuifuli.jpg","hash":"e363d93665d54ec96e16225454b0511bfe189916","modified":1601806228001},{"_id":"source/_posts/android-webview.md","hash":"aa789981aff5ef92b3c867128119647644f10547","modified":1612611366041},{"_id":"themes/diaspora/source/img/cover8.jpg","hash":"259143b4d02bc40bd974175e364cad0a03a25c21","modified":1601806639757},{"_id":"themes/diaspora/source/img/cover9.jpg","hash":"3a9f3f857f3cdc40c0e019ae35916ac0bb3b3a70","modified":1601806745778},{"_id":"source/_posts/nes-emulator.md","hash":"13fdbc8768a04c479c29888d8c4939095185136e","modified":1612611366041},{"_id":"source/_drafts/6502.md","hash":"364fc954e095191de6fe19ebc48ec527b7b8e4bd","modified":1602293485411},{"_id":"source/_drafts/closure.md","hash":"1a9f59ebe16d1323e019aee7d445cd3d7c08982d","modified":1612611366041},{"_id":"source/_drafts/concurrent.md","hash":"aac9decab5dad6e283aff8391e5d0f3848daadd3","modified":1612611366041},{"_id":"source/_drafts/grafana.md","hash":"032a382906db1faa00b6d5741d02368aca927142","modified":1612611366041},{"_id":"source/_drafts/javaagent.md","hash":"9347aec5b5bed005475f4ce9d7827799a77389b9","modified":1612611366041},{"_id":"source/_drafts/jdbc.md","hash":"0cb41b9c2a93fab6d0a27ccd257442bd5d0f69e7","modified":1612611366041},{"_id":"source/_drafts/jvm.md","hash":"a9bac6ce231f02018a1791597f049be3e66a959a","modified":1612611366041},{"_id":"source/_drafts/lock.md","hash":"bef4756019fde6c5cf452661ac48b81a8326d362","modified":1612611366041},{"_id":"source/_drafts/online-ddl.md","hash":"7cae0c9347e2b5c2ddca9dc00812b7bd87167d07","modified":1612611366041},{"_id":"source/_drafts/powermock.md","hash":"df107cd95c41b101cd7bccac53e5cdd1935fe50d","modified":1612611366041},{"_id":"source/_drafts/seata.md","hash":"ed8eeec9ceae3ab90734e0bc77b43f0e2ec3bd90","modified":1612611366041},{"_id":"source/_drafts/tddl.md","hash":"e1a9a7ef9666102a8b5ab86773c3bfafc8f44e0a","modified":1612611366041},{"_id":"source/_posts/6502.md","hash":"72a3ebe931f6a319dffff6e88d4f596df07af626","modified":1612611366041},{"_id":"source/_posts/feign.md","hash":"648155936c3deb1ecaa0f915f929845b71137d66","modified":1612611366041},{"_id":"source/_posts/hackintosh.md","hash":"dc33f5d85d2b4d490b08aa451709c016c1b8eb2c","modified":1612611366041},{"_id":"source/_posts/leanote.md","hash":"b8fb805382f031f3d5eb0bad92aca90904bbc21d","modified":1612611366041},{"_id":"source/_posts/jraft.md","hash":"45a44c0c5d5d3ebe6eb7e31fd2d9b6a020454f1d","modified":1612611366041},{"_id":"source/_posts/opencv.md","hash":"c1642e478875f301c6ffcf0d0851b740642f285f","modified":1612611366041},{"_id":"source/_posts/openpyxl.md","hash":"108c081736daa439ab581af1b29d2886b3584871","modified":1612611366041},{"_id":"source/_posts/rrys.md","hash":"f44b5d2761fcbd87452c67282b944ea5bbbdb961","modified":1612611366041},{"_id":"source/_posts/tempermonkey.md","hash":"7412a19af873aa02d3dbb37df139c5104d73da52","modified":1612611366041},{"_id":"source/assets/2020-11-15-2.png","hash":"e45431ef7e83b672dcd6855e5fa5647325a6f37f","modified":1612611366041},{"_id":"source/assets/latency-quantiles.png","hash":"f3e2f486b20ccf055a330f0f6cc5d1df3dbf7c5e","modified":1612611366045},{"_id":"source/assets/latency-raw.png","hash":"9f4edf9270cf897d1283028b7c0ab0219ff6253f","modified":1612611366045},{"_id":"source/assets/rate.png","hash":"731077314d0a88172d7dda407155ce02441972eb","modified":1612611366045},{"_id":"source/assets/2020-11-15-1.png","hash":"9fc53267f2c1794b245c517adb9c4699f8ac0116","modified":1612611366041},{"_id":"themes/diaspora/source/img/cover10.jpg","hash":"91488c662810e28487111ebe814e76f9d95eb5e0","modified":1612621946642}],"Category":[{"name":"python","_id":"ckfta33q300017wui2sjbbsdl"},{"name":"flask","_id":"ckfuegwe2000120uid1gdczh2"},{"name":"raspberry","_id":"ckfueh1b2000320ui3ust4pq7"},{"name":"game","_id":"ckfuesjh70001rcui183mburi"},{"name":"old-computer","_id":"ckg30hkof0004z4mb8i61c1kp"},{"name":"java","_id":"ckkttizgb000e4u8576w3fzd1"},{"name":"mac","_id":"ckkttizgj000m4u8532807m4t"},{"name":"linux","_id":"ckkttizgm000r4u85hm563na9"},{"name":"算法","_id":"ckkttizgp000w4u859e844g1q"},{"name":"img","_id":"ckkttizgw00114u85ev58c3kt"},{"name":"js","_id":"ckkttizgz00174u85231fbl23"}],"Data":[],"Page":[{"title":"categories","date":"2020-10-02T11:26:14.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2020-10-02 19:26:14\ntype: \"categories\"\n---\n","updated":"2021-02-06T11:36:06.049Z","path":"categories/index.html","_id":"ckfs75ugq00007nwl0itughoq","comments":1,"layout":"page","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"search","date":"2020-10-02T11:28:45.000Z","type":"search","_content":"","source":"search/index.md","raw":"---\ntitle: search\ndate: 2020-10-02 19:28:45\ntype: \"search\"\n---\n","updated":"2021-02-06T11:36:06.049Z","path":"search/index.html","_id":"ckfs75ugt00017nwld3zxcq18","comments":1,"layout":"page","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2020-10-02T11:27:02.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2020-10-02 19:27:02\ntype: \"tags\"\n---\n","updated":"2021-02-06T11:36:06.049Z","path":"tags/index.html","_id":"ckfs75ugu00027nwl233jgen0","comments":1,"layout":"page","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"about","date":"2020-10-03T03:27:30.000Z","_content":"\n美好事物爱好者\n\n不断折腾 \n\n最后啥都不是\n\n但 生命不息 折腾不止","source":"about/index.md","raw":"---\ntitle: about\ndate: 2020-10-03 11:27:30\n---\n\n美好事物爱好者\n\n不断折腾 \n\n最后啥都不是\n\n但 生命不息 折腾不止","updated":"2021-02-06T11:36:06.041Z","path":"about/index.html","_id":"ckft4ecpr00000gui4aqvfocu","comments":1,"layout":"page","content":"<p>美好事物爱好者</p>\n<p>不断折腾 </p>\n<p>最后啥都不是</p>\n<p>但 生命不息 折腾不止</p>\n","site":{"data":{}},"excerpt":"","more":"<p>美好事物爱好者</p>\n<p>不断折腾 </p>\n<p>最后啥都不是</p>\n<p>但 生命不息 折腾不止</p>\n"}],"Post":[{"title":"合并图片","date":"2020-10-03T06:09:25.000Z","_content":"```python\nimport sys\nfrom PIL import Image\n\nwidth = 0\nheight = 0\nfor imageFile in sys.argv[1:]:\n    with Image.open(imageFile) as im2:\n        width = width + im2.size[0]\n        height = max(height, im2.size[1])\nim = Image.new('RGB', (width, height))\nwidth = 0\nheight = 0\nfor imageFile in sys.argv[1:]:\n    with Image.open(imageFile) as im2:\n        im2_width = im2.size[0]\n        im2_height = im2.size[1]\n        im.paste(im2.crop((0, 0, im2_width, im2_height)), (width, 0, width + im2_width, im2_height))\n        width = width + im2_width\nim.save('result.jpeg', 'JPEG')\n\n```","source":"_posts/combain-image.md","raw":"---\ntitle: 合并图片\ndate: 2020-10-03 14:09:25\ntags: python\ncategories: python\n---\n```python\nimport sys\nfrom PIL import Image\n\nwidth = 0\nheight = 0\nfor imageFile in sys.argv[1:]:\n    with Image.open(imageFile) as im2:\n        width = width + im2.size[0]\n        height = max(height, im2.size[1])\nim = Image.new('RGB', (width, height))\nwidth = 0\nheight = 0\nfor imageFile in sys.argv[1:]:\n    with Image.open(imageFile) as im2:\n        im2_width = im2.size[0]\n        im2_height = im2.size[1]\n        im.paste(im2.crop((0, 0, im2_width, im2_height)), (width, 0, width + im2_width, im2_height))\n        width = width + im2_width\nim.save('result.jpeg', 'JPEG')\n\n```","slug":"combain-image","published":1,"updated":"2021-02-06T11:36:06.041Z","_id":"ckfta33pw00007wuifz0o195y","comments":1,"layout":"post","photos":[],"link":"","content":"<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image</span><br><span class=\"line\"></span><br><span class=\"line\">width = <span class=\"number\">0</span></span><br><span class=\"line\">height = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> imageFile <span class=\"keyword\">in</span> sys.argv[<span class=\"number\">1</span>:]:</span><br><span class=\"line\">    <span class=\"keyword\">with</span> Image.open(imageFile) <span class=\"keyword\">as</span> im2:</span><br><span class=\"line\">        width = width + im2.size[<span class=\"number\">0</span>]</span><br><span class=\"line\">        height = max(height, im2.size[<span class=\"number\">1</span>])</span><br><span class=\"line\">im = Image.new(<span class=\"string\">&#x27;RGB&#x27;</span>, (width, height))</span><br><span class=\"line\">width = <span class=\"number\">0</span></span><br><span class=\"line\">height = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> imageFile <span class=\"keyword\">in</span> sys.argv[<span class=\"number\">1</span>:]:</span><br><span class=\"line\">    <span class=\"keyword\">with</span> Image.open(imageFile) <span class=\"keyword\">as</span> im2:</span><br><span class=\"line\">        im2_width = im2.size[<span class=\"number\">0</span>]</span><br><span class=\"line\">        im2_height = im2.size[<span class=\"number\">1</span>]</span><br><span class=\"line\">        im.paste(im2.crop((<span class=\"number\">0</span>, <span class=\"number\">0</span>, im2_width, im2_height)), (width, <span class=\"number\">0</span>, width + im2_width, im2_height))</span><br><span class=\"line\">        width = width + im2_width</span><br><span class=\"line\">im.save(<span class=\"string\">&#x27;result.jpeg&#x27;</span>, <span class=\"string\">&#x27;JPEG&#x27;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image</span><br><span class=\"line\"></span><br><span class=\"line\">width = <span class=\"number\">0</span></span><br><span class=\"line\">height = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> imageFile <span class=\"keyword\">in</span> sys.argv[<span class=\"number\">1</span>:]:</span><br><span class=\"line\">    <span class=\"keyword\">with</span> Image.open(imageFile) <span class=\"keyword\">as</span> im2:</span><br><span class=\"line\">        width = width + im2.size[<span class=\"number\">0</span>]</span><br><span class=\"line\">        height = max(height, im2.size[<span class=\"number\">1</span>])</span><br><span class=\"line\">im = Image.new(<span class=\"string\">&#x27;RGB&#x27;</span>, (width, height))</span><br><span class=\"line\">width = <span class=\"number\">0</span></span><br><span class=\"line\">height = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> imageFile <span class=\"keyword\">in</span> sys.argv[<span class=\"number\">1</span>:]:</span><br><span class=\"line\">    <span class=\"keyword\">with</span> Image.open(imageFile) <span class=\"keyword\">as</span> im2:</span><br><span class=\"line\">        im2_width = im2.size[<span class=\"number\">0</span>]</span><br><span class=\"line\">        im2_height = im2.size[<span class=\"number\">1</span>]</span><br><span class=\"line\">        im.paste(im2.crop((<span class=\"number\">0</span>, <span class=\"number\">0</span>, im2_width, im2_height)), (width, <span class=\"number\">0</span>, width + im2_width, im2_height))</span><br><span class=\"line\">        width = width + im2_width</span><br><span class=\"line\">im.save(<span class=\"string\">&#x27;result.jpeg&#x27;</span>, <span class=\"string\">&#x27;JPEG&#x27;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"用几何原语再现图像","date":"2020-10-04T00:28:13.000Z","mp3":null,"cover":null,"_content":"\n![](/assets/me_rect.jpg)\n![](/assets/me_cricle.jpg)\n\n```python\ndef draw_circle(startX, startY, radius, r, g, b):\n    pu()\n    colormode(255)\n    pencolor(r, g, b)\n    begin_fill()\n    fillcolor((r, g, b))\n    goto(startX, startY)\n    pd()\n    \n    circle(radius)\n    \n    end_fill()\n    pu()\n\ndef line(startX, startY, endX, endY, r, g, b):\n    colormode(255)\n    pencolor(r, g, b)\n    begin_fill()\n    fillcolor((r, g, b))\n    goto(startX, startY)\n    pd()\n    forward(abs(endX - startX))\n    right(90)\n    forward(abs(endY - startY))\n    right(90)\n    forward(abs(endX - startX))\n    right(90)\n    forward(abs(endY - startY))\n    right(90)\n    \n    end_fill()\n    pu()\n\ndef rect(startX, startY, endX, endY, r, g, b):\n    colormode(255)\n    pencolor(r, g, b)\n    begin_fill()\n    fillcolor((r, g, b))\n    goto(startX, startY)\n    pd()\n    forward(abs(endX - startX))\n    right(90)\n    forward(abs(endY - startY))\n    right(90)\n    forward(abs(endX - startX))\n    right(90)\n    forward(abs(endY - startY))\n    right(90)\n    \n    end_fill()\n    pu()\n\njson = json.loads(jsonStr)\ndata = json[\"shapes\"]\n\nspeed(0)\n\ns0 = data[0]\npos = s0[\"data\"]\ncolor = s0[\"color\"]\nrect(pos[0]  - 250 , -pos[1] + 300 , pos[2]  - 250 , -pos[3]  + 300 , color[0], color[1], color[2])\nfor s in data[1:]:\n    pos = s[\"data\"]\n    color = s[\"color\"]\n    draw_circle(pos[0] - 250 , -pos[1] + 300 - pos[2] , pos[2] , color[0], color[1], color[2])\n```\n![](/assets/me.jpg)\n```javascript\nvar drawing=document.getElementById(\"myCanvas\");\n\tif (drawing.getContext){\n\t\tvar ctx = drawing.getContext(\"2d\");\n        var index = 0;\n        function heart(){\n\t\tvar arrays = data[\"shapes\"];\n\t\tvar pos = arrays[index][\"data\"];\n\t\tvar color = arrays[index][\"color\"];\n\t\tvar type = arrays[index][\"type\"];\n\t\tswitch(type){\n\t\tcase 1: \n\t\tctx.fillStyle = \"rgba(\" + color[0] + \", \"+ color[1] + \",  \"+ color[2] + \", \" + color[3] / 255 + \")\";\n\t\tctx.fillRect (pos[0] , pos[1] ,(pos[2] - pos[0]) , (pos[3] - pos[1]));\n\t\tbreak;\n\t\tcase 32:\n          ctx.fillStyle = \"rgba(\" + color[0] + \", \"+ color[1] + \",  \"+ color[2] + \", \" + color[3] / 255 + \")\";\n\t\t   ctx.beginPath();\n\t\t   ctx.arc(pos[0] ,pos[1] ,pos[2] ,0,2*Math.PI);\n\t\t   ctx.fill();\n\t\t   break;\n\t\t   //case 64:\n\t\t   //ctx.strokeStyle=\"rgba(\" + color[0] + \", \"+ color[1] + \",  \"+ color[2] + \", \" + color[3] / 255 + \")\";\n\t\t   //ctx.beginPath();\n\t\t   //ctx.moveTo(n.get_x1(a),n.get_y1(a));\n\t\t   //ctx.lineTo(n.get_x2(a),n.get_y2(a));\n\t\t   //ctx.stroke();\n\t\t   //break; -->\n\t\t   }\n            index++;\n            if (index > arrays.length){\n                clearInterval(intervalId);\n            }\n        }\n        intervalId = setInterval(heart,25);\n\t}\n```\n\n[https://github.com/fogleman/primitive](https://github.com/fogleman/primitive)\n\n[https://www.samcodes.co.uk/project/geometrize-haxe-web/](https://www.samcodes.co.uk/project/geometrize-haxe-web/)","source":"_posts/primitive.md","raw":"---\ntitle: 用几何原语再现图像\ntags: javascript\ndate: 2020-10-04 08:28:13\ncategories:\nmp3:\ncover:\n---\n\n![](/assets/me_rect.jpg)\n![](/assets/me_cricle.jpg)\n\n```python\ndef draw_circle(startX, startY, radius, r, g, b):\n    pu()\n    colormode(255)\n    pencolor(r, g, b)\n    begin_fill()\n    fillcolor((r, g, b))\n    goto(startX, startY)\n    pd()\n    \n    circle(radius)\n    \n    end_fill()\n    pu()\n\ndef line(startX, startY, endX, endY, r, g, b):\n    colormode(255)\n    pencolor(r, g, b)\n    begin_fill()\n    fillcolor((r, g, b))\n    goto(startX, startY)\n    pd()\n    forward(abs(endX - startX))\n    right(90)\n    forward(abs(endY - startY))\n    right(90)\n    forward(abs(endX - startX))\n    right(90)\n    forward(abs(endY - startY))\n    right(90)\n    \n    end_fill()\n    pu()\n\ndef rect(startX, startY, endX, endY, r, g, b):\n    colormode(255)\n    pencolor(r, g, b)\n    begin_fill()\n    fillcolor((r, g, b))\n    goto(startX, startY)\n    pd()\n    forward(abs(endX - startX))\n    right(90)\n    forward(abs(endY - startY))\n    right(90)\n    forward(abs(endX - startX))\n    right(90)\n    forward(abs(endY - startY))\n    right(90)\n    \n    end_fill()\n    pu()\n\njson = json.loads(jsonStr)\ndata = json[\"shapes\"]\n\nspeed(0)\n\ns0 = data[0]\npos = s0[\"data\"]\ncolor = s0[\"color\"]\nrect(pos[0]  - 250 , -pos[1] + 300 , pos[2]  - 250 , -pos[3]  + 300 , color[0], color[1], color[2])\nfor s in data[1:]:\n    pos = s[\"data\"]\n    color = s[\"color\"]\n    draw_circle(pos[0] - 250 , -pos[1] + 300 - pos[2] , pos[2] , color[0], color[1], color[2])\n```\n![](/assets/me.jpg)\n```javascript\nvar drawing=document.getElementById(\"myCanvas\");\n\tif (drawing.getContext){\n\t\tvar ctx = drawing.getContext(\"2d\");\n        var index = 0;\n        function heart(){\n\t\tvar arrays = data[\"shapes\"];\n\t\tvar pos = arrays[index][\"data\"];\n\t\tvar color = arrays[index][\"color\"];\n\t\tvar type = arrays[index][\"type\"];\n\t\tswitch(type){\n\t\tcase 1: \n\t\tctx.fillStyle = \"rgba(\" + color[0] + \", \"+ color[1] + \",  \"+ color[2] + \", \" + color[3] / 255 + \")\";\n\t\tctx.fillRect (pos[0] , pos[1] ,(pos[2] - pos[0]) , (pos[3] - pos[1]));\n\t\tbreak;\n\t\tcase 32:\n          ctx.fillStyle = \"rgba(\" + color[0] + \", \"+ color[1] + \",  \"+ color[2] + \", \" + color[3] / 255 + \")\";\n\t\t   ctx.beginPath();\n\t\t   ctx.arc(pos[0] ,pos[1] ,pos[2] ,0,2*Math.PI);\n\t\t   ctx.fill();\n\t\t   break;\n\t\t   //case 64:\n\t\t   //ctx.strokeStyle=\"rgba(\" + color[0] + \", \"+ color[1] + \",  \"+ color[2] + \", \" + color[3] / 255 + \")\";\n\t\t   //ctx.beginPath();\n\t\t   //ctx.moveTo(n.get_x1(a),n.get_y1(a));\n\t\t   //ctx.lineTo(n.get_x2(a),n.get_y2(a));\n\t\t   //ctx.stroke();\n\t\t   //break; -->\n\t\t   }\n            index++;\n            if (index > arrays.length){\n                clearInterval(intervalId);\n            }\n        }\n        intervalId = setInterval(heart,25);\n\t}\n```\n\n[https://github.com/fogleman/primitive](https://github.com/fogleman/primitive)\n\n[https://www.samcodes.co.uk/project/geometrize-haxe-web/](https://www.samcodes.co.uk/project/geometrize-haxe-web/)","slug":"primitive","published":1,"updated":"2021-02-06T11:36:06.041Z","_id":"ckfud9zsa0000z0uidflc3ppm","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"/assets/me_rect.jpg\"><br><img src=\"/assets/me_cricle.jpg\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">draw_circle</span>(<span class=\"params\">startX, startY, radius, r, g, b</span>):</span></span><br><span class=\"line\">    pu()</span><br><span class=\"line\">    colormode(<span class=\"number\">255</span>)</span><br><span class=\"line\">    pencolor(r, g, b)</span><br><span class=\"line\">    begin_fill()</span><br><span class=\"line\">    fillcolor((r, g, b))</span><br><span class=\"line\">    goto(startX, startY)</span><br><span class=\"line\">    pd()</span><br><span class=\"line\">    </span><br><span class=\"line\">    circle(radius)</span><br><span class=\"line\">    </span><br><span class=\"line\">    end_fill()</span><br><span class=\"line\">    pu()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">line</span>(<span class=\"params\">startX, startY, endX, endY, r, g, b</span>):</span></span><br><span class=\"line\">    colormode(<span class=\"number\">255</span>)</span><br><span class=\"line\">    pencolor(r, g, b)</span><br><span class=\"line\">    begin_fill()</span><br><span class=\"line\">    fillcolor((r, g, b))</span><br><span class=\"line\">    goto(startX, startY)</span><br><span class=\"line\">    pd()</span><br><span class=\"line\">    forward(abs(endX - startX))</span><br><span class=\"line\">    right(<span class=\"number\">90</span>)</span><br><span class=\"line\">    forward(abs(endY - startY))</span><br><span class=\"line\">    right(<span class=\"number\">90</span>)</span><br><span class=\"line\">    forward(abs(endX - startX))</span><br><span class=\"line\">    right(<span class=\"number\">90</span>)</span><br><span class=\"line\">    forward(abs(endY - startY))</span><br><span class=\"line\">    right(<span class=\"number\">90</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    end_fill()</span><br><span class=\"line\">    pu()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">rect</span>(<span class=\"params\">startX, startY, endX, endY, r, g, b</span>):</span></span><br><span class=\"line\">    colormode(<span class=\"number\">255</span>)</span><br><span class=\"line\">    pencolor(r, g, b)</span><br><span class=\"line\">    begin_fill()</span><br><span class=\"line\">    fillcolor((r, g, b))</span><br><span class=\"line\">    goto(startX, startY)</span><br><span class=\"line\">    pd()</span><br><span class=\"line\">    forward(abs(endX - startX))</span><br><span class=\"line\">    right(<span class=\"number\">90</span>)</span><br><span class=\"line\">    forward(abs(endY - startY))</span><br><span class=\"line\">    right(<span class=\"number\">90</span>)</span><br><span class=\"line\">    forward(abs(endX - startX))</span><br><span class=\"line\">    right(<span class=\"number\">90</span>)</span><br><span class=\"line\">    forward(abs(endY - startY))</span><br><span class=\"line\">    right(<span class=\"number\">90</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    end_fill()</span><br><span class=\"line\">    pu()</span><br><span class=\"line\"></span><br><span class=\"line\">json = json.loads(jsonStr)</span><br><span class=\"line\">data = json[<span class=\"string\">&quot;shapes&quot;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">speed(<span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">s0 = data[<span class=\"number\">0</span>]</span><br><span class=\"line\">pos = s0[<span class=\"string\">&quot;data&quot;</span>]</span><br><span class=\"line\">color = s0[<span class=\"string\">&quot;color&quot;</span>]</span><br><span class=\"line\">rect(pos[<span class=\"number\">0</span>]  - <span class=\"number\">250</span> , -pos[<span class=\"number\">1</span>] + <span class=\"number\">300</span> , pos[<span class=\"number\">2</span>]  - <span class=\"number\">250</span> , -pos[<span class=\"number\">3</span>]  + <span class=\"number\">300</span> , color[<span class=\"number\">0</span>], color[<span class=\"number\">1</span>], color[<span class=\"number\">2</span>])</span><br><span class=\"line\"><span class=\"keyword\">for</span> s <span class=\"keyword\">in</span> data[<span class=\"number\">1</span>:]:</span><br><span class=\"line\">    pos = s[<span class=\"string\">&quot;data&quot;</span>]</span><br><span class=\"line\">    color = s[<span class=\"string\">&quot;color&quot;</span>]</span><br><span class=\"line\">    draw_circle(pos[<span class=\"number\">0</span>] - <span class=\"number\">250</span> , -pos[<span class=\"number\">1</span>] + <span class=\"number\">300</span> - pos[<span class=\"number\">2</span>] , pos[<span class=\"number\">2</span>] , color[<span class=\"number\">0</span>], color[<span class=\"number\">1</span>], color[<span class=\"number\">2</span>])</span><br></pre></td></tr></table></figure>\n<p><img src=\"/assets/me.jpg\"></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> drawing=<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&quot;myCanvas&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (drawing.getContext)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> ctx = drawing.getContext(<span class=\"string\">&quot;2d&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> index = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">heart</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> arrays = data[<span class=\"string\">&quot;shapes&quot;</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> pos = arrays[index][<span class=\"string\">&quot;data&quot;</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> color = arrays[index][<span class=\"string\">&quot;color&quot;</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> type = arrays[index][<span class=\"string\">&quot;type&quot;</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">switch</span>(type)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"number\">1</span>: </span><br><span class=\"line\">\t\tctx.fillStyle = <span class=\"string\">&quot;rgba(&quot;</span> + color[<span class=\"number\">0</span>] + <span class=\"string\">&quot;, &quot;</span>+ color[<span class=\"number\">1</span>] + <span class=\"string\">&quot;,  &quot;</span>+ color[<span class=\"number\">2</span>] + <span class=\"string\">&quot;, &quot;</span> + color[<span class=\"number\">3</span>] / <span class=\"number\">255</span> + <span class=\"string\">&quot;)&quot;</span>;</span><br><span class=\"line\">\t\tctx.fillRect (pos[<span class=\"number\">0</span>] , pos[<span class=\"number\">1</span>] ,(pos[<span class=\"number\">2</span>] - pos[<span class=\"number\">0</span>]) , (pos[<span class=\"number\">3</span>] - pos[<span class=\"number\">1</span>]));</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"number\">32</span>:</span><br><span class=\"line\">          ctx.fillStyle = <span class=\"string\">&quot;rgba(&quot;</span> + color[<span class=\"number\">0</span>] + <span class=\"string\">&quot;, &quot;</span>+ color[<span class=\"number\">1</span>] + <span class=\"string\">&quot;,  &quot;</span>+ color[<span class=\"number\">2</span>] + <span class=\"string\">&quot;, &quot;</span> + color[<span class=\"number\">3</span>] / <span class=\"number\">255</span> + <span class=\"string\">&quot;)&quot;</span>;</span><br><span class=\"line\">\t\t   ctx.beginPath();</span><br><span class=\"line\">\t\t   ctx.arc(pos[<span class=\"number\">0</span>] ,pos[<span class=\"number\">1</span>] ,pos[<span class=\"number\">2</span>] ,<span class=\"number\">0</span>,<span class=\"number\">2</span>*<span class=\"built_in\">Math</span>.PI);</span><br><span class=\"line\">\t\t   ctx.fill();</span><br><span class=\"line\">\t\t   <span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t   <span class=\"comment\">//case 64:</span></span><br><span class=\"line\">\t\t   <span class=\"comment\">//ctx.strokeStyle=&quot;rgba(&quot; + color[0] + &quot;, &quot;+ color[1] + &quot;,  &quot;+ color[2] + &quot;, &quot; + color[3] / 255 + &quot;)&quot;;</span></span><br><span class=\"line\">\t\t   <span class=\"comment\">//ctx.beginPath();</span></span><br><span class=\"line\">\t\t   <span class=\"comment\">//ctx.moveTo(n.get_x1(a),n.get_y1(a));</span></span><br><span class=\"line\">\t\t   <span class=\"comment\">//ctx.lineTo(n.get_x2(a),n.get_y2(a));</span></span><br><span class=\"line\">\t\t   <span class=\"comment\">//ctx.stroke();</span></span><br><span class=\"line\">\t\t   <span class=\"comment\">//break; --&gt;</span></span><br><span class=\"line\">\t\t   &#125;</span><br><span class=\"line\">            index++;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (index &gt; arrays.length)&#123;</span><br><span class=\"line\">                <span class=\"built_in\">clearInterval</span>(intervalId);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        intervalId = <span class=\"built_in\">setInterval</span>(heart,<span class=\"number\">25</span>);</span><br><span class=\"line\">\t&#125;</span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://github.com/fogleman/primitive\">https://github.com/fogleman/primitive</a></p>\n<p><a href=\"https://www.samcodes.co.uk/project/geometrize-haxe-web/\">https://www.samcodes.co.uk/project/geometrize-haxe-web/</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/assets/me_rect.jpg\"><br><img src=\"/assets/me_cricle.jpg\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">draw_circle</span>(<span class=\"params\">startX, startY, radius, r, g, b</span>):</span></span><br><span class=\"line\">    pu()</span><br><span class=\"line\">    colormode(<span class=\"number\">255</span>)</span><br><span class=\"line\">    pencolor(r, g, b)</span><br><span class=\"line\">    begin_fill()</span><br><span class=\"line\">    fillcolor((r, g, b))</span><br><span class=\"line\">    goto(startX, startY)</span><br><span class=\"line\">    pd()</span><br><span class=\"line\">    </span><br><span class=\"line\">    circle(radius)</span><br><span class=\"line\">    </span><br><span class=\"line\">    end_fill()</span><br><span class=\"line\">    pu()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">line</span>(<span class=\"params\">startX, startY, endX, endY, r, g, b</span>):</span></span><br><span class=\"line\">    colormode(<span class=\"number\">255</span>)</span><br><span class=\"line\">    pencolor(r, g, b)</span><br><span class=\"line\">    begin_fill()</span><br><span class=\"line\">    fillcolor((r, g, b))</span><br><span class=\"line\">    goto(startX, startY)</span><br><span class=\"line\">    pd()</span><br><span class=\"line\">    forward(abs(endX - startX))</span><br><span class=\"line\">    right(<span class=\"number\">90</span>)</span><br><span class=\"line\">    forward(abs(endY - startY))</span><br><span class=\"line\">    right(<span class=\"number\">90</span>)</span><br><span class=\"line\">    forward(abs(endX - startX))</span><br><span class=\"line\">    right(<span class=\"number\">90</span>)</span><br><span class=\"line\">    forward(abs(endY - startY))</span><br><span class=\"line\">    right(<span class=\"number\">90</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    end_fill()</span><br><span class=\"line\">    pu()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">rect</span>(<span class=\"params\">startX, startY, endX, endY, r, g, b</span>):</span></span><br><span class=\"line\">    colormode(<span class=\"number\">255</span>)</span><br><span class=\"line\">    pencolor(r, g, b)</span><br><span class=\"line\">    begin_fill()</span><br><span class=\"line\">    fillcolor((r, g, b))</span><br><span class=\"line\">    goto(startX, startY)</span><br><span class=\"line\">    pd()</span><br><span class=\"line\">    forward(abs(endX - startX))</span><br><span class=\"line\">    right(<span class=\"number\">90</span>)</span><br><span class=\"line\">    forward(abs(endY - startY))</span><br><span class=\"line\">    right(<span class=\"number\">90</span>)</span><br><span class=\"line\">    forward(abs(endX - startX))</span><br><span class=\"line\">    right(<span class=\"number\">90</span>)</span><br><span class=\"line\">    forward(abs(endY - startY))</span><br><span class=\"line\">    right(<span class=\"number\">90</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    end_fill()</span><br><span class=\"line\">    pu()</span><br><span class=\"line\"></span><br><span class=\"line\">json = json.loads(jsonStr)</span><br><span class=\"line\">data = json[<span class=\"string\">&quot;shapes&quot;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">speed(<span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">s0 = data[<span class=\"number\">0</span>]</span><br><span class=\"line\">pos = s0[<span class=\"string\">&quot;data&quot;</span>]</span><br><span class=\"line\">color = s0[<span class=\"string\">&quot;color&quot;</span>]</span><br><span class=\"line\">rect(pos[<span class=\"number\">0</span>]  - <span class=\"number\">250</span> , -pos[<span class=\"number\">1</span>] + <span class=\"number\">300</span> , pos[<span class=\"number\">2</span>]  - <span class=\"number\">250</span> , -pos[<span class=\"number\">3</span>]  + <span class=\"number\">300</span> , color[<span class=\"number\">0</span>], color[<span class=\"number\">1</span>], color[<span class=\"number\">2</span>])</span><br><span class=\"line\"><span class=\"keyword\">for</span> s <span class=\"keyword\">in</span> data[<span class=\"number\">1</span>:]:</span><br><span class=\"line\">    pos = s[<span class=\"string\">&quot;data&quot;</span>]</span><br><span class=\"line\">    color = s[<span class=\"string\">&quot;color&quot;</span>]</span><br><span class=\"line\">    draw_circle(pos[<span class=\"number\">0</span>] - <span class=\"number\">250</span> , -pos[<span class=\"number\">1</span>] + <span class=\"number\">300</span> - pos[<span class=\"number\">2</span>] , pos[<span class=\"number\">2</span>] , color[<span class=\"number\">0</span>], color[<span class=\"number\">1</span>], color[<span class=\"number\">2</span>])</span><br></pre></td></tr></table></figure>\n<p><img src=\"/assets/me.jpg\"></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> drawing=<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&quot;myCanvas&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (drawing.getContext)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> ctx = drawing.getContext(<span class=\"string\">&quot;2d&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> index = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">heart</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> arrays = data[<span class=\"string\">&quot;shapes&quot;</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> pos = arrays[index][<span class=\"string\">&quot;data&quot;</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> color = arrays[index][<span class=\"string\">&quot;color&quot;</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> type = arrays[index][<span class=\"string\">&quot;type&quot;</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">switch</span>(type)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"number\">1</span>: </span><br><span class=\"line\">\t\tctx.fillStyle = <span class=\"string\">&quot;rgba(&quot;</span> + color[<span class=\"number\">0</span>] + <span class=\"string\">&quot;, &quot;</span>+ color[<span class=\"number\">1</span>] + <span class=\"string\">&quot;,  &quot;</span>+ color[<span class=\"number\">2</span>] + <span class=\"string\">&quot;, &quot;</span> + color[<span class=\"number\">3</span>] / <span class=\"number\">255</span> + <span class=\"string\">&quot;)&quot;</span>;</span><br><span class=\"line\">\t\tctx.fillRect (pos[<span class=\"number\">0</span>] , pos[<span class=\"number\">1</span>] ,(pos[<span class=\"number\">2</span>] - pos[<span class=\"number\">0</span>]) , (pos[<span class=\"number\">3</span>] - pos[<span class=\"number\">1</span>]));</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"number\">32</span>:</span><br><span class=\"line\">          ctx.fillStyle = <span class=\"string\">&quot;rgba(&quot;</span> + color[<span class=\"number\">0</span>] + <span class=\"string\">&quot;, &quot;</span>+ color[<span class=\"number\">1</span>] + <span class=\"string\">&quot;,  &quot;</span>+ color[<span class=\"number\">2</span>] + <span class=\"string\">&quot;, &quot;</span> + color[<span class=\"number\">3</span>] / <span class=\"number\">255</span> + <span class=\"string\">&quot;)&quot;</span>;</span><br><span class=\"line\">\t\t   ctx.beginPath();</span><br><span class=\"line\">\t\t   ctx.arc(pos[<span class=\"number\">0</span>] ,pos[<span class=\"number\">1</span>] ,pos[<span class=\"number\">2</span>] ,<span class=\"number\">0</span>,<span class=\"number\">2</span>*<span class=\"built_in\">Math</span>.PI);</span><br><span class=\"line\">\t\t   ctx.fill();</span><br><span class=\"line\">\t\t   <span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t   <span class=\"comment\">//case 64:</span></span><br><span class=\"line\">\t\t   <span class=\"comment\">//ctx.strokeStyle=&quot;rgba(&quot; + color[0] + &quot;, &quot;+ color[1] + &quot;,  &quot;+ color[2] + &quot;, &quot; + color[3] / 255 + &quot;)&quot;;</span></span><br><span class=\"line\">\t\t   <span class=\"comment\">//ctx.beginPath();</span></span><br><span class=\"line\">\t\t   <span class=\"comment\">//ctx.moveTo(n.get_x1(a),n.get_y1(a));</span></span><br><span class=\"line\">\t\t   <span class=\"comment\">//ctx.lineTo(n.get_x2(a),n.get_y2(a));</span></span><br><span class=\"line\">\t\t   <span class=\"comment\">//ctx.stroke();</span></span><br><span class=\"line\">\t\t   <span class=\"comment\">//break; --&gt;</span></span><br><span class=\"line\">\t\t   &#125;</span><br><span class=\"line\">            index++;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (index &gt; arrays.length)&#123;</span><br><span class=\"line\">                <span class=\"built_in\">clearInterval</span>(intervalId);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        intervalId = <span class=\"built_in\">setInterval</span>(heart,<span class=\"number\">25</span>);</span><br><span class=\"line\">\t&#125;</span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://github.com/fogleman/primitive\">https://github.com/fogleman/primitive</a></p>\n<p><a href=\"https://www.samcodes.co.uk/project/geometrize-haxe-web/\">https://www.samcodes.co.uk/project/geometrize-haxe-web/</a></p>\n"},{"title":"802.1.x认证","date":"2020-10-04T00:45:00.000Z","mp3":null,"cover":null,"_content":"公司的上网验证使用802.1.x，但是使用的是私有的客户端（只有mac和win），而且还有很多限制。\n为了在linux平台上使用，开始了该项目。\n由于不清楚密码如何加密的，但是确定加密与次数和时间没有关系，可以抓包获取认证的密钥。生成password.bin用于其他机器的认证。\n\n在已安装客户端的机器上运行\n```golang\npackage main\n\nimport (\n\t\"flag\"\n\t\"fmt\"\n\t\"github.com/google/gopacket\"\n\t\"github.com/google/gopacket/layers\"\n\t\"github.com/google/gopacket/pcap\"\n\t\"io/ioutil\"\n)\n\nvar iface = flag.String(\"i\", \"\\\\Device\\\\NPF_{540078E3-B5F2-4E7A-9D21-}\", \"Interface to read packets from\")\n\nfunc main() {\n\tflag.Parse()\n\tfilterStr := fmt.Sprintf(\"(ether proto 0x888e)\")\n\tfmt.Println(*iface)\n\thandle, err := pcap.OpenLive(*iface, 65536, true, pcap.BlockForever)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\terr = handle.SetBPFFilter(filterStr)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tdefer handle.Close()\n\n\tvar userName, passWord []byte\n\tfor userName == nil || passWord == nil {\n\t\tdata, _, err := handle.ReadPacketData()\n\t\tif err == pcap.NextErrorTimeoutExpired {\n\t\t\tcontinue\n\t\t} else if err != nil {\n\t\t\tpanic(err)\n\t\t}\n\t\tpacket := gopacket.NewPacket(data, layers.LayerTypeEthernet, gopacket.NoCopy)\n\t\tif eapLayer := packet.Layer(layers.LayerTypeEAP); eapLayer != nil {\n\t\t\teap := eapLayer.(*layers.EAP)\n\t\t\tswitch eap.Code {\n\t\t\tcase layers.EAPCodeResponse:\n\t\t\t\tswitch eap.Type {\n\t\t\t\tcase layers.EAPTypeIdentity:\n\t\t\t\t\tuserName = eap.TypeData\n\t\t\t\t\tfmt.Printf(\"%s\", string(userName))\n\t\t\t\tcase 0x66:\n\t\t\t\t\tpassWord = eap.TypeData\n\t\t\t\t\tfmt.Println()\n\t\t\t\t\tfmt.Printf(\"%x\", passWord)\n\t\t\t\tdefault:\n\t\t\t\t\tfmt.Println(\"unknown eap type:\", eap.Type)\n\t\t\t\t}\n\t\t\tcase layers.EAPCodeSuccess:\n\t\t\tcase layers.EAPCodeFailure:\n\t\t\t\treturn\n\t\t\tdefault:\n\t\t\t\tfmt.Println(\"unknown epa code:\", eap.Code)\n\t\t\t}\n\t\t}\n\t}\n\n\tuserName = append(userName, 0xff)\n\tuserName = append(userName, passWord...)\n\te := ioutil.WriteFile(\"password.bin\", userName, 0644)\n\tif e != nil {\n\t\tpanic(e)\n\t}\n}\n```\n\n\n在其他需要认证的机器上运行\n```golang\npackage main\n\nimport (\n\t\"flag\"\n\t\"fmt\"\n\t\"github.com/google/gopacket\"\n\t\"github.com/google/gopacket/layers\"\n\t\"github.com/google/gopacket/pcap\"\n\t\"io/ioutil\"\n\t\"net\"\n\t\"sync\"\n\t\"time\"\n)\n\nvar (\n\tinterfaceName string\n\tlocalMac      string\n)\n\nfunc init() {\n\tflag.StringVar(&interfaceName, \"interface\", \"\", \"interface name\")\n\tflag.StringVar(&localMac, \"mac\", \"\", \"mac address\")\n}\n\n//https://github.com/google/gopacket/issues/456\nfunc main() {\n\tflag.Parse()\n\tauthentication(interfaceName, localMac)\n\n}\n\nfunc authentication(interfaceName string, localMac string) {\n\n\tfilterStr := fmt.Sprintf(\n\t\t\"(ether proto 0x888e) and (ether dst host %s)\", localMac)\n\thandle, err := pcap.OpenLive(interfaceName, 65536, true, pcap.BlockForever)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\terr = handle.SetBPFFilter(filterStr)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tdefer handle.Close()\n\n\tstop := make(chan int)\n\thwAddr, err := net.ParseMAC(localMac)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\tdata, err := ioutil.ReadFile(\"password.bin\")\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tvar index int\n\tfor i, v := range data {\n\t\tif v == byte(0xff) {\n\t\t\tindex = i\n\t\t}\n\t}\n\tusername := string(data[0:index])\n\tpasswd := data[index+1:]\n\n\tgo readEap(handle, hwAddr, stop, username, passwd)\n\tdefer close(stop)\n\n\ttime.Sleep(3000)\n\tgo broadcast(handle, hwAddr)\n\n\tvar wg sync.WaitGroup\n\twg.Add(1)\n\twg.Wait()\n}\n\nfunc readEap(handle *pcap.Handle, localMac net.HardwareAddr, stop chan int, username string, password []byte) {\n\tsrc := gopacket.NewPacketSource(handle, layers.LayerTypeEthernet)\n\tin := src.Packets()\n\tfor {\n\t\tvar packet gopacket.Packet\n\t\tselect {\n\t\tcase <-stop:\n\t\t\treturn\n\t\tcase packet = <-in:\n\t\t\tethLayer := packet.Layer(layers.LayerTypeEthernet)\n\t\t\tif ethLayer == nil {\n\t\t\t\treturn\n\t\t\t}\n\t\t\teth := ethLayer.(*layers.Ethernet)\n\t\t\tsrcMac := eth.SrcMAC\n\n\t\t\teapLayer := packet.Layer(layers.LayerTypeEAP)\n\t\t\tif eapLayer == nil {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\teap := eapLayer.(*layers.EAP)\n\t\t\tfmt.Println(\"eap data: \", eap)\n\n\t\t\tswitch eap.Code {\n\t\t\tcase layers.EAPCodeRequest:\n\t\t\t\tswitch eap.Type {\n\t\t\t\tcase layers.EAPTypeIdentity:\n\t\t\t\t\tsendUserName(handle, localMac, srcMac, eap.Id, username)\n\t\t\t\tcase 0x66:\n\t\t\t\t\tsendPassword(handle, localMac, srcMac, eap.Id, password)\n\t\t\t\tdefault:\n\t\t\t\t\tfmt.Println(\"unknown eap type:\", eap.Type)\n\t\t\t\t}\n\t\t\tcase layers.EAPCodeSuccess:\n\t\t\t\tstop <- 1\n\t\t\t\tfmt.Println(\"epa success\")\n\t\t\tcase layers.EAPCodeFailure:\n\t\t\t\tfmt.Println(\"eap failure\")\n\t\t\tdefault:\n\t\t\t\tfmt.Println(\"unknown epa code:\", eap.Code)\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunc broadcast(handle *pcap.Handle, localMac net.HardwareAddr) error {\n\teth := layers.Ethernet{\n\t\tSrcMAC:       localMac,\n\t\tDstMAC:       net.HardwareAddr{0xff, 0xff, 0xff, 0xff, 0xff, 0xff},\n\t\tEthernetType: 0x888e,\n\t}\n\teaPol := layers.EAPOL{\n\t\tVersion: 0x01,\n\t\tType:    layers.EAPOLTypeStart,\n\t\tLength:  0x00,\n\t}\n\n\tbuf := gopacket.NewSerializeBuffer()\n\topts := gopacket.SerializeOptions{\n\t\tFixLengths:       true,\n\t\tComputeChecksums: true,\n\t}\n\tgopacket.SerializeLayers(buf, opts, &eth, &eaPol)\n\tfmt.Println(\"broadcast \")\n\tif err := handle.WritePacketData(buf.Bytes()); err != nil {\n\t\treturn err\n\t}\n\treturn nil\n}\n\nfunc sendUserName(handle *pcap.Handle, srcMac net.HardwareAddr, destAddr net.HardwareAddr, id uint8, username string) error {\n\teth := layers.Ethernet{\n\t\tSrcMAC:       srcMac,\n\t\tDstMAC:       destAddr,\n\t\tEthernetType: 0x888e,\n\t}\n\teap := layers.EAP{\n\t\tCode:     layers.EAPCodeResponse,\n\t\tId:       id,\n\t\tLength:   uint16(len([]byte(username))),\n\t\tType:     layers.EAPTypeIdentity,\n\t\tTypeData: []byte(username),\n\t}\n\n\tbuf := gopacket.NewSerializeBuffer()\n\topts := gopacket.SerializeOptions{\n\t\tFixLengths:       true,\n\t\tComputeChecksums: true,\n\t}\n\tgopacket.SerializeLayers(buf, opts, &eth, &eap)\n\tfmt.Println(\"send username \", username)\n\tif err := handle.WritePacketData(buf.Bytes()); err != nil {\n\t\treturn err\n\t}\n\treturn nil\n\n}\n\nfunc sendPassword(handle *pcap.Handle, srcMac net.HardwareAddr, destAddr net.HardwareAddr, id uint8, password []byte) error {\n\teth := layers.Ethernet{\n\t\tSrcMAC:       srcMac,\n\t\tDstMAC:       destAddr,\n\t\tEthernetType: 0x888e,\n\t}\n\n\teap := layers.EAP{\n\t\tCode:     layers.EAPCodeResponse,\n\t\tId:       id,\n\t\tLength:   uint16(len(password)),\n\t\tType:     layers.EAPTypeIdentity,\n\t\tTypeData: password,\n\t}\n\n\tbuf := gopacket.NewSerializeBuffer()\n\topts := gopacket.SerializeOptions{\n\t\tFixLengths:       true,\n\t\tComputeChecksums: true,\n\t}\n\tgopacket.SerializeLayers(buf, opts, &eth, &eap)\n\tif err := handle.WritePacketData(buf.Bytes()); err != nil {\n\t\treturn err\n\t}\n\treturn nil\n}\n```\n\n\n\n公司网络升级了 跟时间相关了。。。。。","source":"_posts/802-1-x.md","raw":"---\ntitle: 802.1.x认证\ndate: 2020-10-04 08:45:00\ntags:\ncategories:\nmp3:\ncover:\n---\n公司的上网验证使用802.1.x，但是使用的是私有的客户端（只有mac和win），而且还有很多限制。\n为了在linux平台上使用，开始了该项目。\n由于不清楚密码如何加密的，但是确定加密与次数和时间没有关系，可以抓包获取认证的密钥。生成password.bin用于其他机器的认证。\n\n在已安装客户端的机器上运行\n```golang\npackage main\n\nimport (\n\t\"flag\"\n\t\"fmt\"\n\t\"github.com/google/gopacket\"\n\t\"github.com/google/gopacket/layers\"\n\t\"github.com/google/gopacket/pcap\"\n\t\"io/ioutil\"\n)\n\nvar iface = flag.String(\"i\", \"\\\\Device\\\\NPF_{540078E3-B5F2-4E7A-9D21-}\", \"Interface to read packets from\")\n\nfunc main() {\n\tflag.Parse()\n\tfilterStr := fmt.Sprintf(\"(ether proto 0x888e)\")\n\tfmt.Println(*iface)\n\thandle, err := pcap.OpenLive(*iface, 65536, true, pcap.BlockForever)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\terr = handle.SetBPFFilter(filterStr)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tdefer handle.Close()\n\n\tvar userName, passWord []byte\n\tfor userName == nil || passWord == nil {\n\t\tdata, _, err := handle.ReadPacketData()\n\t\tif err == pcap.NextErrorTimeoutExpired {\n\t\t\tcontinue\n\t\t} else if err != nil {\n\t\t\tpanic(err)\n\t\t}\n\t\tpacket := gopacket.NewPacket(data, layers.LayerTypeEthernet, gopacket.NoCopy)\n\t\tif eapLayer := packet.Layer(layers.LayerTypeEAP); eapLayer != nil {\n\t\t\teap := eapLayer.(*layers.EAP)\n\t\t\tswitch eap.Code {\n\t\t\tcase layers.EAPCodeResponse:\n\t\t\t\tswitch eap.Type {\n\t\t\t\tcase layers.EAPTypeIdentity:\n\t\t\t\t\tuserName = eap.TypeData\n\t\t\t\t\tfmt.Printf(\"%s\", string(userName))\n\t\t\t\tcase 0x66:\n\t\t\t\t\tpassWord = eap.TypeData\n\t\t\t\t\tfmt.Println()\n\t\t\t\t\tfmt.Printf(\"%x\", passWord)\n\t\t\t\tdefault:\n\t\t\t\t\tfmt.Println(\"unknown eap type:\", eap.Type)\n\t\t\t\t}\n\t\t\tcase layers.EAPCodeSuccess:\n\t\t\tcase layers.EAPCodeFailure:\n\t\t\t\treturn\n\t\t\tdefault:\n\t\t\t\tfmt.Println(\"unknown epa code:\", eap.Code)\n\t\t\t}\n\t\t}\n\t}\n\n\tuserName = append(userName, 0xff)\n\tuserName = append(userName, passWord...)\n\te := ioutil.WriteFile(\"password.bin\", userName, 0644)\n\tif e != nil {\n\t\tpanic(e)\n\t}\n}\n```\n\n\n在其他需要认证的机器上运行\n```golang\npackage main\n\nimport (\n\t\"flag\"\n\t\"fmt\"\n\t\"github.com/google/gopacket\"\n\t\"github.com/google/gopacket/layers\"\n\t\"github.com/google/gopacket/pcap\"\n\t\"io/ioutil\"\n\t\"net\"\n\t\"sync\"\n\t\"time\"\n)\n\nvar (\n\tinterfaceName string\n\tlocalMac      string\n)\n\nfunc init() {\n\tflag.StringVar(&interfaceName, \"interface\", \"\", \"interface name\")\n\tflag.StringVar(&localMac, \"mac\", \"\", \"mac address\")\n}\n\n//https://github.com/google/gopacket/issues/456\nfunc main() {\n\tflag.Parse()\n\tauthentication(interfaceName, localMac)\n\n}\n\nfunc authentication(interfaceName string, localMac string) {\n\n\tfilterStr := fmt.Sprintf(\n\t\t\"(ether proto 0x888e) and (ether dst host %s)\", localMac)\n\thandle, err := pcap.OpenLive(interfaceName, 65536, true, pcap.BlockForever)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\terr = handle.SetBPFFilter(filterStr)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tdefer handle.Close()\n\n\tstop := make(chan int)\n\thwAddr, err := net.ParseMAC(localMac)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\tdata, err := ioutil.ReadFile(\"password.bin\")\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tvar index int\n\tfor i, v := range data {\n\t\tif v == byte(0xff) {\n\t\t\tindex = i\n\t\t}\n\t}\n\tusername := string(data[0:index])\n\tpasswd := data[index+1:]\n\n\tgo readEap(handle, hwAddr, stop, username, passwd)\n\tdefer close(stop)\n\n\ttime.Sleep(3000)\n\tgo broadcast(handle, hwAddr)\n\n\tvar wg sync.WaitGroup\n\twg.Add(1)\n\twg.Wait()\n}\n\nfunc readEap(handle *pcap.Handle, localMac net.HardwareAddr, stop chan int, username string, password []byte) {\n\tsrc := gopacket.NewPacketSource(handle, layers.LayerTypeEthernet)\n\tin := src.Packets()\n\tfor {\n\t\tvar packet gopacket.Packet\n\t\tselect {\n\t\tcase <-stop:\n\t\t\treturn\n\t\tcase packet = <-in:\n\t\t\tethLayer := packet.Layer(layers.LayerTypeEthernet)\n\t\t\tif ethLayer == nil {\n\t\t\t\treturn\n\t\t\t}\n\t\t\teth := ethLayer.(*layers.Ethernet)\n\t\t\tsrcMac := eth.SrcMAC\n\n\t\t\teapLayer := packet.Layer(layers.LayerTypeEAP)\n\t\t\tif eapLayer == nil {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\teap := eapLayer.(*layers.EAP)\n\t\t\tfmt.Println(\"eap data: \", eap)\n\n\t\t\tswitch eap.Code {\n\t\t\tcase layers.EAPCodeRequest:\n\t\t\t\tswitch eap.Type {\n\t\t\t\tcase layers.EAPTypeIdentity:\n\t\t\t\t\tsendUserName(handle, localMac, srcMac, eap.Id, username)\n\t\t\t\tcase 0x66:\n\t\t\t\t\tsendPassword(handle, localMac, srcMac, eap.Id, password)\n\t\t\t\tdefault:\n\t\t\t\t\tfmt.Println(\"unknown eap type:\", eap.Type)\n\t\t\t\t}\n\t\t\tcase layers.EAPCodeSuccess:\n\t\t\t\tstop <- 1\n\t\t\t\tfmt.Println(\"epa success\")\n\t\t\tcase layers.EAPCodeFailure:\n\t\t\t\tfmt.Println(\"eap failure\")\n\t\t\tdefault:\n\t\t\t\tfmt.Println(\"unknown epa code:\", eap.Code)\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunc broadcast(handle *pcap.Handle, localMac net.HardwareAddr) error {\n\teth := layers.Ethernet{\n\t\tSrcMAC:       localMac,\n\t\tDstMAC:       net.HardwareAddr{0xff, 0xff, 0xff, 0xff, 0xff, 0xff},\n\t\tEthernetType: 0x888e,\n\t}\n\teaPol := layers.EAPOL{\n\t\tVersion: 0x01,\n\t\tType:    layers.EAPOLTypeStart,\n\t\tLength:  0x00,\n\t}\n\n\tbuf := gopacket.NewSerializeBuffer()\n\topts := gopacket.SerializeOptions{\n\t\tFixLengths:       true,\n\t\tComputeChecksums: true,\n\t}\n\tgopacket.SerializeLayers(buf, opts, &eth, &eaPol)\n\tfmt.Println(\"broadcast \")\n\tif err := handle.WritePacketData(buf.Bytes()); err != nil {\n\t\treturn err\n\t}\n\treturn nil\n}\n\nfunc sendUserName(handle *pcap.Handle, srcMac net.HardwareAddr, destAddr net.HardwareAddr, id uint8, username string) error {\n\teth := layers.Ethernet{\n\t\tSrcMAC:       srcMac,\n\t\tDstMAC:       destAddr,\n\t\tEthernetType: 0x888e,\n\t}\n\teap := layers.EAP{\n\t\tCode:     layers.EAPCodeResponse,\n\t\tId:       id,\n\t\tLength:   uint16(len([]byte(username))),\n\t\tType:     layers.EAPTypeIdentity,\n\t\tTypeData: []byte(username),\n\t}\n\n\tbuf := gopacket.NewSerializeBuffer()\n\topts := gopacket.SerializeOptions{\n\t\tFixLengths:       true,\n\t\tComputeChecksums: true,\n\t}\n\tgopacket.SerializeLayers(buf, opts, &eth, &eap)\n\tfmt.Println(\"send username \", username)\n\tif err := handle.WritePacketData(buf.Bytes()); err != nil {\n\t\treturn err\n\t}\n\treturn nil\n\n}\n\nfunc sendPassword(handle *pcap.Handle, srcMac net.HardwareAddr, destAddr net.HardwareAddr, id uint8, password []byte) error {\n\teth := layers.Ethernet{\n\t\tSrcMAC:       srcMac,\n\t\tDstMAC:       destAddr,\n\t\tEthernetType: 0x888e,\n\t}\n\n\teap := layers.EAP{\n\t\tCode:     layers.EAPCodeResponse,\n\t\tId:       id,\n\t\tLength:   uint16(len(password)),\n\t\tType:     layers.EAPTypeIdentity,\n\t\tTypeData: password,\n\t}\n\n\tbuf := gopacket.NewSerializeBuffer()\n\topts := gopacket.SerializeOptions{\n\t\tFixLengths:       true,\n\t\tComputeChecksums: true,\n\t}\n\tgopacket.SerializeLayers(buf, opts, &eth, &eap)\n\tif err := handle.WritePacketData(buf.Bytes()); err != nil {\n\t\treturn err\n\t}\n\treturn nil\n}\n```\n\n\n\n公司网络升级了 跟时间相关了。。。。。","slug":"802-1-x","published":1,"updated":"2021-02-06T11:36:06.041Z","_id":"ckfudvg920000bkui4x4z5cvl","comments":1,"layout":"post","photos":[],"link":"","content":"<p>公司的上网验证使用802.1.x，但是使用的是私有的客户端（只有mac和win），而且还有很多限制。<br>为了在linux平台上使用，开始了该项目。<br>由于不清楚密码如何加密的，但是确定加密与次数和时间没有关系，可以抓包获取认证的密钥。生成password.bin用于其他机器的认证。</p>\n<p>在已安装客户端的机器上运行</p>\n<figure class=\"highlight golang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;flag&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;github.com/google/gopacket&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;github.com/google/gopacket/layers&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;github.com/google/gopacket/pcap&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;io/ioutil&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> iface = flag.String(<span class=\"string\">&quot;i&quot;</span>, <span class=\"string\">&quot;\\\\Device\\\\NPF_&#123;540078E3-B5F2-4E7A-9D21-&#125;&quot;</span>, <span class=\"string\">&quot;Interface to read packets from&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tflag.Parse()</span><br><span class=\"line\">\tfilterStr := fmt.Sprintf(<span class=\"string\">&quot;(ether proto 0x888e)&quot;</span>)</span><br><span class=\"line\">\tfmt.Println(*iface)</span><br><span class=\"line\">\thandle, err := pcap.OpenLive(*iface, <span class=\"number\">65536</span>, <span class=\"literal\">true</span>, pcap.BlockForever)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">panic</span>(err)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\terr = handle.SetBPFFilter(filterStr)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">panic</span>(err)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">defer</span> handle.Close()</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> userName, passWord []<span class=\"keyword\">byte</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> userName == <span class=\"literal\">nil</span> || passWord == <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\tdata, _, err := handle.ReadPacketData()</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> err == pcap.NextErrorTimeoutExpired &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">continue</span></span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">panic</span>(err)</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tpacket := gopacket.NewPacket(data, layers.LayerTypeEthernet, gopacket.NoCopy)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> eapLayer := packet.Layer(layers.LayerTypeEAP); eapLayer != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t\teap := eapLayer.(*layers.EAP)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">switch</span> eap.Code &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> layers.EAPCodeResponse:</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">switch</span> eap.Type &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">case</span> layers.EAPTypeIdentity:</span><br><span class=\"line\">\t\t\t\t\tuserName = eap.TypeData</span><br><span class=\"line\">\t\t\t\t\tfmt.Printf(<span class=\"string\">&quot;%s&quot;</span>, <span class=\"keyword\">string</span>(userName))</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">case</span> <span class=\"number\">0x66</span>:</span><br><span class=\"line\">\t\t\t\t\tpassWord = eap.TypeData</span><br><span class=\"line\">\t\t\t\t\tfmt.Println()</span><br><span class=\"line\">\t\t\t\t\tfmt.Printf(<span class=\"string\">&quot;%x&quot;</span>, passWord)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">default</span>:</span><br><span class=\"line\">\t\t\t\t\tfmt.Println(<span class=\"string\">&quot;unknown eap type:&quot;</span>, eap.Type)</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> layers.EAPCodeSuccess:</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> layers.EAPCodeFailure:</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">default</span>:</span><br><span class=\"line\">\t\t\t\tfmt.Println(<span class=\"string\">&quot;unknown epa code:&quot;</span>, eap.Code)</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tuserName = <span class=\"built_in\">append</span>(userName, <span class=\"number\">0xff</span>)</span><br><span class=\"line\">\tuserName = <span class=\"built_in\">append</span>(userName, passWord...)</span><br><span class=\"line\">\te := ioutil.WriteFile(<span class=\"string\">&quot;password.bin&quot;</span>, userName, <span class=\"number\">0644</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> e != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">panic</span>(e)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p>在其他需要认证的机器上运行</p>\n<figure class=\"highlight golang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;flag&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;github.com/google/gopacket&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;github.com/google/gopacket/layers&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;github.com/google/gopacket/pcap&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;io/ioutil&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;net&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;sync&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;time&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> (</span><br><span class=\"line\">\tinterfaceName <span class=\"keyword\">string</span></span><br><span class=\"line\">\tlocalMac      <span class=\"keyword\">string</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">init</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tflag.StringVar(&amp;interfaceName, <span class=\"string\">&quot;interface&quot;</span>, <span class=\"string\">&quot;&quot;</span>, <span class=\"string\">&quot;interface name&quot;</span>)</span><br><span class=\"line\">\tflag.StringVar(&amp;localMac, <span class=\"string\">&quot;mac&quot;</span>, <span class=\"string\">&quot;&quot;</span>, <span class=\"string\">&quot;mac address&quot;</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//https://github.com/google/gopacket/issues/456</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tflag.Parse()</span><br><span class=\"line\">\tauthentication(interfaceName, localMac)</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">authentication</span><span class=\"params\">(interfaceName <span class=\"keyword\">string</span>, localMac <span class=\"keyword\">string</span>)</span></span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tfilterStr := fmt.Sprintf(</span><br><span class=\"line\">\t\t<span class=\"string\">&quot;(ether proto 0x888e) and (ether dst host %s)&quot;</span>, localMac)</span><br><span class=\"line\">\thandle, err := pcap.OpenLive(interfaceName, <span class=\"number\">65536</span>, <span class=\"literal\">true</span>, pcap.BlockForever)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">panic</span>(err)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\terr = handle.SetBPFFilter(filterStr)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">panic</span>(err)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">defer</span> handle.Close()</span><br><span class=\"line\"></span><br><span class=\"line\">\tstop := <span class=\"built_in\">make</span>(<span class=\"keyword\">chan</span> <span class=\"keyword\">int</span>)</span><br><span class=\"line\">\thwAddr, err := net.ParseMAC(localMac)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">panic</span>(err)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tdata, err := ioutil.ReadFile(<span class=\"string\">&quot;password.bin&quot;</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">panic</span>(err)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> index <span class=\"keyword\">int</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i, v := <span class=\"keyword\">range</span> data &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> v == <span class=\"keyword\">byte</span>(<span class=\"number\">0xff</span>) &#123;</span><br><span class=\"line\">\t\t\tindex = i</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tusername := <span class=\"keyword\">string</span>(data[<span class=\"number\">0</span>:index])</span><br><span class=\"line\">\tpasswd := data[index+<span class=\"number\">1</span>:]</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">go</span> readEap(handle, hwAddr, stop, username, passwd)</span><br><span class=\"line\">\t<span class=\"keyword\">defer</span> <span class=\"built_in\">close</span>(stop)</span><br><span class=\"line\"></span><br><span class=\"line\">\ttime.Sleep(<span class=\"number\">3000</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">go</span> broadcast(handle, hwAddr)</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> wg sync.WaitGroup</span><br><span class=\"line\">\twg.Add(<span class=\"number\">1</span>)</span><br><span class=\"line\">\twg.Wait()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">readEap</span><span class=\"params\">(handle *pcap.Handle, localMac net.HardwareAddr, stop <span class=\"keyword\">chan</span> <span class=\"keyword\">int</span>, username <span class=\"keyword\">string</span>, password []<span class=\"keyword\">byte</span>)</span></span> &#123;</span><br><span class=\"line\">\tsrc := gopacket.NewPacketSource(handle, layers.LayerTypeEthernet)</span><br><span class=\"line\">\tin := src.Packets()</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> packet gopacket.Packet</span><br><span class=\"line\">\t\t<span class=\"keyword\">select</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> &lt;-stop:</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> packet = &lt;-in:</span><br><span class=\"line\">\t\t\tethLayer := packet.Layer(layers.LayerTypeEthernet)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> ethLayer == <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\teth := ethLayer.(*layers.Ethernet)</span><br><span class=\"line\">\t\t\tsrcMac := eth.SrcMAC</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\teapLayer := packet.Layer(layers.LayerTypeEAP)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> eapLayer == <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">continue</span></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\teap := eapLayer.(*layers.EAP)</span><br><span class=\"line\">\t\t\tfmt.Println(<span class=\"string\">&quot;eap data: &quot;</span>, eap)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">switch</span> eap.Code &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> layers.EAPCodeRequest:</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">switch</span> eap.Type &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">case</span> layers.EAPTypeIdentity:</span><br><span class=\"line\">\t\t\t\t\tsendUserName(handle, localMac, srcMac, eap.Id, username)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">case</span> <span class=\"number\">0x66</span>:</span><br><span class=\"line\">\t\t\t\t\tsendPassword(handle, localMac, srcMac, eap.Id, password)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">default</span>:</span><br><span class=\"line\">\t\t\t\t\tfmt.Println(<span class=\"string\">&quot;unknown eap type:&quot;</span>, eap.Type)</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> layers.EAPCodeSuccess:</span><br><span class=\"line\">\t\t\t\tstop &lt;- <span class=\"number\">1</span></span><br><span class=\"line\">\t\t\t\tfmt.Println(<span class=\"string\">&quot;epa success&quot;</span>)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> layers.EAPCodeFailure:</span><br><span class=\"line\">\t\t\t\tfmt.Println(<span class=\"string\">&quot;eap failure&quot;</span>)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">default</span>:</span><br><span class=\"line\">\t\t\t\tfmt.Println(<span class=\"string\">&quot;unknown epa code:&quot;</span>, eap.Code)</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">broadcast</span><span class=\"params\">(handle *pcap.Handle, localMac net.HardwareAddr)</span> <span class=\"title\">error</span></span> &#123;</span><br><span class=\"line\">\teth := layers.Ethernet&#123;</span><br><span class=\"line\">\t\tSrcMAC:       localMac,</span><br><span class=\"line\">\t\tDstMAC:       net.HardwareAddr&#123;<span class=\"number\">0xff</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0xff</span>&#125;,</span><br><span class=\"line\">\t\tEthernetType: <span class=\"number\">0x888e</span>,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\teaPol := layers.EAPOL&#123;</span><br><span class=\"line\">\t\tVersion: <span class=\"number\">0x01</span>,</span><br><span class=\"line\">\t\tType:    layers.EAPOLTypeStart,</span><br><span class=\"line\">\t\tLength:  <span class=\"number\">0x00</span>,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tbuf := gopacket.NewSerializeBuffer()</span><br><span class=\"line\">\topts := gopacket.SerializeOptions&#123;</span><br><span class=\"line\">\t\tFixLengths:       <span class=\"literal\">true</span>,</span><br><span class=\"line\">\t\tComputeChecksums: <span class=\"literal\">true</span>,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tgopacket.SerializeLayers(buf, opts, &amp;eth, &amp;eaPol)</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot;broadcast &quot;</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err := handle.WritePacketData(buf.Bytes()); err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> err</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">sendUserName</span><span class=\"params\">(handle *pcap.Handle, srcMac net.HardwareAddr, destAddr net.HardwareAddr, id <span class=\"keyword\">uint8</span>, username <span class=\"keyword\">string</span>)</span> <span class=\"title\">error</span></span> &#123;</span><br><span class=\"line\">\teth := layers.Ethernet&#123;</span><br><span class=\"line\">\t\tSrcMAC:       srcMac,</span><br><span class=\"line\">\t\tDstMAC:       destAddr,</span><br><span class=\"line\">\t\tEthernetType: <span class=\"number\">0x888e</span>,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\teap := layers.EAP&#123;</span><br><span class=\"line\">\t\tCode:     layers.EAPCodeResponse,</span><br><span class=\"line\">\t\tId:       id,</span><br><span class=\"line\">\t\tLength:   <span class=\"keyword\">uint16</span>(<span class=\"built_in\">len</span>([]<span class=\"keyword\">byte</span>(username))),</span><br><span class=\"line\">\t\tType:     layers.EAPTypeIdentity,</span><br><span class=\"line\">\t\tTypeData: []<span class=\"keyword\">byte</span>(username),</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tbuf := gopacket.NewSerializeBuffer()</span><br><span class=\"line\">\topts := gopacket.SerializeOptions&#123;</span><br><span class=\"line\">\t\tFixLengths:       <span class=\"literal\">true</span>,</span><br><span class=\"line\">\t\tComputeChecksums: <span class=\"literal\">true</span>,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tgopacket.SerializeLayers(buf, opts, &amp;eth, &amp;eap)</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot;send username &quot;</span>, username)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err := handle.WritePacketData(buf.Bytes()); err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> err</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">sendPassword</span><span class=\"params\">(handle *pcap.Handle, srcMac net.HardwareAddr, destAddr net.HardwareAddr, id <span class=\"keyword\">uint8</span>, password []<span class=\"keyword\">byte</span>)</span> <span class=\"title\">error</span></span> &#123;</span><br><span class=\"line\">\teth := layers.Ethernet&#123;</span><br><span class=\"line\">\t\tSrcMAC:       srcMac,</span><br><span class=\"line\">\t\tDstMAC:       destAddr,</span><br><span class=\"line\">\t\tEthernetType: <span class=\"number\">0x888e</span>,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\teap := layers.EAP&#123;</span><br><span class=\"line\">\t\tCode:     layers.EAPCodeResponse,</span><br><span class=\"line\">\t\tId:       id,</span><br><span class=\"line\">\t\tLength:   <span class=\"keyword\">uint16</span>(<span class=\"built_in\">len</span>(password)),</span><br><span class=\"line\">\t\tType:     layers.EAPTypeIdentity,</span><br><span class=\"line\">\t\tTypeData: password,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tbuf := gopacket.NewSerializeBuffer()</span><br><span class=\"line\">\topts := gopacket.SerializeOptions&#123;</span><br><span class=\"line\">\t\tFixLengths:       <span class=\"literal\">true</span>,</span><br><span class=\"line\">\t\tComputeChecksums: <span class=\"literal\">true</span>,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tgopacket.SerializeLayers(buf, opts, &amp;eth, &amp;eap)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err := handle.WritePacketData(buf.Bytes()); err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> err</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>公司网络升级了 跟时间相关了。。。。。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>公司的上网验证使用802.1.x，但是使用的是私有的客户端（只有mac和win），而且还有很多限制。<br>为了在linux平台上使用，开始了该项目。<br>由于不清楚密码如何加密的，但是确定加密与次数和时间没有关系，可以抓包获取认证的密钥。生成password.bin用于其他机器的认证。</p>\n<p>在已安装客户端的机器上运行</p>\n<figure class=\"highlight golang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;flag&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;github.com/google/gopacket&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;github.com/google/gopacket/layers&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;github.com/google/gopacket/pcap&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;io/ioutil&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> iface = flag.String(<span class=\"string\">&quot;i&quot;</span>, <span class=\"string\">&quot;\\\\Device\\\\NPF_&#123;540078E3-B5F2-4E7A-9D21-&#125;&quot;</span>, <span class=\"string\">&quot;Interface to read packets from&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tflag.Parse()</span><br><span class=\"line\">\tfilterStr := fmt.Sprintf(<span class=\"string\">&quot;(ether proto 0x888e)&quot;</span>)</span><br><span class=\"line\">\tfmt.Println(*iface)</span><br><span class=\"line\">\thandle, err := pcap.OpenLive(*iface, <span class=\"number\">65536</span>, <span class=\"literal\">true</span>, pcap.BlockForever)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">panic</span>(err)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\terr = handle.SetBPFFilter(filterStr)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">panic</span>(err)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">defer</span> handle.Close()</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> userName, passWord []<span class=\"keyword\">byte</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> userName == <span class=\"literal\">nil</span> || passWord == <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\tdata, _, err := handle.ReadPacketData()</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> err == pcap.NextErrorTimeoutExpired &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">continue</span></span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">panic</span>(err)</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tpacket := gopacket.NewPacket(data, layers.LayerTypeEthernet, gopacket.NoCopy)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> eapLayer := packet.Layer(layers.LayerTypeEAP); eapLayer != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t\teap := eapLayer.(*layers.EAP)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">switch</span> eap.Code &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> layers.EAPCodeResponse:</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">switch</span> eap.Type &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">case</span> layers.EAPTypeIdentity:</span><br><span class=\"line\">\t\t\t\t\tuserName = eap.TypeData</span><br><span class=\"line\">\t\t\t\t\tfmt.Printf(<span class=\"string\">&quot;%s&quot;</span>, <span class=\"keyword\">string</span>(userName))</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">case</span> <span class=\"number\">0x66</span>:</span><br><span class=\"line\">\t\t\t\t\tpassWord = eap.TypeData</span><br><span class=\"line\">\t\t\t\t\tfmt.Println()</span><br><span class=\"line\">\t\t\t\t\tfmt.Printf(<span class=\"string\">&quot;%x&quot;</span>, passWord)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">default</span>:</span><br><span class=\"line\">\t\t\t\t\tfmt.Println(<span class=\"string\">&quot;unknown eap type:&quot;</span>, eap.Type)</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> layers.EAPCodeSuccess:</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> layers.EAPCodeFailure:</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">default</span>:</span><br><span class=\"line\">\t\t\t\tfmt.Println(<span class=\"string\">&quot;unknown epa code:&quot;</span>, eap.Code)</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tuserName = <span class=\"built_in\">append</span>(userName, <span class=\"number\">0xff</span>)</span><br><span class=\"line\">\tuserName = <span class=\"built_in\">append</span>(userName, passWord...)</span><br><span class=\"line\">\te := ioutil.WriteFile(<span class=\"string\">&quot;password.bin&quot;</span>, userName, <span class=\"number\">0644</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> e != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">panic</span>(e)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p>在其他需要认证的机器上运行</p>\n<figure class=\"highlight golang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;flag&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;github.com/google/gopacket&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;github.com/google/gopacket/layers&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;github.com/google/gopacket/pcap&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;io/ioutil&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;net&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;sync&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;time&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> (</span><br><span class=\"line\">\tinterfaceName <span class=\"keyword\">string</span></span><br><span class=\"line\">\tlocalMac      <span class=\"keyword\">string</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">init</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tflag.StringVar(&amp;interfaceName, <span class=\"string\">&quot;interface&quot;</span>, <span class=\"string\">&quot;&quot;</span>, <span class=\"string\">&quot;interface name&quot;</span>)</span><br><span class=\"line\">\tflag.StringVar(&amp;localMac, <span class=\"string\">&quot;mac&quot;</span>, <span class=\"string\">&quot;&quot;</span>, <span class=\"string\">&quot;mac address&quot;</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//https://github.com/google/gopacket/issues/456</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tflag.Parse()</span><br><span class=\"line\">\tauthentication(interfaceName, localMac)</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">authentication</span><span class=\"params\">(interfaceName <span class=\"keyword\">string</span>, localMac <span class=\"keyword\">string</span>)</span></span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tfilterStr := fmt.Sprintf(</span><br><span class=\"line\">\t\t<span class=\"string\">&quot;(ether proto 0x888e) and (ether dst host %s)&quot;</span>, localMac)</span><br><span class=\"line\">\thandle, err := pcap.OpenLive(interfaceName, <span class=\"number\">65536</span>, <span class=\"literal\">true</span>, pcap.BlockForever)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">panic</span>(err)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\terr = handle.SetBPFFilter(filterStr)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">panic</span>(err)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">defer</span> handle.Close()</span><br><span class=\"line\"></span><br><span class=\"line\">\tstop := <span class=\"built_in\">make</span>(<span class=\"keyword\">chan</span> <span class=\"keyword\">int</span>)</span><br><span class=\"line\">\thwAddr, err := net.ParseMAC(localMac)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">panic</span>(err)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tdata, err := ioutil.ReadFile(<span class=\"string\">&quot;password.bin&quot;</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">panic</span>(err)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> index <span class=\"keyword\">int</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i, v := <span class=\"keyword\">range</span> data &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> v == <span class=\"keyword\">byte</span>(<span class=\"number\">0xff</span>) &#123;</span><br><span class=\"line\">\t\t\tindex = i</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tusername := <span class=\"keyword\">string</span>(data[<span class=\"number\">0</span>:index])</span><br><span class=\"line\">\tpasswd := data[index+<span class=\"number\">1</span>:]</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">go</span> readEap(handle, hwAddr, stop, username, passwd)</span><br><span class=\"line\">\t<span class=\"keyword\">defer</span> <span class=\"built_in\">close</span>(stop)</span><br><span class=\"line\"></span><br><span class=\"line\">\ttime.Sleep(<span class=\"number\">3000</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">go</span> broadcast(handle, hwAddr)</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> wg sync.WaitGroup</span><br><span class=\"line\">\twg.Add(<span class=\"number\">1</span>)</span><br><span class=\"line\">\twg.Wait()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">readEap</span><span class=\"params\">(handle *pcap.Handle, localMac net.HardwareAddr, stop <span class=\"keyword\">chan</span> <span class=\"keyword\">int</span>, username <span class=\"keyword\">string</span>, password []<span class=\"keyword\">byte</span>)</span></span> &#123;</span><br><span class=\"line\">\tsrc := gopacket.NewPacketSource(handle, layers.LayerTypeEthernet)</span><br><span class=\"line\">\tin := src.Packets()</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> packet gopacket.Packet</span><br><span class=\"line\">\t\t<span class=\"keyword\">select</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> &lt;-stop:</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> packet = &lt;-in:</span><br><span class=\"line\">\t\t\tethLayer := packet.Layer(layers.LayerTypeEthernet)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> ethLayer == <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\teth := ethLayer.(*layers.Ethernet)</span><br><span class=\"line\">\t\t\tsrcMac := eth.SrcMAC</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\teapLayer := packet.Layer(layers.LayerTypeEAP)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> eapLayer == <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">continue</span></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\teap := eapLayer.(*layers.EAP)</span><br><span class=\"line\">\t\t\tfmt.Println(<span class=\"string\">&quot;eap data: &quot;</span>, eap)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">switch</span> eap.Code &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> layers.EAPCodeRequest:</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">switch</span> eap.Type &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">case</span> layers.EAPTypeIdentity:</span><br><span class=\"line\">\t\t\t\t\tsendUserName(handle, localMac, srcMac, eap.Id, username)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">case</span> <span class=\"number\">0x66</span>:</span><br><span class=\"line\">\t\t\t\t\tsendPassword(handle, localMac, srcMac, eap.Id, password)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">default</span>:</span><br><span class=\"line\">\t\t\t\t\tfmt.Println(<span class=\"string\">&quot;unknown eap type:&quot;</span>, eap.Type)</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> layers.EAPCodeSuccess:</span><br><span class=\"line\">\t\t\t\tstop &lt;- <span class=\"number\">1</span></span><br><span class=\"line\">\t\t\t\tfmt.Println(<span class=\"string\">&quot;epa success&quot;</span>)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> layers.EAPCodeFailure:</span><br><span class=\"line\">\t\t\t\tfmt.Println(<span class=\"string\">&quot;eap failure&quot;</span>)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">default</span>:</span><br><span class=\"line\">\t\t\t\tfmt.Println(<span class=\"string\">&quot;unknown epa code:&quot;</span>, eap.Code)</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">broadcast</span><span class=\"params\">(handle *pcap.Handle, localMac net.HardwareAddr)</span> <span class=\"title\">error</span></span> &#123;</span><br><span class=\"line\">\teth := layers.Ethernet&#123;</span><br><span class=\"line\">\t\tSrcMAC:       localMac,</span><br><span class=\"line\">\t\tDstMAC:       net.HardwareAddr&#123;<span class=\"number\">0xff</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0xff</span>&#125;,</span><br><span class=\"line\">\t\tEthernetType: <span class=\"number\">0x888e</span>,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\teaPol := layers.EAPOL&#123;</span><br><span class=\"line\">\t\tVersion: <span class=\"number\">0x01</span>,</span><br><span class=\"line\">\t\tType:    layers.EAPOLTypeStart,</span><br><span class=\"line\">\t\tLength:  <span class=\"number\">0x00</span>,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tbuf := gopacket.NewSerializeBuffer()</span><br><span class=\"line\">\topts := gopacket.SerializeOptions&#123;</span><br><span class=\"line\">\t\tFixLengths:       <span class=\"literal\">true</span>,</span><br><span class=\"line\">\t\tComputeChecksums: <span class=\"literal\">true</span>,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tgopacket.SerializeLayers(buf, opts, &amp;eth, &amp;eaPol)</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot;broadcast &quot;</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err := handle.WritePacketData(buf.Bytes()); err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> err</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">sendUserName</span><span class=\"params\">(handle *pcap.Handle, srcMac net.HardwareAddr, destAddr net.HardwareAddr, id <span class=\"keyword\">uint8</span>, username <span class=\"keyword\">string</span>)</span> <span class=\"title\">error</span></span> &#123;</span><br><span class=\"line\">\teth := layers.Ethernet&#123;</span><br><span class=\"line\">\t\tSrcMAC:       srcMac,</span><br><span class=\"line\">\t\tDstMAC:       destAddr,</span><br><span class=\"line\">\t\tEthernetType: <span class=\"number\">0x888e</span>,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\teap := layers.EAP&#123;</span><br><span class=\"line\">\t\tCode:     layers.EAPCodeResponse,</span><br><span class=\"line\">\t\tId:       id,</span><br><span class=\"line\">\t\tLength:   <span class=\"keyword\">uint16</span>(<span class=\"built_in\">len</span>([]<span class=\"keyword\">byte</span>(username))),</span><br><span class=\"line\">\t\tType:     layers.EAPTypeIdentity,</span><br><span class=\"line\">\t\tTypeData: []<span class=\"keyword\">byte</span>(username),</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tbuf := gopacket.NewSerializeBuffer()</span><br><span class=\"line\">\topts := gopacket.SerializeOptions&#123;</span><br><span class=\"line\">\t\tFixLengths:       <span class=\"literal\">true</span>,</span><br><span class=\"line\">\t\tComputeChecksums: <span class=\"literal\">true</span>,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tgopacket.SerializeLayers(buf, opts, &amp;eth, &amp;eap)</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot;send username &quot;</span>, username)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err := handle.WritePacketData(buf.Bytes()); err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> err</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">sendPassword</span><span class=\"params\">(handle *pcap.Handle, srcMac net.HardwareAddr, destAddr net.HardwareAddr, id <span class=\"keyword\">uint8</span>, password []<span class=\"keyword\">byte</span>)</span> <span class=\"title\">error</span></span> &#123;</span><br><span class=\"line\">\teth := layers.Ethernet&#123;</span><br><span class=\"line\">\t\tSrcMAC:       srcMac,</span><br><span class=\"line\">\t\tDstMAC:       destAddr,</span><br><span class=\"line\">\t\tEthernetType: <span class=\"number\">0x888e</span>,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\teap := layers.EAP&#123;</span><br><span class=\"line\">\t\tCode:     layers.EAPCodeResponse,</span><br><span class=\"line\">\t\tId:       id,</span><br><span class=\"line\">\t\tLength:   <span class=\"keyword\">uint16</span>(<span class=\"built_in\">len</span>(password)),</span><br><span class=\"line\">\t\tType:     layers.EAPTypeIdentity,</span><br><span class=\"line\">\t\tTypeData: password,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tbuf := gopacket.NewSerializeBuffer()</span><br><span class=\"line\">\topts := gopacket.SerializeOptions&#123;</span><br><span class=\"line\">\t\tFixLengths:       <span class=\"literal\">true</span>,</span><br><span class=\"line\">\t\tComputeChecksums: <span class=\"literal\">true</span>,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tgopacket.SerializeLayers(buf, opts, &amp;eth, &amp;eap)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err := handle.WritePacketData(buf.Bytes()); err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> err</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>公司网络升级了 跟时间相关了。。。。。</p>\n"},{"title":"控制树莓派","date":"2020-10-04T00:59:55.000Z","mp3":null,"cover":null,"_content":"\n找了一圈没找到一个比较好的能用web控制订阅的工具，自己做一个。中途发现一些比较好的能满足我需求的[项目](https://github.com/twotreesus/V2ray.FunPi)，又参考了一下\n目前树莓派用于\n* 主路由\n* hostapd实现全局代理，并且实现了90DNS用于switch\n* [人人影视](http://appdown.rrys.tv/rrshareweb_rpi.2.20.tar.gz)\n* 文件共享用于小米盒子等播放\n\n![](/assets/Screenshot_1.png)\n\n\n[https://github.com/8DE4732A/rasp_control](https://github.com/8DE4732A/rasp_control)","source":"_posts/rasp-ctl.md","raw":"---\ntitle: 控制树莓派\ndate: 2020-10-04 08:59:55\ntags: raspberry\ncategories: raspberry\nmp3:\ncover:\n---\n\n找了一圈没找到一个比较好的能用web控制订阅的工具，自己做一个。中途发现一些比较好的能满足我需求的[项目](https://github.com/twotreesus/V2ray.FunPi)，又参考了一下\n目前树莓派用于\n* 主路由\n* hostapd实现全局代理，并且实现了90DNS用于switch\n* [人人影视](http://appdown.rrys.tv/rrshareweb_rpi.2.20.tar.gz)\n* 文件共享用于小米盒子等播放\n\n![](/assets/Screenshot_1.png)\n\n\n[https://github.com/8DE4732A/rasp_control](https://github.com/8DE4732A/rasp_control)","slug":"rasp-ctl","published":1,"updated":"2021-02-06T11:36:06.041Z","_id":"ckfueemdx000020uiem9r2f3i","comments":1,"layout":"post","photos":[],"link":"","content":"<p>找了一圈没找到一个比较好的能用web控制订阅的工具，自己做一个。中途发现一些比较好的能满足我需求的<a href=\"https://github.com/twotreesus/V2ray.FunPi\">项目</a>，又参考了一下<br>目前树莓派用于</p>\n<ul>\n<li>主路由</li>\n<li>hostapd实现全局代理，并且实现了90DNS用于switch</li>\n<li><a href=\"http://appdown.rrys.tv/rrshareweb_rpi.2.20.tar.gz\">人人影视</a></li>\n<li>文件共享用于小米盒子等播放</li>\n</ul>\n<p><img src=\"/assets/Screenshot_1.png\"></p>\n<p><a href=\"https://github.com/8DE4732A/rasp_control\">https://github.com/8DE4732A/rasp_control</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>找了一圈没找到一个比较好的能用web控制订阅的工具，自己做一个。中途发现一些比较好的能满足我需求的<a href=\"https://github.com/twotreesus/V2ray.FunPi\">项目</a>，又参考了一下<br>目前树莓派用于</p>\n<ul>\n<li>主路由</li>\n<li>hostapd实现全局代理，并且实现了90DNS用于switch</li>\n<li><a href=\"http://appdown.rrys.tv/rrshareweb_rpi.2.20.tar.gz\">人人影视</a></li>\n<li>文件共享用于小米盒子等播放</li>\n</ul>\n<p><img src=\"/assets/Screenshot_1.png\"></p>\n<p><a href=\"https://github.com/8DE4732A/rasp_control\">https://github.com/8DE4732A/rasp_control</a></p>\n"},{"title":"tic80","date":"2020-10-04T01:07:20.000Z","mp3":null,"cover":null,"_content":"\ntic80好玩的游戏收集\n\n![](https://raw.githubusercontent.com/tasogare66/nibiruman/master/capture/s02.gif)\n[https://github.com/tasogare66/nibiruman](https://github.com/tasogare66/nibiruman)\n","source":"_posts/tic80.md","raw":"---\ntitle: tic80\ndate: 2020-10-04 09:07:20\ntags: game\ncategories: game\nmp3:\ncover:\n---\n\ntic80好玩的游戏收集\n\n![](https://raw.githubusercontent.com/tasogare66/nibiruman/master/capture/s02.gif)\n[https://github.com/tasogare66/nibiruman](https://github.com/tasogare66/nibiruman)\n","slug":"tic80","published":1,"updated":"2021-02-06T11:36:06.041Z","_id":"ckfuesjh00000rcuidi6e7xwh","comments":1,"layout":"post","photos":[],"link":"","content":"<p>tic80好玩的游戏收集</p>\n<p><img src=\"https://raw.githubusercontent.com/tasogare66/nibiruman/master/capture/s02.gif\"><br><a href=\"https://github.com/tasogare66/nibiruman\">https://github.com/tasogare66/nibiruman</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>tic80好玩的游戏收集</p>\n<p><img src=\"https://raw.githubusercontent.com/tasogare66/nibiruman/master/capture/s02.gif\"><br><a href=\"https://github.com/tasogare66/nibiruman\">https://github.com/tasogare66/nibiruman</a></p>\n"},{"title":"洞窟物语","date":"2020-10-04T01:12:09.000Z","mp3":null,"cover":null,"_content":"\nRemaking Cavestory in C++\n[https://youtu.be/ETvApbD5xRo](https://youtu.be/ETvApbD5xRo)\n\n\n我想用go语言写一个。。。","source":"_posts/doukutsu.md","raw":"---\ntitle: 洞窟物语\ndate: 2020-10-04 09:12:09\ntags: game\ncategories: game\nmp3:\ncover:\n---\n\nRemaking Cavestory in C++\n[https://youtu.be/ETvApbD5xRo](https://youtu.be/ETvApbD5xRo)\n\n\n我想用go语言写一个。。。","slug":"doukutsu","published":1,"updated":"2021-02-06T11:36:06.041Z","_id":"ckfuex9ou0000pkui62mx74c1","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Remaking Cavestory in C++<br><a href=\"https://youtu.be/ETvApbD5xRo\">https://youtu.be/ETvApbD5xRo</a></p>\n<p>我想用go语言写一个。。。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Remaking Cavestory in C++<br><a href=\"https://youtu.be/ETvApbD5xRo\">https://youtu.be/ETvApbD5xRo</a></p>\n<p>我想用go语言写一个。。。</p>\n"},{"title":"气象云图","date":"2020-10-04T04:04:15.000Z","mp3":null,"cover":null,"_content":"发现[中国天气网](http://www.weather.com.cn/satellite/)的气象云图挺好看的，vps上搞了个定时任务，抓取图片，生成视频\n\n定时抓取\n```python\nimport urllib.request\nimport json\nimport time\nreq = urllib.request.Request(\"http://d1.weather.com.cn/satellite2015/JC_YT_DL_WXZXCSYT_4A.html?jsoncallback=readSatellite&callback=jQuery18208455971171376718_\" + str(round(time.time() * 1000)) + \"&_=\" + str(round(time.time() * 1000)))\nreq.add_header('Referer', 'http://www.weather.com.cn/satellite/')\nreq.add_header('User-Agent', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36')\n\nwith urllib.request.urlopen(req) as f:\n    data = f.read().decode('utf-8')\n    data = data[14:-1]\n    j = json.loads(data.replace('\\'','\\\"'))\n    for a in j['radars']:\n        print(a['ft'])\n        urllib.request.urlretrieve(\"http://pi.weather.com.cn/i/product/pic/l/sevp_nsmc_\" + a['fn'] + \"_lno_py_\" + a['ft'] + \".jpg\", \"D://weather/\" + a['ft'] + \".jpg\")\n```\n\n生成图片\n先创建软链接用于ffmpeg\n```python\nfrom pathlib import Path\n\np = Path('D:\\weather')\nfile_names = [x.name for x in p.iterdir()]\nnums = sorted([x.split('.')[0] for x in file_names])\n\nfor i in range(len(nums)):\n    Path('D:\\weather-ffmpeg\\\\' + '{0:06d}'.format(i) + '.jpg').symlink_to('D:\\weather\\\\' + nums[i] + '.jpg')\n```\n\n```shell\n/root/ffmpeg/ffmpeg -f image2 -i /root/weather-ffmpeg/%06d.jpg -vcodec libx264 -r 10 /var/http/weather.mp4\n```\n\n\n[https://github.com/8DE4732A/china-weather](https://github.com/8DE4732A/china-weather)","source":"_posts/china-weather.md","raw":"---\ntitle: 气象云图\ndate: 2020-10-04 12:04:15\ntags: python\ncategories: python\nmp3:\ncover:\n---\n发现[中国天气网](http://www.weather.com.cn/satellite/)的气象云图挺好看的，vps上搞了个定时任务，抓取图片，生成视频\n\n定时抓取\n```python\nimport urllib.request\nimport json\nimport time\nreq = urllib.request.Request(\"http://d1.weather.com.cn/satellite2015/JC_YT_DL_WXZXCSYT_4A.html?jsoncallback=readSatellite&callback=jQuery18208455971171376718_\" + str(round(time.time() * 1000)) + \"&_=\" + str(round(time.time() * 1000)))\nreq.add_header('Referer', 'http://www.weather.com.cn/satellite/')\nreq.add_header('User-Agent', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36')\n\nwith urllib.request.urlopen(req) as f:\n    data = f.read().decode('utf-8')\n    data = data[14:-1]\n    j = json.loads(data.replace('\\'','\\\"'))\n    for a in j['radars']:\n        print(a['ft'])\n        urllib.request.urlretrieve(\"http://pi.weather.com.cn/i/product/pic/l/sevp_nsmc_\" + a['fn'] + \"_lno_py_\" + a['ft'] + \".jpg\", \"D://weather/\" + a['ft'] + \".jpg\")\n```\n\n生成图片\n先创建软链接用于ffmpeg\n```python\nfrom pathlib import Path\n\np = Path('D:\\weather')\nfile_names = [x.name for x in p.iterdir()]\nnums = sorted([x.split('.')[0] for x in file_names])\n\nfor i in range(len(nums)):\n    Path('D:\\weather-ffmpeg\\\\' + '{0:06d}'.format(i) + '.jpg').symlink_to('D:\\weather\\\\' + nums[i] + '.jpg')\n```\n\n```shell\n/root/ffmpeg/ffmpeg -f image2 -i /root/weather-ffmpeg/%06d.jpg -vcodec libx264 -r 10 /var/http/weather.mp4\n```\n\n\n[https://github.com/8DE4732A/china-weather](https://github.com/8DE4732A/china-weather)","slug":"china-weather","published":1,"updated":"2021-02-06T11:36:06.041Z","_id":"ckfuy3nse0000t8ui4q033voa","comments":1,"layout":"post","photos":[],"link":"","content":"<p>发现<a href=\"http://www.weather.com.cn/satellite/\">中国天气网</a>的气象云图挺好看的，vps上搞了个定时任务，抓取图片，生成视频</p>\n<p>定时抓取</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> urllib.request</span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\">req = urllib.request.Request(<span class=\"string\">&quot;http://d1.weather.com.cn/satellite2015/JC_YT_DL_WXZXCSYT_4A.html?jsoncallback=readSatellite&amp;callback=jQuery18208455971171376718_&quot;</span> + str(round(time.time() * <span class=\"number\">1000</span>)) + <span class=\"string\">&quot;&amp;_=&quot;</span> + str(round(time.time() * <span class=\"number\">1000</span>)))</span><br><span class=\"line\">req.add_header(<span class=\"string\">&#x27;Referer&#x27;</span>, <span class=\"string\">&#x27;http://www.weather.com.cn/satellite/&#x27;</span>)</span><br><span class=\"line\">req.add_header(<span class=\"string\">&#x27;User-Agent&#x27;</span>, <span class=\"string\">&#x27;Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> urllib.request.urlopen(req) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    data = f.read().decode(<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\">    data = data[<span class=\"number\">14</span>:<span class=\"number\">-1</span>]</span><br><span class=\"line\">    j = json.loads(data.replace(<span class=\"string\">&#x27;\\&#x27;&#x27;</span>,<span class=\"string\">&#x27;\\&quot;&#x27;</span>))</span><br><span class=\"line\">    <span class=\"keyword\">for</span> a <span class=\"keyword\">in</span> j[<span class=\"string\">&#x27;radars&#x27;</span>]:</span><br><span class=\"line\">        print(a[<span class=\"string\">&#x27;ft&#x27;</span>])</span><br><span class=\"line\">        urllib.request.urlretrieve(<span class=\"string\">&quot;http://pi.weather.com.cn/i/product/pic/l/sevp_nsmc_&quot;</span> + a[<span class=\"string\">&#x27;fn&#x27;</span>] + <span class=\"string\">&quot;_lno_py_&quot;</span> + a[<span class=\"string\">&#x27;ft&#x27;</span>] + <span class=\"string\">&quot;.jpg&quot;</span>, <span class=\"string\">&quot;D://weather/&quot;</span> + a[<span class=\"string\">&#x27;ft&#x27;</span>] + <span class=\"string\">&quot;.jpg&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>生成图片<br>先创建软链接用于ffmpeg</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pathlib <span class=\"keyword\">import</span> Path</span><br><span class=\"line\"></span><br><span class=\"line\">p = Path(<span class=\"string\">&#x27;D:\\weather&#x27;</span>)</span><br><span class=\"line\">file_names = [x.name <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> p.iterdir()]</span><br><span class=\"line\">nums = sorted([x.split(<span class=\"string\">&#x27;.&#x27;</span>)[<span class=\"number\">0</span>] <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> file_names])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(nums)):</span><br><span class=\"line\">    Path(<span class=\"string\">&#x27;D:\\weather-ffmpeg\\\\&#x27;</span> + <span class=\"string\">&#x27;&#123;0:06d&#125;&#x27;</span>.format(i) + <span class=\"string\">&#x27;.jpg&#x27;</span>).symlink_to(<span class=\"string\">&#x27;D:\\weather\\\\&#x27;</span> + nums[i] + <span class=\"string\">&#x27;.jpg&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/root/ffmpeg/ffmpeg -f image2 -i /root/weather-ffmpeg/%06d.jpg -vcodec libx264 -r 10 /var/http/weather.mp4</span><br></pre></td></tr></table></figure>\n\n\n<p><a href=\"https://github.com/8DE4732A/china-weather\">https://github.com/8DE4732A/china-weather</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>发现<a href=\"http://www.weather.com.cn/satellite/\">中国天气网</a>的气象云图挺好看的，vps上搞了个定时任务，抓取图片，生成视频</p>\n<p>定时抓取</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> urllib.request</span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\">req = urllib.request.Request(<span class=\"string\">&quot;http://d1.weather.com.cn/satellite2015/JC_YT_DL_WXZXCSYT_4A.html?jsoncallback=readSatellite&amp;callback=jQuery18208455971171376718_&quot;</span> + str(round(time.time() * <span class=\"number\">1000</span>)) + <span class=\"string\">&quot;&amp;_=&quot;</span> + str(round(time.time() * <span class=\"number\">1000</span>)))</span><br><span class=\"line\">req.add_header(<span class=\"string\">&#x27;Referer&#x27;</span>, <span class=\"string\">&#x27;http://www.weather.com.cn/satellite/&#x27;</span>)</span><br><span class=\"line\">req.add_header(<span class=\"string\">&#x27;User-Agent&#x27;</span>, <span class=\"string\">&#x27;Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> urllib.request.urlopen(req) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    data = f.read().decode(<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\">    data = data[<span class=\"number\">14</span>:<span class=\"number\">-1</span>]</span><br><span class=\"line\">    j = json.loads(data.replace(<span class=\"string\">&#x27;\\&#x27;&#x27;</span>,<span class=\"string\">&#x27;\\&quot;&#x27;</span>))</span><br><span class=\"line\">    <span class=\"keyword\">for</span> a <span class=\"keyword\">in</span> j[<span class=\"string\">&#x27;radars&#x27;</span>]:</span><br><span class=\"line\">        print(a[<span class=\"string\">&#x27;ft&#x27;</span>])</span><br><span class=\"line\">        urllib.request.urlretrieve(<span class=\"string\">&quot;http://pi.weather.com.cn/i/product/pic/l/sevp_nsmc_&quot;</span> + a[<span class=\"string\">&#x27;fn&#x27;</span>] + <span class=\"string\">&quot;_lno_py_&quot;</span> + a[<span class=\"string\">&#x27;ft&#x27;</span>] + <span class=\"string\">&quot;.jpg&quot;</span>, <span class=\"string\">&quot;D://weather/&quot;</span> + a[<span class=\"string\">&#x27;ft&#x27;</span>] + <span class=\"string\">&quot;.jpg&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>生成图片<br>先创建软链接用于ffmpeg</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pathlib <span class=\"keyword\">import</span> Path</span><br><span class=\"line\"></span><br><span class=\"line\">p = Path(<span class=\"string\">&#x27;D:\\weather&#x27;</span>)</span><br><span class=\"line\">file_names = [x.name <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> p.iterdir()]</span><br><span class=\"line\">nums = sorted([x.split(<span class=\"string\">&#x27;.&#x27;</span>)[<span class=\"number\">0</span>] <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> file_names])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(nums)):</span><br><span class=\"line\">    Path(<span class=\"string\">&#x27;D:\\weather-ffmpeg\\\\&#x27;</span> + <span class=\"string\">&#x27;&#123;0:06d&#125;&#x27;</span>.format(i) + <span class=\"string\">&#x27;.jpg&#x27;</span>).symlink_to(<span class=\"string\">&#x27;D:\\weather\\\\&#x27;</span> + nums[i] + <span class=\"string\">&#x27;.jpg&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/root/ffmpeg/ffmpeg -f image2 -i /root/weather-ffmpeg/%06d.jpg -vcodec libx264 -r 10 /var/http/weather.mp4</span><br></pre></td></tr></table></figure>\n\n\n<p><a href=\"https://github.com/8DE4732A/china-weather\">https://github.com/8DE4732A/china-weather</a></p>\n"},{"title":"最福利自动抢京东卡-android","date":"2020-10-04T10:11:42.000Z","mp3":null,"cover":null,"_content":"\n通过抓包获得h5页面地址，写了一个js可以自动下单。但是我希望晚上可以躺在床上抢，于是\n\n![](/assets/zuifuli.jpg)\n\n[https://github.com/8DE4732A/zufuli_jd](https://github.com/8DE4732A/zufuli_jd)","source":"_posts/android-webview.md","raw":"---\ntitle: 最福利自动抢京东卡-android\ndate: 2020-10-04 18:11:42\ntags:\ncategories:\nmp3:\ncover:\n---\n\n通过抓包获得h5页面地址，写了一个js可以自动下单。但是我希望晚上可以躺在床上抢，于是\n\n![](/assets/zuifuli.jpg)\n\n[https://github.com/8DE4732A/zufuli_jd](https://github.com/8DE4732A/zufuli_jd)","slug":"android-webview","published":1,"updated":"2021-02-06T11:36:06.041Z","_id":"ckfuy47z500006cuighxjcj4s","comments":1,"layout":"post","photos":[],"link":"","content":"<p>通过抓包获得h5页面地址，写了一个js可以自动下单。但是我希望晚上可以躺在床上抢，于是</p>\n<p><img src=\"/assets/zuifuli.jpg\"></p>\n<p><a href=\"https://github.com/8DE4732A/zufuli_jd\">https://github.com/8DE4732A/zufuli_jd</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>通过抓包获得h5页面地址，写了一个js可以自动下单。但是我希望晚上可以躺在床上抢，于是</p>\n<p><img src=\"/assets/zuifuli.jpg\"></p>\n<p><a href=\"https://github.com/8DE4732A/zufuli_jd\">https://github.com/8DE4732A/zufuli_jd</a></p>\n"},{"title":"nes模拟器","date":"2020-10-06T09:11:43.000Z","mp3":null,"cover":null,"_content":"\nyoutube教程\n[https://youtu.be/nViZg02IMQo](https://youtu.be/nViZg02IMQo)\n\n一个用go语言实现的\n[https://github.com/rbaron/awesomenes](https://github.com/rbaron/awesomenes)\n[https://github.com/fogleman/nes](https://github.com/fogleman/nes)\n\nA JavaScript NES emulator.\n[https://github.com/bfirsh/jsnes](https://github.com/bfirsh/jsnes)\n\n硬件参考信息来源\n[http://nesdev.com/](http://nesdev.com/)\n\n待续。","source":"_posts/nes-emulator.md","raw":"---\ntitle: nes模拟器\ndate: 2020-10-06 17:11:43\ntags: game\ncategories: game\nmp3:\ncover:\n---\n\nyoutube教程\n[https://youtu.be/nViZg02IMQo](https://youtu.be/nViZg02IMQo)\n\n一个用go语言实现的\n[https://github.com/rbaron/awesomenes](https://github.com/rbaron/awesomenes)\n[https://github.com/fogleman/nes](https://github.com/fogleman/nes)\n\nA JavaScript NES emulator.\n[https://github.com/bfirsh/jsnes](https://github.com/bfirsh/jsnes)\n\n硬件参考信息来源\n[http://nesdev.com/](http://nesdev.com/)\n\n待续。","slug":"nes-emulator","published":1,"updated":"2021-02-06T11:36:06.041Z","_id":"ckg30hkns0000z4mbghou5joa","comments":1,"layout":"post","photos":[],"link":"","content":"<p>youtube教程<br><a href=\"https://youtu.be/nViZg02IMQo\">https://youtu.be/nViZg02IMQo</a></p>\n<p>一个用go语言实现的<br><a href=\"https://github.com/rbaron/awesomenes\">https://github.com/rbaron/awesomenes</a><br><a href=\"https://github.com/fogleman/nes\">https://github.com/fogleman/nes</a></p>\n<p>A JavaScript NES emulator.<br><a href=\"https://github.com/bfirsh/jsnes\">https://github.com/bfirsh/jsnes</a></p>\n<p>硬件参考信息来源<br><a href=\"http://nesdev.com/\">http://nesdev.com/</a></p>\n<p>待续。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>youtube教程<br><a href=\"https://youtu.be/nViZg02IMQo\">https://youtu.be/nViZg02IMQo</a></p>\n<p>一个用go语言实现的<br><a href=\"https://github.com/rbaron/awesomenes\">https://github.com/rbaron/awesomenes</a><br><a href=\"https://github.com/fogleman/nes\">https://github.com/fogleman/nes</a></p>\n<p>A JavaScript NES emulator.<br><a href=\"https://github.com/bfirsh/jsnes\">https://github.com/bfirsh/jsnes</a></p>\n<p>硬件参考信息来源<br><a href=\"http://nesdev.com/\">http://nesdev.com/</a></p>\n<p>待续。</p>\n"},{"title":"closure","_content":"","source":"_drafts/closure.md","raw":"---\ntitle: closure\ntags:\n---\n","slug":"closure","published":0,"date":"2021-02-06T11:36:06.041Z","updated":"2021-02-06T11:36:06.041Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckkttizfs00004u85cn9r8lv6","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"concurrent","_content":"### CPU\n@sun.misc.Contended 避免伪共享\n[cmpxchg](https://www.felixcloutier.com/x86/cmpxchg)\n[cmpxchg.h](https://elixir.bootlin.com/linux/latest/source/tools/arch/x86/include/asm/cmpxchg.h#L86)\n[mesi](https://zh.wikipedia.org/wiki/MESI%E5%8D%8F%E8%AE%AE)\n[mesi 与 cmpxchg关系](https://blog.csdn.net/21cnbao/article/details/108786813)\n\n### [CAS](https://zh.wikipedia.org/wiki/%E6%AF%94%E8%BE%83%E5%B9%B6%E4%BA%A4%E6%8D%A2)\n\n\n### AQS\n\n\n\n\n\n### [Disruptor](https://tech.meituan.com/2016/11/18/disruptor.html)\n\n","source":"_drafts/concurrent.md","raw":"---\ntitle: concurrent\ntags:\n---\n### CPU\n@sun.misc.Contended 避免伪共享\n[cmpxchg](https://www.felixcloutier.com/x86/cmpxchg)\n[cmpxchg.h](https://elixir.bootlin.com/linux/latest/source/tools/arch/x86/include/asm/cmpxchg.h#L86)\n[mesi](https://zh.wikipedia.org/wiki/MESI%E5%8D%8F%E8%AE%AE)\n[mesi 与 cmpxchg关系](https://blog.csdn.net/21cnbao/article/details/108786813)\n\n### [CAS](https://zh.wikipedia.org/wiki/%E6%AF%94%E8%BE%83%E5%B9%B6%E4%BA%A4%E6%8D%A2)\n\n\n### AQS\n\n\n\n\n\n### [Disruptor](https://tech.meituan.com/2016/11/18/disruptor.html)\n\n","slug":"concurrent","published":0,"date":"2021-02-06T11:36:06.041Z","updated":"2021-02-06T11:36:06.041Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckkttizfv00014u85czpq4a29","content":"<h3 id=\"CPU\"><a href=\"#CPU\" class=\"headerlink\" title=\"CPU\"></a>CPU</h3><p>@sun.misc.Contended 避免伪共享<br><a href=\"https://www.felixcloutier.com/x86/cmpxchg\">cmpxchg</a><br><a href=\"https://elixir.bootlin.com/linux/latest/source/tools/arch/x86/include/asm/cmpxchg.h#L86\">cmpxchg.h</a><br><a href=\"https://zh.wikipedia.org/wiki/MESI%E5%8D%8F%E8%AE%AE\">mesi</a><br><a href=\"https://blog.csdn.net/21cnbao/article/details/108786813\">mesi 与 cmpxchg关系</a></p>\n<h3 id=\"CAS\"><a href=\"#CAS\" class=\"headerlink\" title=\"CAS\"></a><a href=\"https://zh.wikipedia.org/wiki/%E6%AF%94%E8%BE%83%E5%B9%B6%E4%BA%A4%E6%8D%A2\">CAS</a></h3><h3 id=\"AQS\"><a href=\"#AQS\" class=\"headerlink\" title=\"AQS\"></a>AQS</h3><h3 id=\"Disruptor\"><a href=\"#Disruptor\" class=\"headerlink\" title=\"Disruptor\"></a><a href=\"https://tech.meituan.com/2016/11/18/disruptor.html\">Disruptor</a></h3>","site":{"data":{}},"excerpt":"","more":"<h3 id=\"CPU\"><a href=\"#CPU\" class=\"headerlink\" title=\"CPU\"></a>CPU</h3><p>@sun.misc.Contended 避免伪共享<br><a href=\"https://www.felixcloutier.com/x86/cmpxchg\">cmpxchg</a><br><a href=\"https://elixir.bootlin.com/linux/latest/source/tools/arch/x86/include/asm/cmpxchg.h#L86\">cmpxchg.h</a><br><a href=\"https://zh.wikipedia.org/wiki/MESI%E5%8D%8F%E8%AE%AE\">mesi</a><br><a href=\"https://blog.csdn.net/21cnbao/article/details/108786813\">mesi 与 cmpxchg关系</a></p>\n<h3 id=\"CAS\"><a href=\"#CAS\" class=\"headerlink\" title=\"CAS\"></a><a href=\"https://zh.wikipedia.org/wiki/%E6%AF%94%E8%BE%83%E5%B9%B6%E4%BA%A4%E6%8D%A2\">CAS</a></h3><h3 id=\"AQS\"><a href=\"#AQS\" class=\"headerlink\" title=\"AQS\"></a>AQS</h3><h3 id=\"Disruptor\"><a href=\"#Disruptor\" class=\"headerlink\" title=\"Disruptor\"></a><a href=\"https://tech.meituan.com/2016/11/18/disruptor.html\">Disruptor</a></h3>"},{"title":"grafana","_content":"","source":"_drafts/grafana.md","raw":"---\ntitle: grafana\ntags:\n---\n","slug":"grafana","published":0,"date":"2021-02-06T11:36:06.041Z","updated":"2021-02-06T11:36:06.041Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckkttizfx00024u858y3w73yh","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"javaagent","_content":"","source":"_drafts/javaagent.md","raw":"---\ntitle: javaagent\ntags:\n---\n","slug":"javaagent","published":0,"date":"2021-02-06T11:36:06.041Z","updated":"2021-02-06T11:36:06.041Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckkttizfy00034u857w561344","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"jdbc","_content":"","source":"_drafts/jdbc.md","raw":"---\ntitle: jdbc\ntags:\n---\n","slug":"jdbc","published":0,"date":"2021-02-06T11:36:06.041Z","updated":"2021-02-06T11:36:06.041Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckkttizfz00044u85ho845gg5","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"自己动手写java虚拟机","_content":"\n\n\n\n\n[https://www.cnblogs.com/wade-luffy/p/6058087.html](https://www.cnblogs.com/wade-luffy/p/6058087.html)","source":"_drafts/jvm.md","raw":"---\ntitle: 自己动手写java虚拟机\ntags: java\n---\n\n\n\n\n\n[https://www.cnblogs.com/wade-luffy/p/6058087.html](https://www.cnblogs.com/wade-luffy/p/6058087.html)","slug":"jvm","published":0,"date":"2021-02-06T11:36:06.041Z","updated":"2021-02-06T11:36:06.041Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckkttizg100054u851kxod133","content":"<p><a href=\"https://www.cnblogs.com/wade-luffy/p/6058087.html\">https://www.cnblogs.com/wade-luffy/p/6058087.html</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://www.cnblogs.com/wade-luffy/p/6058087.html\">https://www.cnblogs.com/wade-luffy/p/6058087.html</a></p>\n"},{"title":"lock","_content":"","source":"_drafts/lock.md","raw":"---\ntitle: lock\ntags:\n---\n","slug":"lock","published":0,"date":"2021-02-06T11:36:06.041Z","updated":"2021-02-06T11:36:06.041Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckkttizg100064u85cmh97w02","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"online_ddl","_content":"","source":"_drafts/online-ddl.md","raw":"---\ntitle: online_ddl\ntags:\n---\n","slug":"online-ddl","published":0,"date":"2021-02-06T11:36:06.041Z","updated":"2021-02-06T11:36:06.041Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckkttizg500084u85bj0vb4ev","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"powermock","_content":"","source":"_drafts/powermock.md","raw":"---\ntitle: powermock\ntags:\n---\n","slug":"powermock","published":0,"date":"2021-02-06T11:36:06.041Z","updated":"2021-02-06T11:36:06.041Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckkttizg700094u857wvl7aqq","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"seata","_content":"\n\n[http://seata.io/zh-cn/blog/seata-at-tcc-saga.html](http://seata.io/zh-cn/blog/seata-at-tcc-saga.html)\n\n[https://segmentfault.com/a/1190000038301520](https://segmentfault.com/a/1190000038301520)\n\n[https://github.com/seata/seata-docker](https://github.com/seata/seata-docker)","source":"_drafts/seata.md","raw":"---\ntitle: seata\ntags:\n---\n\n\n[http://seata.io/zh-cn/blog/seata-at-tcc-saga.html](http://seata.io/zh-cn/blog/seata-at-tcc-saga.html)\n\n[https://segmentfault.com/a/1190000038301520](https://segmentfault.com/a/1190000038301520)\n\n[https://github.com/seata/seata-docker](https://github.com/seata/seata-docker)","slug":"seata","published":0,"date":"2021-02-06T11:36:06.041Z","updated":"2021-02-06T11:36:06.041Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckkttizg7000a4u852j94awu6","content":"<p><a href=\"http://seata.io/zh-cn/blog/seata-at-tcc-saga.html\">http://seata.io/zh-cn/blog/seata-at-tcc-saga.html</a></p>\n<p><a href=\"https://segmentfault.com/a/1190000038301520\">https://segmentfault.com/a/1190000038301520</a></p>\n<p><a href=\"https://github.com/seata/seata-docker\">https://github.com/seata/seata-docker</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"http://seata.io/zh-cn/blog/seata-at-tcc-saga.html\">http://seata.io/zh-cn/blog/seata-at-tcc-saga.html</a></p>\n<p><a href=\"https://segmentfault.com/a/1190000038301520\">https://segmentfault.com/a/1190000038301520</a></p>\n<p><a href=\"https://github.com/seata/seata-docker\">https://github.com/seata/seata-docker</a></p>\n"},{"title":"分库分表","date":"2020-11-26T10:20:56.000Z","mp3":null,"cover":null,"_content":"\n\n\n[https://gitee.com/justwe9891/TDDL](https://gitee.com/justwe9891/TDDL)\n\n","source":"_drafts/tddl.md","raw":"---\ntitle: 分库分表\ndate: 2020-11-26 18:20:56\ntags: java\ncategories: java\nmp3:\ncover:\n---\n\n\n\n[https://gitee.com/justwe9891/TDDL](https://gitee.com/justwe9891/TDDL)\n\n","slug":"tddl","published":0,"updated":"2021-02-06T11:36:06.041Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckkttizg9000c4u85efzu1bwp","content":"<p><a href=\"https://gitee.com/justwe9891/TDDL\">https://gitee.com/justwe9891/TDDL</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://gitee.com/justwe9891/TDDL\">https://gitee.com/justwe9891/TDDL</a></p>\n"},{"title":"6502","date":"2020-10-08T09:20:43.000Z","mp3":null,"cover":null,"_content":"\n\n硬件参考资料\n[http://www.6502.org/](http://www.6502.org/)\n\n一个java实现的6502模拟器\n[https://github.com/sethm/symon](https://github.com/sethm/symon)","source":"_posts/6502.md","raw":"---\ntitle: 6502\ntags: old-computer\ncategories: old-computer\ndate: 2020-10-08 17:20:43\nmp3:\ncover:\n---\n\n\n硬件参考资料\n[http://www.6502.org/](http://www.6502.org/)\n\n一个java实现的6502模拟器\n[https://github.com/sethm/symon](https://github.com/sethm/symon)","slug":"6502","published":1,"updated":"2021-02-06T11:36:06.041Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckkttizga000d4u85984gc7th","content":"<p>硬件参考资料<br><a href=\"http://www.6502.org/\">http://www.6502.org/</a></p>\n<p>一个java实现的6502模拟器<br><a href=\"https://github.com/sethm/symon\">https://github.com/sethm/symon</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>硬件参考资料<br><a href=\"http://www.6502.org/\">http://www.6502.org/</a></p>\n<p>一个java实现的6502模拟器<br><a href=\"https://github.com/sethm/symon\">https://github.com/sethm/symon</a></p>\n"},{"title":"openfeign兼容netflix","_content":"```java\npublic class NetflixFeignBeanPostProcessor implements BeanFactoryPostProcessor, ResourceLoaderAware, EnvironmentAware {\n\n    public static final String[] basePackages = new String[]{\n        \n    };\n\n    private ResourceLoader resourceLoader;\n\n    private Environment environment;\n\n    @Resource\n    private Decoder decoder;\n    @Resource\n    private Encoder encoder;\n    @Resource\n    private Client client;\n    @Resource\n    private Contract contract;\n\n\n    @Override\n    public void postProcessBeanFactory(ConfigurableListableBeanFactory beanFactory) throws BeansException {\n        ClassPathScanningCandidateComponentProvider scanner = getScanner();\n        scanner.setResourceLoader(this.resourceLoader);\n        scanner.addIncludeFilter(new AnnotationTypeFilter(FeignClient.class));\n\n        LinkedHashSet<BeanDefinition> candidateComponents = new LinkedHashSet<>();\n        for (String basePackage : basePackages) {\n            candidateComponents.addAll(scanner.findCandidateComponents(basePackage));\n        }\n        for (BeanDefinition candidateComponent : candidateComponents) {\n            if (candidateComponent instanceof AnnotatedBeanDefinition) {\n                // verify annotated class is an interface\n                AnnotatedBeanDefinition beanDefinition = (AnnotatedBeanDefinition) candidateComponent;\n                AnnotationMetadata annotationMetadata = beanDefinition.getMetadata();\n                Assert.isTrue(annotationMetadata.isInterface(),\n                        \"@FeignClient can only be specified on an interface\");\n\n                Map<String, Object> attributes = annotationMetadata\n                        .getAnnotationAttributes(FeignClient.class.getCanonicalName());\n\n                String name = getClientName(attributes);\n\n                registerFeignClient(annotationMetadata, attributes, beanFactory);\n            }\n        }\n    }\n\n    private void registerFeignClient(AnnotationMetadata annotationMetadata, Map<String, Object> attributes, ConfigurableListableBeanFactory beanFactory) {\n        String className = annotationMetadata.getClassName();\n        log.info(\"register netflix client {}\", className);\n        String url = getUrl(attributes);\n        String name = getName(attributes);\n        if (StringUtils.isEmpty(url)) {\n            url = environment.getProperty(name + \".ribbon.listOfServers\");\n        }\n        try {\n            beanFactory.registerSingleton(className, Feign.builder()\n                    .contract(new SpringMvcContract())\n                    .target(Class.forName(className), url));\n        } catch (ClassNotFoundException e) {\n            log.error(\" {} class not found\", className, e);\n        } catch (Exception e) {\n            log.warn(\" {} class url is empty\", className);\n        }\n\n    }\n\n\n    private String getName(Map<String, Object> attributes) {\n        String name = (String) attributes.get(\"serviceId\");\n        if (!StringUtils.hasText(name)) {\n            name = (String) attributes.get(\"name\");\n        }\n        if (!StringUtils.hasText(name)) {\n            name = (String) attributes.get(\"value\");\n        }\n        name = resolve(name);\n        if (!StringUtils.hasText(name)) {\n            return \"\";\n        }\n\n        String host = null;\n        try {\n            String url;\n            if (!name.startsWith(\"http://\") && !name.startsWith(\"https://\")) {\n                url = \"http://\" + name;\n            } else {\n                url = name;\n            }\n            host = new URI(url).getHost();\n        } catch (URISyntaxException e) {\n        }\n        Assert.state(host != null, \"Service id not legal hostname (\" + name + \")\");\n        return name;\n    }\n\n    private String resolve(String value) {\n        if (StringUtils.hasText(value)) {\n            return this.environment.resolvePlaceholders(value);\n        }\n        return value;\n    }\n\n    private String getUrl(Map<String, Object> attributes) {\n        String url = resolve((String) attributes.get(\"url\"));\n        if (StringUtils.hasText(url) && !(url.startsWith(\"#{\") && url.contains(\"}\"))) {\n            if (!url.contains(\"://\")) {\n                url = \"http://\" + url;\n            }\n            try {\n                new URL(url);\n            } catch (MalformedURLException e) {\n                throw new IllegalArgumentException(url + \" is malformed\", e);\n            }\n        }\n        return url;\n    }\n\n\n    private String getClientName(Map<String, Object> client) {\n        if (client == null) {\n            return null;\n        }\n        String value = (String) client.get(\"contextId\");\n        if (!StringUtils.hasText(value)) {\n            value = (String) client.get(\"value\");\n        }\n        if (!StringUtils.hasText(value)) {\n            value = (String) client.get(\"name\");\n        }\n        if (!StringUtils.hasText(value)) {\n            value = (String) client.get(\"serviceId\");\n        }\n        if (StringUtils.hasText(value)) {\n            return value;\n        }\n\n        throw new IllegalStateException(\"Either 'name' or 'value' must be provided in @\"\n                + FeignClient.class.getSimpleName());\n    }\n\n    protected ClassPathScanningCandidateComponentProvider getScanner() {\n        return new ClassPathScanningCandidateComponentProvider(false, this.environment) {\n            @Override\n            protected boolean isCandidateComponent(\n                    AnnotatedBeanDefinition beanDefinition) {\n                boolean isCandidate = false;\n                if (beanDefinition.getMetadata().isIndependent()) {\n                    if (!beanDefinition.getMetadata().isAnnotation()) {\n                        isCandidate = true;\n                    }\n                }\n                return isCandidate;\n            }\n        };\n    }\n\n    @Override\n    public void setEnvironment(Environment environment) {\n        this.environment = environment;\n    }\n\n    @Override\n    public void setResourceLoader(ResourceLoader resourceLoader) {\n        this.resourceLoader = resourceLoader;\n    }\n}\n\n```","source":"_posts/feign.md","raw":"---\ntitle: openfeign兼容netflix\ntags:\n---\n```java\npublic class NetflixFeignBeanPostProcessor implements BeanFactoryPostProcessor, ResourceLoaderAware, EnvironmentAware {\n\n    public static final String[] basePackages = new String[]{\n        \n    };\n\n    private ResourceLoader resourceLoader;\n\n    private Environment environment;\n\n    @Resource\n    private Decoder decoder;\n    @Resource\n    private Encoder encoder;\n    @Resource\n    private Client client;\n    @Resource\n    private Contract contract;\n\n\n    @Override\n    public void postProcessBeanFactory(ConfigurableListableBeanFactory beanFactory) throws BeansException {\n        ClassPathScanningCandidateComponentProvider scanner = getScanner();\n        scanner.setResourceLoader(this.resourceLoader);\n        scanner.addIncludeFilter(new AnnotationTypeFilter(FeignClient.class));\n\n        LinkedHashSet<BeanDefinition> candidateComponents = new LinkedHashSet<>();\n        for (String basePackage : basePackages) {\n            candidateComponents.addAll(scanner.findCandidateComponents(basePackage));\n        }\n        for (BeanDefinition candidateComponent : candidateComponents) {\n            if (candidateComponent instanceof AnnotatedBeanDefinition) {\n                // verify annotated class is an interface\n                AnnotatedBeanDefinition beanDefinition = (AnnotatedBeanDefinition) candidateComponent;\n                AnnotationMetadata annotationMetadata = beanDefinition.getMetadata();\n                Assert.isTrue(annotationMetadata.isInterface(),\n                        \"@FeignClient can only be specified on an interface\");\n\n                Map<String, Object> attributes = annotationMetadata\n                        .getAnnotationAttributes(FeignClient.class.getCanonicalName());\n\n                String name = getClientName(attributes);\n\n                registerFeignClient(annotationMetadata, attributes, beanFactory);\n            }\n        }\n    }\n\n    private void registerFeignClient(AnnotationMetadata annotationMetadata, Map<String, Object> attributes, ConfigurableListableBeanFactory beanFactory) {\n        String className = annotationMetadata.getClassName();\n        log.info(\"register netflix client {}\", className);\n        String url = getUrl(attributes);\n        String name = getName(attributes);\n        if (StringUtils.isEmpty(url)) {\n            url = environment.getProperty(name + \".ribbon.listOfServers\");\n        }\n        try {\n            beanFactory.registerSingleton(className, Feign.builder()\n                    .contract(new SpringMvcContract())\n                    .target(Class.forName(className), url));\n        } catch (ClassNotFoundException e) {\n            log.error(\" {} class not found\", className, e);\n        } catch (Exception e) {\n            log.warn(\" {} class url is empty\", className);\n        }\n\n    }\n\n\n    private String getName(Map<String, Object> attributes) {\n        String name = (String) attributes.get(\"serviceId\");\n        if (!StringUtils.hasText(name)) {\n            name = (String) attributes.get(\"name\");\n        }\n        if (!StringUtils.hasText(name)) {\n            name = (String) attributes.get(\"value\");\n        }\n        name = resolve(name);\n        if (!StringUtils.hasText(name)) {\n            return \"\";\n        }\n\n        String host = null;\n        try {\n            String url;\n            if (!name.startsWith(\"http://\") && !name.startsWith(\"https://\")) {\n                url = \"http://\" + name;\n            } else {\n                url = name;\n            }\n            host = new URI(url).getHost();\n        } catch (URISyntaxException e) {\n        }\n        Assert.state(host != null, \"Service id not legal hostname (\" + name + \")\");\n        return name;\n    }\n\n    private String resolve(String value) {\n        if (StringUtils.hasText(value)) {\n            return this.environment.resolvePlaceholders(value);\n        }\n        return value;\n    }\n\n    private String getUrl(Map<String, Object> attributes) {\n        String url = resolve((String) attributes.get(\"url\"));\n        if (StringUtils.hasText(url) && !(url.startsWith(\"#{\") && url.contains(\"}\"))) {\n            if (!url.contains(\"://\")) {\n                url = \"http://\" + url;\n            }\n            try {\n                new URL(url);\n            } catch (MalformedURLException e) {\n                throw new IllegalArgumentException(url + \" is malformed\", e);\n            }\n        }\n        return url;\n    }\n\n\n    private String getClientName(Map<String, Object> client) {\n        if (client == null) {\n            return null;\n        }\n        String value = (String) client.get(\"contextId\");\n        if (!StringUtils.hasText(value)) {\n            value = (String) client.get(\"value\");\n        }\n        if (!StringUtils.hasText(value)) {\n            value = (String) client.get(\"name\");\n        }\n        if (!StringUtils.hasText(value)) {\n            value = (String) client.get(\"serviceId\");\n        }\n        if (StringUtils.hasText(value)) {\n            return value;\n        }\n\n        throw new IllegalStateException(\"Either 'name' or 'value' must be provided in @\"\n                + FeignClient.class.getSimpleName());\n    }\n\n    protected ClassPathScanningCandidateComponentProvider getScanner() {\n        return new ClassPathScanningCandidateComponentProvider(false, this.environment) {\n            @Override\n            protected boolean isCandidateComponent(\n                    AnnotatedBeanDefinition beanDefinition) {\n                boolean isCandidate = false;\n                if (beanDefinition.getMetadata().isIndependent()) {\n                    if (!beanDefinition.getMetadata().isAnnotation()) {\n                        isCandidate = true;\n                    }\n                }\n                return isCandidate;\n            }\n        };\n    }\n\n    @Override\n    public void setEnvironment(Environment environment) {\n        this.environment = environment;\n    }\n\n    @Override\n    public void setResourceLoader(ResourceLoader resourceLoader) {\n        this.resourceLoader = resourceLoader;\n    }\n}\n\n```","slug":"feign","published":1,"date":"2021-02-06T11:36:06.041Z","updated":"2021-02-06T11:36:06.041Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckkttizgh000j4u85835a4whc","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">NetflixFeignBeanPostProcessor</span> <span class=\"keyword\">implements</span> <span class=\"title\">BeanFactoryPostProcessor</span>, <span class=\"title\">ResourceLoaderAware</span>, <span class=\"title\">EnvironmentAware</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String[] basePackages = <span class=\"keyword\">new</span> String[]&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> ResourceLoader resourceLoader;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Environment environment;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Resource</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Decoder decoder;</span><br><span class=\"line\">    <span class=\"meta\">@Resource</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Encoder encoder;</span><br><span class=\"line\">    <span class=\"meta\">@Resource</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Client client;</span><br><span class=\"line\">    <span class=\"meta\">@Resource</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Contract contract;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">postProcessBeanFactory</span><span class=\"params\">(ConfigurableListableBeanFactory beanFactory)</span> <span class=\"keyword\">throws</span> BeansException </span>&#123;</span><br><span class=\"line\">        ClassPathScanningCandidateComponentProvider scanner = getScanner();</span><br><span class=\"line\">        scanner.setResourceLoader(<span class=\"keyword\">this</span>.resourceLoader);</span><br><span class=\"line\">        scanner.addIncludeFilter(<span class=\"keyword\">new</span> AnnotationTypeFilter(FeignClient.class));</span><br><span class=\"line\"></span><br><span class=\"line\">        LinkedHashSet&lt;BeanDefinition&gt; candidateComponents = <span class=\"keyword\">new</span> LinkedHashSet&lt;&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (String basePackage : basePackages) &#123;</span><br><span class=\"line\">            candidateComponents.addAll(scanner.findCandidateComponents(basePackage));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (BeanDefinition candidateComponent : candidateComponents) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (candidateComponent <span class=\"keyword\">instanceof</span> AnnotatedBeanDefinition) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// verify annotated class is an interface</span></span><br><span class=\"line\">                AnnotatedBeanDefinition beanDefinition = (AnnotatedBeanDefinition) candidateComponent;</span><br><span class=\"line\">                AnnotationMetadata annotationMetadata = beanDefinition.getMetadata();</span><br><span class=\"line\">                Assert.isTrue(annotationMetadata.isInterface(),</span><br><span class=\"line\">                        <span class=\"string\">&quot;@FeignClient can only be specified on an interface&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">                Map&lt;String, Object&gt; attributes = annotationMetadata</span><br><span class=\"line\">                        .getAnnotationAttributes(FeignClient.class.getCanonicalName());</span><br><span class=\"line\"></span><br><span class=\"line\">                String name = getClientName(attributes);</span><br><span class=\"line\"></span><br><span class=\"line\">                registerFeignClient(annotationMetadata, attributes, beanFactory);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">registerFeignClient</span><span class=\"params\">(AnnotationMetadata annotationMetadata, Map&lt;String, Object&gt; attributes, ConfigurableListableBeanFactory beanFactory)</span> </span>&#123;</span><br><span class=\"line\">        String className = annotationMetadata.getClassName();</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;register netflix client &#123;&#125;&quot;</span>, className);</span><br><span class=\"line\">        String url = getUrl(attributes);</span><br><span class=\"line\">        String name = getName(attributes);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (StringUtils.isEmpty(url)) &#123;</span><br><span class=\"line\">            url = environment.getProperty(name + <span class=\"string\">&quot;.ribbon.listOfServers&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            beanFactory.registerSingleton(className, Feign.builder()</span><br><span class=\"line\">                    .contract(<span class=\"keyword\">new</span> SpringMvcContract())</span><br><span class=\"line\">                    .target(Class.forName(className), url));</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (ClassNotFoundException e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">&quot; &#123;&#125; class not found&quot;</span>, className, e);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.warn(<span class=\"string\">&quot; &#123;&#125; class url is empty&quot;</span>, className);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> String <span class=\"title\">getName</span><span class=\"params\">(Map&lt;String, Object&gt; attributes)</span> </span>&#123;</span><br><span class=\"line\">        String name = (String) attributes.get(<span class=\"string\">&quot;serviceId&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtils.hasText(name)) &#123;</span><br><span class=\"line\">            name = (String) attributes.get(<span class=\"string\">&quot;name&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtils.hasText(name)) &#123;</span><br><span class=\"line\">            name = (String) attributes.get(<span class=\"string\">&quot;value&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        name = resolve(name);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtils.hasText(name)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        String host = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            String url;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!name.startsWith(<span class=\"string\">&quot;http://&quot;</span>) &amp;&amp; !name.startsWith(<span class=\"string\">&quot;https://&quot;</span>)) &#123;</span><br><span class=\"line\">                url = <span class=\"string\">&quot;http://&quot;</span> + name;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                url = name;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            host = <span class=\"keyword\">new</span> URI(url).getHost();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (URISyntaxException e) &#123;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Assert.state(host != <span class=\"keyword\">null</span>, <span class=\"string\">&quot;Service id not legal hostname (&quot;</span> + name + <span class=\"string\">&quot;)&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> String <span class=\"title\">resolve</span><span class=\"params\">(String value)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (StringUtils.hasText(value)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.environment.resolvePlaceholders(value);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> value;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> String <span class=\"title\">getUrl</span><span class=\"params\">(Map&lt;String, Object&gt; attributes)</span> </span>&#123;</span><br><span class=\"line\">        String url = resolve((String) attributes.get(<span class=\"string\">&quot;url&quot;</span>));</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (StringUtils.hasText(url) &amp;&amp; !(url.startsWith(<span class=\"string\">&quot;#&#123;&quot;</span>) &amp;&amp; url.contains(<span class=\"string\">&quot;&#125;&quot;</span>))) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!url.contains(<span class=\"string\">&quot;://&quot;</span>)) &#123;</span><br><span class=\"line\">                url = <span class=\"string\">&quot;http://&quot;</span> + url;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">new</span> URL(url);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (MalformedURLException e) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> IllegalArgumentException(url + <span class=\"string\">&quot; is malformed&quot;</span>, e);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> url;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> String <span class=\"title\">getClientName</span><span class=\"params\">(Map&lt;String, Object&gt; client)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (client == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        String value = (String) client.get(<span class=\"string\">&quot;contextId&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtils.hasText(value)) &#123;</span><br><span class=\"line\">            value = (String) client.get(<span class=\"string\">&quot;value&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtils.hasText(value)) &#123;</span><br><span class=\"line\">            value = (String) client.get(<span class=\"string\">&quot;name&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtils.hasText(value)) &#123;</span><br><span class=\"line\">            value = (String) client.get(<span class=\"string\">&quot;serviceId&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (StringUtils.hasText(value)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> value;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> IllegalStateException(<span class=\"string\">&quot;Either &#x27;name&#x27; or &#x27;value&#x27; must be provided in @&quot;</span></span><br><span class=\"line\">                + FeignClient.class.getSimpleName());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> ClassPathScanningCandidateComponentProvider <span class=\"title\">getScanner</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> ClassPathScanningCandidateComponentProvider(<span class=\"keyword\">false</span>, <span class=\"keyword\">this</span>.environment) &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isCandidateComponent</span><span class=\"params\">(</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                    AnnotatedBeanDefinition beanDefinition)</span> </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">boolean</span> isCandidate = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (beanDefinition.getMetadata().isIndependent()) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!beanDefinition.getMetadata().isAnnotation()) &#123;</span><br><span class=\"line\">                        isCandidate = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> isCandidate;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setEnvironment</span><span class=\"params\">(Environment environment)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.environment = environment;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setResourceLoader</span><span class=\"params\">(ResourceLoader resourceLoader)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.resourceLoader = resourceLoader;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">NetflixFeignBeanPostProcessor</span> <span class=\"keyword\">implements</span> <span class=\"title\">BeanFactoryPostProcessor</span>, <span class=\"title\">ResourceLoaderAware</span>, <span class=\"title\">EnvironmentAware</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String[] basePackages = <span class=\"keyword\">new</span> String[]&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> ResourceLoader resourceLoader;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Environment environment;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Resource</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Decoder decoder;</span><br><span class=\"line\">    <span class=\"meta\">@Resource</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Encoder encoder;</span><br><span class=\"line\">    <span class=\"meta\">@Resource</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Client client;</span><br><span class=\"line\">    <span class=\"meta\">@Resource</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Contract contract;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">postProcessBeanFactory</span><span class=\"params\">(ConfigurableListableBeanFactory beanFactory)</span> <span class=\"keyword\">throws</span> BeansException </span>&#123;</span><br><span class=\"line\">        ClassPathScanningCandidateComponentProvider scanner = getScanner();</span><br><span class=\"line\">        scanner.setResourceLoader(<span class=\"keyword\">this</span>.resourceLoader);</span><br><span class=\"line\">        scanner.addIncludeFilter(<span class=\"keyword\">new</span> AnnotationTypeFilter(FeignClient.class));</span><br><span class=\"line\"></span><br><span class=\"line\">        LinkedHashSet&lt;BeanDefinition&gt; candidateComponents = <span class=\"keyword\">new</span> LinkedHashSet&lt;&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (String basePackage : basePackages) &#123;</span><br><span class=\"line\">            candidateComponents.addAll(scanner.findCandidateComponents(basePackage));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (BeanDefinition candidateComponent : candidateComponents) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (candidateComponent <span class=\"keyword\">instanceof</span> AnnotatedBeanDefinition) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// verify annotated class is an interface</span></span><br><span class=\"line\">                AnnotatedBeanDefinition beanDefinition = (AnnotatedBeanDefinition) candidateComponent;</span><br><span class=\"line\">                AnnotationMetadata annotationMetadata = beanDefinition.getMetadata();</span><br><span class=\"line\">                Assert.isTrue(annotationMetadata.isInterface(),</span><br><span class=\"line\">                        <span class=\"string\">&quot;@FeignClient can only be specified on an interface&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">                Map&lt;String, Object&gt; attributes = annotationMetadata</span><br><span class=\"line\">                        .getAnnotationAttributes(FeignClient.class.getCanonicalName());</span><br><span class=\"line\"></span><br><span class=\"line\">                String name = getClientName(attributes);</span><br><span class=\"line\"></span><br><span class=\"line\">                registerFeignClient(annotationMetadata, attributes, beanFactory);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">registerFeignClient</span><span class=\"params\">(AnnotationMetadata annotationMetadata, Map&lt;String, Object&gt; attributes, ConfigurableListableBeanFactory beanFactory)</span> </span>&#123;</span><br><span class=\"line\">        String className = annotationMetadata.getClassName();</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;register netflix client &#123;&#125;&quot;</span>, className);</span><br><span class=\"line\">        String url = getUrl(attributes);</span><br><span class=\"line\">        String name = getName(attributes);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (StringUtils.isEmpty(url)) &#123;</span><br><span class=\"line\">            url = environment.getProperty(name + <span class=\"string\">&quot;.ribbon.listOfServers&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            beanFactory.registerSingleton(className, Feign.builder()</span><br><span class=\"line\">                    .contract(<span class=\"keyword\">new</span> SpringMvcContract())</span><br><span class=\"line\">                    .target(Class.forName(className), url));</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (ClassNotFoundException e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">&quot; &#123;&#125; class not found&quot;</span>, className, e);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.warn(<span class=\"string\">&quot; &#123;&#125; class url is empty&quot;</span>, className);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> String <span class=\"title\">getName</span><span class=\"params\">(Map&lt;String, Object&gt; attributes)</span> </span>&#123;</span><br><span class=\"line\">        String name = (String) attributes.get(<span class=\"string\">&quot;serviceId&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtils.hasText(name)) &#123;</span><br><span class=\"line\">            name = (String) attributes.get(<span class=\"string\">&quot;name&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtils.hasText(name)) &#123;</span><br><span class=\"line\">            name = (String) attributes.get(<span class=\"string\">&quot;value&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        name = resolve(name);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtils.hasText(name)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        String host = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            String url;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!name.startsWith(<span class=\"string\">&quot;http://&quot;</span>) &amp;&amp; !name.startsWith(<span class=\"string\">&quot;https://&quot;</span>)) &#123;</span><br><span class=\"line\">                url = <span class=\"string\">&quot;http://&quot;</span> + name;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                url = name;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            host = <span class=\"keyword\">new</span> URI(url).getHost();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (URISyntaxException e) &#123;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Assert.state(host != <span class=\"keyword\">null</span>, <span class=\"string\">&quot;Service id not legal hostname (&quot;</span> + name + <span class=\"string\">&quot;)&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> String <span class=\"title\">resolve</span><span class=\"params\">(String value)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (StringUtils.hasText(value)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.environment.resolvePlaceholders(value);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> value;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> String <span class=\"title\">getUrl</span><span class=\"params\">(Map&lt;String, Object&gt; attributes)</span> </span>&#123;</span><br><span class=\"line\">        String url = resolve((String) attributes.get(<span class=\"string\">&quot;url&quot;</span>));</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (StringUtils.hasText(url) &amp;&amp; !(url.startsWith(<span class=\"string\">&quot;#&#123;&quot;</span>) &amp;&amp; url.contains(<span class=\"string\">&quot;&#125;&quot;</span>))) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!url.contains(<span class=\"string\">&quot;://&quot;</span>)) &#123;</span><br><span class=\"line\">                url = <span class=\"string\">&quot;http://&quot;</span> + url;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">new</span> URL(url);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (MalformedURLException e) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> IllegalArgumentException(url + <span class=\"string\">&quot; is malformed&quot;</span>, e);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> url;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> String <span class=\"title\">getClientName</span><span class=\"params\">(Map&lt;String, Object&gt; client)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (client == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        String value = (String) client.get(<span class=\"string\">&quot;contextId&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtils.hasText(value)) &#123;</span><br><span class=\"line\">            value = (String) client.get(<span class=\"string\">&quot;value&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtils.hasText(value)) &#123;</span><br><span class=\"line\">            value = (String) client.get(<span class=\"string\">&quot;name&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtils.hasText(value)) &#123;</span><br><span class=\"line\">            value = (String) client.get(<span class=\"string\">&quot;serviceId&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (StringUtils.hasText(value)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> value;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> IllegalStateException(<span class=\"string\">&quot;Either &#x27;name&#x27; or &#x27;value&#x27; must be provided in @&quot;</span></span><br><span class=\"line\">                + FeignClient.class.getSimpleName());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> ClassPathScanningCandidateComponentProvider <span class=\"title\">getScanner</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> ClassPathScanningCandidateComponentProvider(<span class=\"keyword\">false</span>, <span class=\"keyword\">this</span>.environment) &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isCandidateComponent</span><span class=\"params\">(</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                    AnnotatedBeanDefinition beanDefinition)</span> </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">boolean</span> isCandidate = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (beanDefinition.getMetadata().isIndependent()) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!beanDefinition.getMetadata().isAnnotation()) &#123;</span><br><span class=\"line\">                        isCandidate = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> isCandidate;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setEnvironment</span><span class=\"params\">(Environment environment)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.environment = environment;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setResourceLoader</span><span class=\"params\">(ResourceLoader resourceLoader)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.resourceLoader = resourceLoader;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"hackintosh","date":"2020-11-03T02:40:33.000Z","mp3":null,"cover":null,"_content":"\n#### system image\n10.15.7 (19H2)\n[cloud.189.cn/t/EJBRvqqmmiAb](cloud.189.cn/t/EJBRvqqmmiAb) \npassword: 6fhv\n\n#### efi\n\n[Thinkpad x270](https://github.com/sineline/Thinkpad-x270-i5-6200U-HD520-Clover)\n\n[HP 15-ak039TX (950M/GTX)](https://github.com/lgs3137/PAVILION_Gaming_NB-macOS)\n\n","source":"_posts/hackintosh.md","raw":"---\ntitle: hackintosh\ndate: 2020-11-03 10:40:33\ntags: mac\ncategories: mac\nmp3:\ncover:\n---\n\n#### system image\n10.15.7 (19H2)\n[cloud.189.cn/t/EJBRvqqmmiAb](cloud.189.cn/t/EJBRvqqmmiAb) \npassword: 6fhv\n\n#### efi\n\n[Thinkpad x270](https://github.com/sineline/Thinkpad-x270-i5-6200U-HD520-Clover)\n\n[HP 15-ak039TX (950M/GTX)](https://github.com/lgs3137/PAVILION_Gaming_NB-macOS)\n\n","slug":"hackintosh","published":1,"updated":"2021-02-06T11:36:06.041Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckkttizgi000k4u856h8m934g","content":"<h4 id=\"system-image\"><a href=\"#system-image\" class=\"headerlink\" title=\"system image\"></a>system image</h4><p>10.15.7 (19H2)<br><a href=\"cloud.189.cn/t/EJBRvqqmmiAb\">cloud.189.cn/t/EJBRvqqmmiAb</a><br>password: 6fhv</p>\n<h4 id=\"efi\"><a href=\"#efi\" class=\"headerlink\" title=\"efi\"></a>efi</h4><p><a href=\"https://github.com/sineline/Thinkpad-x270-i5-6200U-HD520-Clover\">Thinkpad x270</a></p>\n<p><a href=\"https://github.com/lgs3137/PAVILION_Gaming_NB-macOS\">HP 15-ak039TX (950M/GTX)</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"system-image\"><a href=\"#system-image\" class=\"headerlink\" title=\"system image\"></a>system image</h4><p>10.15.7 (19H2)<br><a href=\"cloud.189.cn/t/EJBRvqqmmiAb\">cloud.189.cn/t/EJBRvqqmmiAb</a><br>password: 6fhv</p>\n<h4 id=\"efi\"><a href=\"#efi\" class=\"headerlink\" title=\"efi\"></a>efi</h4><p><a href=\"https://github.com/sineline/Thinkpad-x270-i5-6200U-HD520-Clover\">Thinkpad x270</a></p>\n<p><a href=\"https://github.com/lgs3137/PAVILION_Gaming_NB-macOS\">HP 15-ak039TX (950M/GTX)</a></p>\n"},{"title":"蚂蚁笔记","date":"2020-11-07T02:56:09.000Z","mp3":null,"cover":null,"_content":"\n安装蚂蚁笔记\n\n\n```shell\n#启动专属mongo\ndocker run -d -p 37017:27017 -e MONGO_INITDB_ROOT_USERNAME=admin -e MONGO_INITDB_ROOT_PASSWORD=password -v /opt/leanote/mongo:/data/db --name leanote_mongo --restart always mongo:latest\n\n#修改app.conf\nvim /opt/leanote/app.conf\n\n#创建leanote文件夹\nmkdir -p leanote-data/{files,mongodb_backup,public/upload}\n#启动leanote 应该使用birdge网络 用nginx 代理\ndocker run -d -v /opt/leanote/app.conf:/leanote/conf/app.conf -v /opt/leanote/leanote-data:/leanote/data --name leanote --network host --restart always jim3ma/leanote\n```\n\n[https://hub.docker.com/r/jim3ma/leanote](https://hub.docker.com/r/jim3ma/leanote)\n\n\n 不好用 发现已经凉凉了 ","source":"_posts/leanote.md","raw":"---\ntitle: 蚂蚁笔记\ndate: 2020-11-07 10:56:09\ntags: linux\ncategories: linux\nmp3:\ncover:\n---\n\n安装蚂蚁笔记\n\n\n```shell\n#启动专属mongo\ndocker run -d -p 37017:27017 -e MONGO_INITDB_ROOT_USERNAME=admin -e MONGO_INITDB_ROOT_PASSWORD=password -v /opt/leanote/mongo:/data/db --name leanote_mongo --restart always mongo:latest\n\n#修改app.conf\nvim /opt/leanote/app.conf\n\n#创建leanote文件夹\nmkdir -p leanote-data/{files,mongodb_backup,public/upload}\n#启动leanote 应该使用birdge网络 用nginx 代理\ndocker run -d -v /opt/leanote/app.conf:/leanote/conf/app.conf -v /opt/leanote/leanote-data:/leanote/data --name leanote --network host --restart always jim3ma/leanote\n```\n\n[https://hub.docker.com/r/jim3ma/leanote](https://hub.docker.com/r/jim3ma/leanote)\n\n\n 不好用 发现已经凉凉了 ","slug":"leanote","published":1,"updated":"2021-02-06T11:36:06.041Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckkttizgi000l4u859odlazbd","content":"<p>安装蚂蚁笔记</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">启动专属mongo</span></span><br><span class=\"line\">docker run -d -p 37017:27017 -e MONGO_INITDB_ROOT_USERNAME=admin -e MONGO_INITDB_ROOT_PASSWORD=password -v /opt/leanote/mongo:/data/db --name leanote_mongo --restart always mongo:latest</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">修改app.conf</span></span><br><span class=\"line\">vim /opt/leanote/app.conf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">创建leanote文件夹</span></span><br><span class=\"line\">mkdir -p leanote-data/&#123;files,mongodb_backup,public/upload&#125;</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">启动leanote 应该使用birdge网络 用nginx 代理</span></span><br><span class=\"line\">docker run -d -v /opt/leanote/app.conf:/leanote/conf/app.conf -v /opt/leanote/leanote-data:/leanote/data --name leanote --network host --restart always jim3ma/leanote</span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://hub.docker.com/r/jim3ma/leanote\">https://hub.docker.com/r/jim3ma/leanote</a></p>\n<p> 不好用 发现已经凉凉了 </p>\n","site":{"data":{}},"excerpt":"","more":"<p>安装蚂蚁笔记</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">启动专属mongo</span></span><br><span class=\"line\">docker run -d -p 37017:27017 -e MONGO_INITDB_ROOT_USERNAME=admin -e MONGO_INITDB_ROOT_PASSWORD=password -v /opt/leanote/mongo:/data/db --name leanote_mongo --restart always mongo:latest</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">修改app.conf</span></span><br><span class=\"line\">vim /opt/leanote/app.conf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">创建leanote文件夹</span></span><br><span class=\"line\">mkdir -p leanote-data/&#123;files,mongodb_backup,public/upload&#125;</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">启动leanote 应该使用birdge网络 用nginx 代理</span></span><br><span class=\"line\">docker run -d -v /opt/leanote/app.conf:/leanote/conf/app.conf -v /opt/leanote/leanote-data:/leanote/data --name leanote --network host --restart always jim3ma/leanote</span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://hub.docker.com/r/jim3ma/leanote\">https://hub.docker.com/r/jim3ma/leanote</a></p>\n<p> 不好用 发现已经凉凉了 </p>\n"},{"title":"一致性协议(raft)","date":"2020-11-12T05:15:45.000Z","mp3":null,"cover":null,"_content":"## 起因\n分布式保证一致性\n\n## 线型一致性\nLinearizability\n线性一致性又被称为强一致性、严格一致性、原子一致性。是程序能实现的最高的一致性模型，也是分布式系统用户最期望的一致性。CAP 中的 C 一般就指它\n\n## 比较\n\n\n## 实现\n### [raft-java](https://github.com/wenweihu86/raft-java)\n\n\n### [jraft](https://github.com/sofastack/sofa-jraft)\n\n读服务，可以从 leader，也可以从 follower 读取状态机数据，但是从 follower 读取的可能不是最新的数据，存在时间差，也就是存在脏读。启用线性一致读将保证线性一致，并且支持从 follower 读取。\n写服务，更改状态机数据，只能提交到 leader 写入。\n### 线型一致性读\nReadIndex Read\nLease Read\n\n## 验证\n### jepsen\n[https://github.com/jepsen-io/jepsen](https://github.com/jepsen-io/jepsen)\n\n### sofa-jraft-jepsen\n代码现成的[https://github.com/sofastack/sofa-jraft-jepsen](https://github.com/sofastack/sofa-jraft-jepsen) 实际操作一下\n\n使用docer部署5个节点 和 一个控制端\n\nDockerfile\n\n```Dockerfile\nFROM ubuntu:18.04\nLABEL Description=\"This image is used to test jepsen for jraft\"\nWORKDIR /root\nRUN apt update && \\\n\tapt install -y sudo && \\\n\tapt install -y openssh-server && \\\n\tapt install -y openjdk-8-jre && \\\n\tapt install -y curl && \\\n\tapt install -y iptables && \\\n\tapt install -y gnuplot\nRUN\tcurl -O https://download.clojure.org/install/linux-install-1.10.1.727.sh &&\\\n\tchmod +x linux-install-1.10.1.727.sh && \\\n\t./linux-install-1.10.1.727.sh && \\\n\tuseradd -d /home/admin -g root -s /bin/bash -m admin && \\\n\techo \"admin ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers && \\\n\tmkdir /home/admin/.ssh \nCOPY --chown=admin:root authorized_keys /home/admin/.ssh/authorized_keys\nCOPY --chown=root:root id_rsa /root/.ssh/\nCOPY --chown=root:root id_rsa.pub /root/.ssh/\nCOPY sofa-jraft-jepsen-master/ /root/\nCOPY /bin /usr/bin\nENTRYPOINT service ssh start && \\\n\ttail -f /var/log/dpkg.log\nCMD [\"bash\"]\n\n```\n\n启动容器\n```shell\n#! /bin/sh\ndocker run -d --network jepsen --hostname jraft.host1 --name jraft.host1 --rm --cap-add NET_ADMIN jepsen:0.0.1\ndocker run -d --network jepsen --hostname jraft.host2 --name jraft.host2 --rm --cap-add NET_ADMIN jepsen:0.0.1\ndocker run -d --network jepsen --hostname jraft.host3 --name jraft.host3 --rm --cap-add NET_ADMIN jepsen:0.0.1\ndocker run -d --network jepsen --hostname jraft.host4 --name jraft.host4 --rm --cap-add NET_ADMIN jepsen:0.0.1\ndocker run -d --network jepsen --hostname jraft.host5 --name jraft.host5 --rm --cap-add NET_ADMIN jepsen:0.0.1\ndocker run -d --network jepsen --hostname client --name client --rm --cap-add NET_ADMIN jepsen:0.0.1\n\n```\n\n* 容器的名字要跟 nodes 和 project.cli 记录的一致\n* 注意本地 authorized_keys id_rsa id_rsa.pub 的权限是0600\n\n问题\n1. apache-codec/commons-codec/1.2/commons-codec-1.2.jar 拉不下来\nproject.cli 增加 :repositories [[\"alibaba\" \"http://maven.aliyun.com/nexus/content/groups/public\"]]\n2. error='Not enough space' (errno=12) 内存不够\nproject.cli 修改 :jvm-opts [\"-Xms1g\" \"-Xmx1g\" \"-server\" \"-XX:+UseG1GC\"]\n3. java.lang.ClassNotFoundException: javax.xml.bind.DatatypeConverter 还是用openjdk-8吧\n4. Unrecognized option: -client control 脚本里-client参数 去除\n5. 准备好http_proxy\n6. jepsen不支持新的openssh生成的key [https://stackoverflow.com/questions/53134212/invalid-privatekey-when-using-jsch](https://stackoverflow.com/questions/53134212/invalid-privatekey-when-using-jsch)\n7. 没办法在aarch64架构上运行 由于rocksdb [https://github.com/facebook/rocksdb/issues/5559](https://github.com/facebook/rocksdb/issues/5559)\n\n\n##### 结果\n\n\n执行```bash run_test.sh --testfn configuration-test```后\n\n![](/assets/2020-11-15-1.png)\n![](/assets/2020-11-15-2.png)\n![](/assets/latency-quantiles.png)\n![](/assets/latency-raw.png)\n![](/assets/rate.png)\n\n\n所有测试均能通过\n* configuration-test: remove and add a random node.\n* bridge-test: weaving the network into happy little intersecting majority rings\n* pause-test: pausing random node with SIGSTOP/SIGCONT.\n* crash-test: killing random nodes and restarting them.\n* partition-test: Cuts the network into randomly chosen halves.\n* partition-majority-test: Cuts the network into randomly majority groups.\n\n\n所有文件在[https://github.com/8DE4732A/sofa-jraft-jepsen](https://github.com/8DE4732A/sofa-jraft-jepsen)\n\n\n#### 后记\n\n\n\n\n参考:\n[https://raft.github.io/raft.pdf](https://raft.github.io/raft.pdf)\n[http://thesecretlivesofdata.com/raft/](http://thesecretlivesofdata.com/raft/)\n[https://zhuanlan.zhihu.com/p/130974371](https://zhuanlan.zhihu.com/p/130974371)\n[https://segmentfault.com/a/1190000022248118](https://segmentfault.com/a/1190000022248118)\n[https://pingcap.com/blog-cn/lease-read/](https://pingcap.com/blog-cn/lease-read/)\n\n","source":"_posts/jraft.md","raw":"---\ntitle: 一致性协议(raft)\ndate: 2020-11-12 13:15:45\ntags: 算法\ncategories: 算法\nmp3:\ncover:\n---\n## 起因\n分布式保证一致性\n\n## 线型一致性\nLinearizability\n线性一致性又被称为强一致性、严格一致性、原子一致性。是程序能实现的最高的一致性模型，也是分布式系统用户最期望的一致性。CAP 中的 C 一般就指它\n\n## 比较\n\n\n## 实现\n### [raft-java](https://github.com/wenweihu86/raft-java)\n\n\n### [jraft](https://github.com/sofastack/sofa-jraft)\n\n读服务，可以从 leader，也可以从 follower 读取状态机数据，但是从 follower 读取的可能不是最新的数据，存在时间差，也就是存在脏读。启用线性一致读将保证线性一致，并且支持从 follower 读取。\n写服务，更改状态机数据，只能提交到 leader 写入。\n### 线型一致性读\nReadIndex Read\nLease Read\n\n## 验证\n### jepsen\n[https://github.com/jepsen-io/jepsen](https://github.com/jepsen-io/jepsen)\n\n### sofa-jraft-jepsen\n代码现成的[https://github.com/sofastack/sofa-jraft-jepsen](https://github.com/sofastack/sofa-jraft-jepsen) 实际操作一下\n\n使用docer部署5个节点 和 一个控制端\n\nDockerfile\n\n```Dockerfile\nFROM ubuntu:18.04\nLABEL Description=\"This image is used to test jepsen for jraft\"\nWORKDIR /root\nRUN apt update && \\\n\tapt install -y sudo && \\\n\tapt install -y openssh-server && \\\n\tapt install -y openjdk-8-jre && \\\n\tapt install -y curl && \\\n\tapt install -y iptables && \\\n\tapt install -y gnuplot\nRUN\tcurl -O https://download.clojure.org/install/linux-install-1.10.1.727.sh &&\\\n\tchmod +x linux-install-1.10.1.727.sh && \\\n\t./linux-install-1.10.1.727.sh && \\\n\tuseradd -d /home/admin -g root -s /bin/bash -m admin && \\\n\techo \"admin ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers && \\\n\tmkdir /home/admin/.ssh \nCOPY --chown=admin:root authorized_keys /home/admin/.ssh/authorized_keys\nCOPY --chown=root:root id_rsa /root/.ssh/\nCOPY --chown=root:root id_rsa.pub /root/.ssh/\nCOPY sofa-jraft-jepsen-master/ /root/\nCOPY /bin /usr/bin\nENTRYPOINT service ssh start && \\\n\ttail -f /var/log/dpkg.log\nCMD [\"bash\"]\n\n```\n\n启动容器\n```shell\n#! /bin/sh\ndocker run -d --network jepsen --hostname jraft.host1 --name jraft.host1 --rm --cap-add NET_ADMIN jepsen:0.0.1\ndocker run -d --network jepsen --hostname jraft.host2 --name jraft.host2 --rm --cap-add NET_ADMIN jepsen:0.0.1\ndocker run -d --network jepsen --hostname jraft.host3 --name jraft.host3 --rm --cap-add NET_ADMIN jepsen:0.0.1\ndocker run -d --network jepsen --hostname jraft.host4 --name jraft.host4 --rm --cap-add NET_ADMIN jepsen:0.0.1\ndocker run -d --network jepsen --hostname jraft.host5 --name jraft.host5 --rm --cap-add NET_ADMIN jepsen:0.0.1\ndocker run -d --network jepsen --hostname client --name client --rm --cap-add NET_ADMIN jepsen:0.0.1\n\n```\n\n* 容器的名字要跟 nodes 和 project.cli 记录的一致\n* 注意本地 authorized_keys id_rsa id_rsa.pub 的权限是0600\n\n问题\n1. apache-codec/commons-codec/1.2/commons-codec-1.2.jar 拉不下来\nproject.cli 增加 :repositories [[\"alibaba\" \"http://maven.aliyun.com/nexus/content/groups/public\"]]\n2. error='Not enough space' (errno=12) 内存不够\nproject.cli 修改 :jvm-opts [\"-Xms1g\" \"-Xmx1g\" \"-server\" \"-XX:+UseG1GC\"]\n3. java.lang.ClassNotFoundException: javax.xml.bind.DatatypeConverter 还是用openjdk-8吧\n4. Unrecognized option: -client control 脚本里-client参数 去除\n5. 准备好http_proxy\n6. jepsen不支持新的openssh生成的key [https://stackoverflow.com/questions/53134212/invalid-privatekey-when-using-jsch](https://stackoverflow.com/questions/53134212/invalid-privatekey-when-using-jsch)\n7. 没办法在aarch64架构上运行 由于rocksdb [https://github.com/facebook/rocksdb/issues/5559](https://github.com/facebook/rocksdb/issues/5559)\n\n\n##### 结果\n\n\n执行```bash run_test.sh --testfn configuration-test```后\n\n![](/assets/2020-11-15-1.png)\n![](/assets/2020-11-15-2.png)\n![](/assets/latency-quantiles.png)\n![](/assets/latency-raw.png)\n![](/assets/rate.png)\n\n\n所有测试均能通过\n* configuration-test: remove and add a random node.\n* bridge-test: weaving the network into happy little intersecting majority rings\n* pause-test: pausing random node with SIGSTOP/SIGCONT.\n* crash-test: killing random nodes and restarting them.\n* partition-test: Cuts the network into randomly chosen halves.\n* partition-majority-test: Cuts the network into randomly majority groups.\n\n\n所有文件在[https://github.com/8DE4732A/sofa-jraft-jepsen](https://github.com/8DE4732A/sofa-jraft-jepsen)\n\n\n#### 后记\n\n\n\n\n参考:\n[https://raft.github.io/raft.pdf](https://raft.github.io/raft.pdf)\n[http://thesecretlivesofdata.com/raft/](http://thesecretlivesofdata.com/raft/)\n[https://zhuanlan.zhihu.com/p/130974371](https://zhuanlan.zhihu.com/p/130974371)\n[https://segmentfault.com/a/1190000022248118](https://segmentfault.com/a/1190000022248118)\n[https://pingcap.com/blog-cn/lease-read/](https://pingcap.com/blog-cn/lease-read/)\n\n","slug":"jraft","published":1,"updated":"2021-02-06T11:36:06.041Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckkttizgk000o4u85evsk7e4x","content":"<h2 id=\"起因\"><a href=\"#起因\" class=\"headerlink\" title=\"起因\"></a>起因</h2><p>分布式保证一致性</p>\n<h2 id=\"线型一致性\"><a href=\"#线型一致性\" class=\"headerlink\" title=\"线型一致性\"></a>线型一致性</h2><p>Linearizability<br>线性一致性又被称为强一致性、严格一致性、原子一致性。是程序能实现的最高的一致性模型，也是分布式系统用户最期望的一致性。CAP 中的 C 一般就指它</p>\n<h2 id=\"比较\"><a href=\"#比较\" class=\"headerlink\" title=\"比较\"></a>比较</h2><h2 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h2><h3 id=\"raft-java\"><a href=\"#raft-java\" class=\"headerlink\" title=\"raft-java\"></a><a href=\"https://github.com/wenweihu86/raft-java\">raft-java</a></h3><h3 id=\"jraft\"><a href=\"#jraft\" class=\"headerlink\" title=\"jraft\"></a><a href=\"https://github.com/sofastack/sofa-jraft\">jraft</a></h3><p>读服务，可以从 leader，也可以从 follower 读取状态机数据，但是从 follower 读取的可能不是最新的数据，存在时间差，也就是存在脏读。启用线性一致读将保证线性一致，并且支持从 follower 读取。<br>写服务，更改状态机数据，只能提交到 leader 写入。</p>\n<h3 id=\"线型一致性读\"><a href=\"#线型一致性读\" class=\"headerlink\" title=\"线型一致性读\"></a>线型一致性读</h3><p>ReadIndex Read<br>Lease Read</p>\n<h2 id=\"验证\"><a href=\"#验证\" class=\"headerlink\" title=\"验证\"></a>验证</h2><h3 id=\"jepsen\"><a href=\"#jepsen\" class=\"headerlink\" title=\"jepsen\"></a>jepsen</h3><p><a href=\"https://github.com/jepsen-io/jepsen\">https://github.com/jepsen-io/jepsen</a></p>\n<h3 id=\"sofa-jraft-jepsen\"><a href=\"#sofa-jraft-jepsen\" class=\"headerlink\" title=\"sofa-jraft-jepsen\"></a>sofa-jraft-jepsen</h3><p>代码现成的<a href=\"https://github.com/sofastack/sofa-jraft-jepsen\">https://github.com/sofastack/sofa-jraft-jepsen</a> 实际操作一下</p>\n<p>使用docer部署5个节点 和 一个控制端</p>\n<p>Dockerfile</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> ubuntu:<span class=\"number\">18.04</span></span><br><span class=\"line\"><span class=\"keyword\">LABEL</span><span class=\"bash\"> Description=<span class=\"string\">&quot;This image is used to test jepsen for jraft&quot;</span></span></span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"bash\"> /root</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> apt update &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"bash\">\tapt install -y sudo &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"bash\">\tapt install -y openssh-server &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"bash\">\tapt install -y openjdk-8-jre &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"bash\">\tapt install -y curl &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"bash\">\tapt install -y iptables &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"bash\">\tapt install -y gnuplot</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\">\tcurl -O https://download.clojure.org/install/linux-install-1.10.1.727.sh &amp;&amp;\\</span></span><br><span class=\"line\"><span class=\"bash\">\tchmod +x linux-install-1.10.1.727.sh &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"bash\">\t./linux-install-1.10.1.727.sh &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"bash\">\tuseradd -d /home/admin -g root -s /bin/bash -m admin &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"bash\">\t<span class=\"built_in\">echo</span> <span class=\"string\">&quot;admin ALL=(ALL) NOPASSWD:ALL&quot;</span> &gt;&gt; /etc/sudoers &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"bash\">\tmkdir /home/admin/.ssh </span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> --chown=admin:root authorized_keys /home/admin/.ssh/authorized_keys</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> --chown=root:root id_rsa /root/.ssh/</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> --chown=root:root id_rsa.pub /root/.ssh/</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> sofa-jraft-jepsen-master/ /root/</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> /bin /usr/bin</span></span><br><span class=\"line\"><span class=\"keyword\">ENTRYPOINT</span><span class=\"bash\"> service ssh start &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"bash\">\ttail -f /var/<span class=\"built_in\">log</span>/dpkg.log</span></span><br><span class=\"line\"><span class=\"keyword\">CMD</span><span class=\"bash\"> [<span class=\"string\">&quot;bash&quot;</span>]</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>启动容器</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">! /bin/sh</span></span><br><span class=\"line\">docker run -d --network jepsen --hostname jraft.host1 --name jraft.host1 --rm --cap-add NET_ADMIN jepsen:0.0.1</span><br><span class=\"line\">docker run -d --network jepsen --hostname jraft.host2 --name jraft.host2 --rm --cap-add NET_ADMIN jepsen:0.0.1</span><br><span class=\"line\">docker run -d --network jepsen --hostname jraft.host3 --name jraft.host3 --rm --cap-add NET_ADMIN jepsen:0.0.1</span><br><span class=\"line\">docker run -d --network jepsen --hostname jraft.host4 --name jraft.host4 --rm --cap-add NET_ADMIN jepsen:0.0.1</span><br><span class=\"line\">docker run -d --network jepsen --hostname jraft.host5 --name jraft.host5 --rm --cap-add NET_ADMIN jepsen:0.0.1</span><br><span class=\"line\">docker run -d --network jepsen --hostname client --name client --rm --cap-add NET_ADMIN jepsen:0.0.1</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>容器的名字要跟 nodes 和 project.cli 记录的一致</li>\n<li>注意本地 authorized_keys id_rsa id_rsa.pub 的权限是0600</li>\n</ul>\n<p>问题</p>\n<ol>\n<li>apache-codec/commons-codec/1.2/commons-codec-1.2.jar 拉不下来<br>project.cli 增加 :repositories [[“alibaba” “<a href=\"http://maven.aliyun.com/nexus/content/groups/public&quot;]]\">http://maven.aliyun.com/nexus/content/groups/public&quot;]]</a></li>\n<li>error=’Not enough space’ (errno=12) 内存不够<br>project.cli 修改 :jvm-opts [“-Xms1g” “-Xmx1g” “-server” “-XX:+UseG1GC”]</li>\n<li>java.lang.ClassNotFoundException: javax.xml.bind.DatatypeConverter 还是用openjdk-8吧</li>\n<li>Unrecognized option: -client control 脚本里-client参数 去除</li>\n<li>准备好http_proxy</li>\n<li>jepsen不支持新的openssh生成的key <a href=\"https://stackoverflow.com/questions/53134212/invalid-privatekey-when-using-jsch\">https://stackoverflow.com/questions/53134212/invalid-privatekey-when-using-jsch</a></li>\n<li>没办法在aarch64架构上运行 由于rocksdb <a href=\"https://github.com/facebook/rocksdb/issues/5559\">https://github.com/facebook/rocksdb/issues/5559</a></li>\n</ol>\n<h5 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h5><p>执行<code>bash run_test.sh --testfn configuration-test</code>后</p>\n<p><img src=\"/assets/2020-11-15-1.png\"><br><img src=\"/assets/2020-11-15-2.png\"><br><img src=\"/assets/latency-quantiles.png\"><br><img src=\"/assets/latency-raw.png\"><br><img src=\"/assets/rate.png\"></p>\n<p>所有测试均能通过</p>\n<ul>\n<li>configuration-test: remove and add a random node.</li>\n<li>bridge-test: weaving the network into happy little intersecting majority rings</li>\n<li>pause-test: pausing random node with SIGSTOP/SIGCONT.</li>\n<li>crash-test: killing random nodes and restarting them.</li>\n<li>partition-test: Cuts the network into randomly chosen halves.</li>\n<li>partition-majority-test: Cuts the network into randomly majority groups.</li>\n</ul>\n<p>所有文件在<a href=\"https://github.com/8DE4732A/sofa-jraft-jepsen\">https://github.com/8DE4732A/sofa-jraft-jepsen</a></p>\n<h4 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h4><p>参考:<br><a href=\"https://raft.github.io/raft.pdf\">https://raft.github.io/raft.pdf</a><br><a href=\"http://thesecretlivesofdata.com/raft/\">http://thesecretlivesofdata.com/raft/</a><br><a href=\"https://zhuanlan.zhihu.com/p/130974371\">https://zhuanlan.zhihu.com/p/130974371</a><br><a href=\"https://segmentfault.com/a/1190000022248118\">https://segmentfault.com/a/1190000022248118</a><br><a href=\"https://pingcap.com/blog-cn/lease-read/\">https://pingcap.com/blog-cn/lease-read/</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"起因\"><a href=\"#起因\" class=\"headerlink\" title=\"起因\"></a>起因</h2><p>分布式保证一致性</p>\n<h2 id=\"线型一致性\"><a href=\"#线型一致性\" class=\"headerlink\" title=\"线型一致性\"></a>线型一致性</h2><p>Linearizability<br>线性一致性又被称为强一致性、严格一致性、原子一致性。是程序能实现的最高的一致性模型，也是分布式系统用户最期望的一致性。CAP 中的 C 一般就指它</p>\n<h2 id=\"比较\"><a href=\"#比较\" class=\"headerlink\" title=\"比较\"></a>比较</h2><h2 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h2><h3 id=\"raft-java\"><a href=\"#raft-java\" class=\"headerlink\" title=\"raft-java\"></a><a href=\"https://github.com/wenweihu86/raft-java\">raft-java</a></h3><h3 id=\"jraft\"><a href=\"#jraft\" class=\"headerlink\" title=\"jraft\"></a><a href=\"https://github.com/sofastack/sofa-jraft\">jraft</a></h3><p>读服务，可以从 leader，也可以从 follower 读取状态机数据，但是从 follower 读取的可能不是最新的数据，存在时间差，也就是存在脏读。启用线性一致读将保证线性一致，并且支持从 follower 读取。<br>写服务，更改状态机数据，只能提交到 leader 写入。</p>\n<h3 id=\"线型一致性读\"><a href=\"#线型一致性读\" class=\"headerlink\" title=\"线型一致性读\"></a>线型一致性读</h3><p>ReadIndex Read<br>Lease Read</p>\n<h2 id=\"验证\"><a href=\"#验证\" class=\"headerlink\" title=\"验证\"></a>验证</h2><h3 id=\"jepsen\"><a href=\"#jepsen\" class=\"headerlink\" title=\"jepsen\"></a>jepsen</h3><p><a href=\"https://github.com/jepsen-io/jepsen\">https://github.com/jepsen-io/jepsen</a></p>\n<h3 id=\"sofa-jraft-jepsen\"><a href=\"#sofa-jraft-jepsen\" class=\"headerlink\" title=\"sofa-jraft-jepsen\"></a>sofa-jraft-jepsen</h3><p>代码现成的<a href=\"https://github.com/sofastack/sofa-jraft-jepsen\">https://github.com/sofastack/sofa-jraft-jepsen</a> 实际操作一下</p>\n<p>使用docer部署5个节点 和 一个控制端</p>\n<p>Dockerfile</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> ubuntu:<span class=\"number\">18.04</span></span><br><span class=\"line\"><span class=\"keyword\">LABEL</span><span class=\"bash\"> Description=<span class=\"string\">&quot;This image is used to test jepsen for jraft&quot;</span></span></span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"bash\"> /root</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> apt update &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"bash\">\tapt install -y sudo &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"bash\">\tapt install -y openssh-server &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"bash\">\tapt install -y openjdk-8-jre &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"bash\">\tapt install -y curl &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"bash\">\tapt install -y iptables &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"bash\">\tapt install -y gnuplot</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\">\tcurl -O https://download.clojure.org/install/linux-install-1.10.1.727.sh &amp;&amp;\\</span></span><br><span class=\"line\"><span class=\"bash\">\tchmod +x linux-install-1.10.1.727.sh &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"bash\">\t./linux-install-1.10.1.727.sh &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"bash\">\tuseradd -d /home/admin -g root -s /bin/bash -m admin &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"bash\">\t<span class=\"built_in\">echo</span> <span class=\"string\">&quot;admin ALL=(ALL) NOPASSWD:ALL&quot;</span> &gt;&gt; /etc/sudoers &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"bash\">\tmkdir /home/admin/.ssh </span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> --chown=admin:root authorized_keys /home/admin/.ssh/authorized_keys</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> --chown=root:root id_rsa /root/.ssh/</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> --chown=root:root id_rsa.pub /root/.ssh/</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> sofa-jraft-jepsen-master/ /root/</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> /bin /usr/bin</span></span><br><span class=\"line\"><span class=\"keyword\">ENTRYPOINT</span><span class=\"bash\"> service ssh start &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"bash\">\ttail -f /var/<span class=\"built_in\">log</span>/dpkg.log</span></span><br><span class=\"line\"><span class=\"keyword\">CMD</span><span class=\"bash\"> [<span class=\"string\">&quot;bash&quot;</span>]</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>启动容器</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">! /bin/sh</span></span><br><span class=\"line\">docker run -d --network jepsen --hostname jraft.host1 --name jraft.host1 --rm --cap-add NET_ADMIN jepsen:0.0.1</span><br><span class=\"line\">docker run -d --network jepsen --hostname jraft.host2 --name jraft.host2 --rm --cap-add NET_ADMIN jepsen:0.0.1</span><br><span class=\"line\">docker run -d --network jepsen --hostname jraft.host3 --name jraft.host3 --rm --cap-add NET_ADMIN jepsen:0.0.1</span><br><span class=\"line\">docker run -d --network jepsen --hostname jraft.host4 --name jraft.host4 --rm --cap-add NET_ADMIN jepsen:0.0.1</span><br><span class=\"line\">docker run -d --network jepsen --hostname jraft.host5 --name jraft.host5 --rm --cap-add NET_ADMIN jepsen:0.0.1</span><br><span class=\"line\">docker run -d --network jepsen --hostname client --name client --rm --cap-add NET_ADMIN jepsen:0.0.1</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>容器的名字要跟 nodes 和 project.cli 记录的一致</li>\n<li>注意本地 authorized_keys id_rsa id_rsa.pub 的权限是0600</li>\n</ul>\n<p>问题</p>\n<ol>\n<li>apache-codec/commons-codec/1.2/commons-codec-1.2.jar 拉不下来<br>project.cli 增加 :repositories [[“alibaba” “<a href=\"http://maven.aliyun.com/nexus/content/groups/public&quot;]]\">http://maven.aliyun.com/nexus/content/groups/public&quot;]]</a></li>\n<li>error=’Not enough space’ (errno=12) 内存不够<br>project.cli 修改 :jvm-opts [“-Xms1g” “-Xmx1g” “-server” “-XX:+UseG1GC”]</li>\n<li>java.lang.ClassNotFoundException: javax.xml.bind.DatatypeConverter 还是用openjdk-8吧</li>\n<li>Unrecognized option: -client control 脚本里-client参数 去除</li>\n<li>准备好http_proxy</li>\n<li>jepsen不支持新的openssh生成的key <a href=\"https://stackoverflow.com/questions/53134212/invalid-privatekey-when-using-jsch\">https://stackoverflow.com/questions/53134212/invalid-privatekey-when-using-jsch</a></li>\n<li>没办法在aarch64架构上运行 由于rocksdb <a href=\"https://github.com/facebook/rocksdb/issues/5559\">https://github.com/facebook/rocksdb/issues/5559</a></li>\n</ol>\n<h5 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h5><p>执行<code>bash run_test.sh --testfn configuration-test</code>后</p>\n<p><img src=\"/assets/2020-11-15-1.png\"><br><img src=\"/assets/2020-11-15-2.png\"><br><img src=\"/assets/latency-quantiles.png\"><br><img src=\"/assets/latency-raw.png\"><br><img src=\"/assets/rate.png\"></p>\n<p>所有测试均能通过</p>\n<ul>\n<li>configuration-test: remove and add a random node.</li>\n<li>bridge-test: weaving the network into happy little intersecting majority rings</li>\n<li>pause-test: pausing random node with SIGSTOP/SIGCONT.</li>\n<li>crash-test: killing random nodes and restarting them.</li>\n<li>partition-test: Cuts the network into randomly chosen halves.</li>\n<li>partition-majority-test: Cuts the network into randomly majority groups.</li>\n</ul>\n<p>所有文件在<a href=\"https://github.com/8DE4732A/sofa-jraft-jepsen\">https://github.com/8DE4732A/sofa-jraft-jepsen</a></p>\n<h4 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h4><p>参考:<br><a href=\"https://raft.github.io/raft.pdf\">https://raft.github.io/raft.pdf</a><br><a href=\"http://thesecretlivesofdata.com/raft/\">http://thesecretlivesofdata.com/raft/</a><br><a href=\"https://zhuanlan.zhihu.com/p/130974371\">https://zhuanlan.zhihu.com/p/130974371</a><br><a href=\"https://segmentfault.com/a/1190000022248118\">https://segmentfault.com/a/1190000022248118</a><br><a href=\"https://pingcap.com/blog-cn/lease-read/\">https://pingcap.com/blog-cn/lease-read/</a></p>\n"},{"title":"opencv","date":"2020-10-28T03:28:38.000Z","mp3":null,"cover":null,"_content":"### 人脸检测\n```python\nimport cv2\nimport os\nfrom pathlib import Path\n\nIMAGE_PATH = \"assets/\"\n\np = Path(IMAGE_PATH)\nfile_names = [x.name for x in p.iterdir()]\nfor file_name in file_names:\n    img = cv2.imread(IMAGE_PATH + file_name)\n    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\n    face_cascade = cv2.CascadeClassifier(\n        cv2.data.haarcascades + 'haarcascade_frontalface_alt.xml')\n    faces = face_cascade.detectMultiScale(\n        gray, scaleFactor=1.2, minNeighbors=5)\n    for (x, y, w, h) in faces:\n        img = cv2.rectangle(img, (x, y), (x + w, y + h), (0, 255, 0), 1)\n        cv2.imwrite(IMAGE_PATH + file_name, img)\n```\n### 摄像头捕获\n```python\nimport numpy as np\nimport cv2\nimport time\n\ncap = cv2.VideoCapture(0)\nif not cap.isOpened():\n    print(\"Cannot open camera\")\n    exit()\nwhile True:\n    time.sleep(0.2)\n    ret, frame = cap.read()\n    if not ret:\n        print(\"Can't receive frame (stream end?). Exiting ...\")\n        break\n    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)\n    face_cascade = cv2.CascadeClassifier(\n        cv2.data.haarcascades + 'haarcascade_frontalface_alt.xml')\n    faces = face_cascade.detectMultiScale(\n        gray, scaleFactor=1.2, minNeighbors=5)\n    for (x, y, w, h) in faces:\n        frame = cv2.rectangle(frame, (x, y), (x + w, y + h), (0, 255, 0), 1)\n    cv2.imshow('frame', frame)\n    if cv2.waitKey(1) == ord('q'):\n        break\ncap.release()\ncv2.destroyAllWindows()\n```\n\n[http://woshicver.com/](http://woshicver.com/)\n\n[http://objectdetection.cn/](http://objectdetection.cn/)","source":"_posts/opencv.md","raw":"---\ntitle: opencv\ndate: 2020-10-28 11:28:38\ntags: img\ncategories: img\nmp3:\ncover:\n---\n### 人脸检测\n```python\nimport cv2\nimport os\nfrom pathlib import Path\n\nIMAGE_PATH = \"assets/\"\n\np = Path(IMAGE_PATH)\nfile_names = [x.name for x in p.iterdir()]\nfor file_name in file_names:\n    img = cv2.imread(IMAGE_PATH + file_name)\n    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\n    face_cascade = cv2.CascadeClassifier(\n        cv2.data.haarcascades + 'haarcascade_frontalface_alt.xml')\n    faces = face_cascade.detectMultiScale(\n        gray, scaleFactor=1.2, minNeighbors=5)\n    for (x, y, w, h) in faces:\n        img = cv2.rectangle(img, (x, y), (x + w, y + h), (0, 255, 0), 1)\n        cv2.imwrite(IMAGE_PATH + file_name, img)\n```\n### 摄像头捕获\n```python\nimport numpy as np\nimport cv2\nimport time\n\ncap = cv2.VideoCapture(0)\nif not cap.isOpened():\n    print(\"Cannot open camera\")\n    exit()\nwhile True:\n    time.sleep(0.2)\n    ret, frame = cap.read()\n    if not ret:\n        print(\"Can't receive frame (stream end?). Exiting ...\")\n        break\n    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)\n    face_cascade = cv2.CascadeClassifier(\n        cv2.data.haarcascades + 'haarcascade_frontalface_alt.xml')\n    faces = face_cascade.detectMultiScale(\n        gray, scaleFactor=1.2, minNeighbors=5)\n    for (x, y, w, h) in faces:\n        frame = cv2.rectangle(frame, (x, y), (x + w, y + h), (0, 255, 0), 1)\n    cv2.imshow('frame', frame)\n    if cv2.waitKey(1) == ord('q'):\n        break\ncap.release()\ncv2.destroyAllWindows()\n```\n\n[http://woshicver.com/](http://woshicver.com/)\n\n[http://objectdetection.cn/](http://objectdetection.cn/)","slug":"opencv","published":1,"updated":"2021-02-06T11:36:06.041Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckkttizgl000p4u852wv3cbe1","content":"<h3 id=\"人脸检测\"><a href=\"#人脸检测\" class=\"headerlink\" title=\"人脸检测\"></a>人脸检测</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> cv2</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">from</span> pathlib <span class=\"keyword\">import</span> Path</span><br><span class=\"line\"></span><br><span class=\"line\">IMAGE_PATH = <span class=\"string\">&quot;assets/&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">p = Path(IMAGE_PATH)</span><br><span class=\"line\">file_names = [x.name <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> p.iterdir()]</span><br><span class=\"line\"><span class=\"keyword\">for</span> file_name <span class=\"keyword\">in</span> file_names:</span><br><span class=\"line\">    img = cv2.imread(IMAGE_PATH + file_name)</span><br><span class=\"line\">    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)</span><br><span class=\"line\">    face_cascade = cv2.CascadeClassifier(</span><br><span class=\"line\">        cv2.data.haarcascades + <span class=\"string\">&#x27;haarcascade_frontalface_alt.xml&#x27;</span>)</span><br><span class=\"line\">    faces = face_cascade.detectMultiScale(</span><br><span class=\"line\">        gray, scaleFactor=<span class=\"number\">1.2</span>, minNeighbors=<span class=\"number\">5</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (x, y, w, h) <span class=\"keyword\">in</span> faces:</span><br><span class=\"line\">        img = cv2.rectangle(img, (x, y), (x + w, y + h), (<span class=\"number\">0</span>, <span class=\"number\">255</span>, <span class=\"number\">0</span>), <span class=\"number\">1</span>)</span><br><span class=\"line\">        cv2.imwrite(IMAGE_PATH + file_name, img)</span><br></pre></td></tr></table></figure>\n<h3 id=\"摄像头捕获\"><a href=\"#摄像头捕获\" class=\"headerlink\" title=\"摄像头捕获\"></a>摄像头捕获</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> cv2</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\">cap = cv2.VideoCapture(<span class=\"number\">0</span>)</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">not</span> cap.isOpened():</span><br><span class=\"line\">    print(<span class=\"string\">&quot;Cannot open camera&quot;</span>)</span><br><span class=\"line\">    exit()</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    time.sleep(<span class=\"number\">0.2</span>)</span><br><span class=\"line\">    ret, frame = cap.read()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> ret:</span><br><span class=\"line\">        print(<span class=\"string\">&quot;Can&#x27;t receive frame (stream end?). Exiting ...&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)</span><br><span class=\"line\">    face_cascade = cv2.CascadeClassifier(</span><br><span class=\"line\">        cv2.data.haarcascades + <span class=\"string\">&#x27;haarcascade_frontalface_alt.xml&#x27;</span>)</span><br><span class=\"line\">    faces = face_cascade.detectMultiScale(</span><br><span class=\"line\">        gray, scaleFactor=<span class=\"number\">1.2</span>, minNeighbors=<span class=\"number\">5</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (x, y, w, h) <span class=\"keyword\">in</span> faces:</span><br><span class=\"line\">        frame = cv2.rectangle(frame, (x, y), (x + w, y + h), (<span class=\"number\">0</span>, <span class=\"number\">255</span>, <span class=\"number\">0</span>), <span class=\"number\">1</span>)</span><br><span class=\"line\">    cv2.imshow(<span class=\"string\">&#x27;frame&#x27;</span>, frame)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> cv2.waitKey(<span class=\"number\">1</span>) == ord(<span class=\"string\">&#x27;q&#x27;</span>):</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">cap.release()</span><br><span class=\"line\">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure>\n\n<p><a href=\"http://woshicver.com/\">http://woshicver.com/</a></p>\n<p><a href=\"http://objectdetection.cn/\">http://objectdetection.cn/</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"人脸检测\"><a href=\"#人脸检测\" class=\"headerlink\" title=\"人脸检测\"></a>人脸检测</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> cv2</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">from</span> pathlib <span class=\"keyword\">import</span> Path</span><br><span class=\"line\"></span><br><span class=\"line\">IMAGE_PATH = <span class=\"string\">&quot;assets/&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">p = Path(IMAGE_PATH)</span><br><span class=\"line\">file_names = [x.name <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> p.iterdir()]</span><br><span class=\"line\"><span class=\"keyword\">for</span> file_name <span class=\"keyword\">in</span> file_names:</span><br><span class=\"line\">    img = cv2.imread(IMAGE_PATH + file_name)</span><br><span class=\"line\">    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)</span><br><span class=\"line\">    face_cascade = cv2.CascadeClassifier(</span><br><span class=\"line\">        cv2.data.haarcascades + <span class=\"string\">&#x27;haarcascade_frontalface_alt.xml&#x27;</span>)</span><br><span class=\"line\">    faces = face_cascade.detectMultiScale(</span><br><span class=\"line\">        gray, scaleFactor=<span class=\"number\">1.2</span>, minNeighbors=<span class=\"number\">5</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (x, y, w, h) <span class=\"keyword\">in</span> faces:</span><br><span class=\"line\">        img = cv2.rectangle(img, (x, y), (x + w, y + h), (<span class=\"number\">0</span>, <span class=\"number\">255</span>, <span class=\"number\">0</span>), <span class=\"number\">1</span>)</span><br><span class=\"line\">        cv2.imwrite(IMAGE_PATH + file_name, img)</span><br></pre></td></tr></table></figure>\n<h3 id=\"摄像头捕获\"><a href=\"#摄像头捕获\" class=\"headerlink\" title=\"摄像头捕获\"></a>摄像头捕获</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> cv2</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\">cap = cv2.VideoCapture(<span class=\"number\">0</span>)</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">not</span> cap.isOpened():</span><br><span class=\"line\">    print(<span class=\"string\">&quot;Cannot open camera&quot;</span>)</span><br><span class=\"line\">    exit()</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    time.sleep(<span class=\"number\">0.2</span>)</span><br><span class=\"line\">    ret, frame = cap.read()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> ret:</span><br><span class=\"line\">        print(<span class=\"string\">&quot;Can&#x27;t receive frame (stream end?). Exiting ...&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)</span><br><span class=\"line\">    face_cascade = cv2.CascadeClassifier(</span><br><span class=\"line\">        cv2.data.haarcascades + <span class=\"string\">&#x27;haarcascade_frontalface_alt.xml&#x27;</span>)</span><br><span class=\"line\">    faces = face_cascade.detectMultiScale(</span><br><span class=\"line\">        gray, scaleFactor=<span class=\"number\">1.2</span>, minNeighbors=<span class=\"number\">5</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (x, y, w, h) <span class=\"keyword\">in</span> faces:</span><br><span class=\"line\">        frame = cv2.rectangle(frame, (x, y), (x + w, y + h), (<span class=\"number\">0</span>, <span class=\"number\">255</span>, <span class=\"number\">0</span>), <span class=\"number\">1</span>)</span><br><span class=\"line\">    cv2.imshow(<span class=\"string\">&#x27;frame&#x27;</span>, frame)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> cv2.waitKey(<span class=\"number\">1</span>) == ord(<span class=\"string\">&#x27;q&#x27;</span>):</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">cap.release()</span><br><span class=\"line\">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure>\n\n<p><a href=\"http://woshicver.com/\">http://woshicver.com/</a></p>\n<p><a href=\"http://objectdetection.cn/\">http://objectdetection.cn/</a></p>\n"},{"title":"openpyxl","date":"2021-02-01T05:16:50.000Z","mp3":null,"cover":null,"_content":"合并单元格数据获取\n```python\ndef get_cell_value(ws, row, column):\n    for r in ws.merged_cells.ranges:\n        if row >= r.min_row and row <= r.max_row and column >= r.min_col and column <= r.max_col:\n            return ws.cell(r.min_row, r.min_col).value\n    return ws.cell(row, column).value\n```\n","source":"_posts/openpyxl.md","raw":"---\ntitle: openpyxl\ndate: 2021-02-01 13:16:50\ntags: python\ncategories:\nmp3:\ncover:\n---\n合并单元格数据获取\n```python\ndef get_cell_value(ws, row, column):\n    for r in ws.merged_cells.ranges:\n        if row >= r.min_row and row <= r.max_row and column >= r.min_col and column <= r.max_col:\n            return ws.cell(r.min_row, r.min_col).value\n    return ws.cell(row, column).value\n```\n","slug":"openpyxl","published":1,"updated":"2021-02-06T11:36:06.041Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckkttizgm000q4u855bc03a06","content":"<p>合并单元格数据获取</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_cell_value</span>(<span class=\"params\">ws, row, column</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> r <span class=\"keyword\">in</span> ws.merged_cells.ranges:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> row &gt;= r.min_row <span class=\"keyword\">and</span> row &lt;= r.max_row <span class=\"keyword\">and</span> column &gt;= r.min_col <span class=\"keyword\">and</span> column &lt;= r.max_col:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> ws.cell(r.min_row, r.min_col).value</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ws.cell(row, column).value</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>合并单元格数据获取</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_cell_value</span>(<span class=\"params\">ws, row, column</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> r <span class=\"keyword\">in</span> ws.merged_cells.ranges:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> row &gt;= r.min_row <span class=\"keyword\">and</span> row &lt;= r.max_row <span class=\"keyword\">and</span> column &gt;= r.min_col <span class=\"keyword\">and</span> column &lt;= r.max_col:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> ws.cell(r.min_row, r.min_col).value</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ws.cell(row, column).value</span><br></pre></td></tr></table></figure>\n"},{"title":"人人影视","date":"2020-10-17T02:46:44.000Z","mp3":null,"cover":null,"_content":"树莓派接入了两个isp(长城宽带，移动),由于长城宽带限制，使用人人影视时只想用移动的网。\n使用的方案可以用veth，使用不同的网路命名空间加iptables, 还有直接借用docker\n\n使用docker解决此问题\n```Dockerfile\nFROM ubuntu:18.04\nLABEL maintainer \"8de4732a\"\nEXPOSE 3001\nVOLUME [\"/opt/work/rrshareweb/data\"]\n\nWORKDIR /rrys\nRUN apt update && apt -y install wget && wget http://appdown.rrys.tv/rrshareweb_rpi.2.20.tar.gz && tar -zxf rrshareweb_rpi.2.20.tar.gz\nCMD [\"/rrys/rrshareweb_rpi/rrshareweb\"]\n```\n```shell\ndocker build . -t rrys:0.0.1\n```\nalpine启动不了，只能用ubuntu了\n\n启动\n```shell\ndocker run -it -v /mnt/sd/rrys:/opt/work/rrshareweb/data -p 3001:3001 -name rrys rrys:0.0.1\n```\n\n设置路由规则\n```\nip route add default via 192.168.1.1 dev wlan1 table 100\nip route add 192.168.99.0/24 via 192.168.1.1 dev eth0 table 100\nip rule add from 172.17.0.0/16 table 100\n\n或者利用MARK\niptables -A PREROUTING -t mangle -s 172.17.0.0/16 -j MARK --set-mark 3\nip rule add fwmark 3 table 100\n```\n\n\n参考\n\n[http://linux-ip.net/html/tools-ip-routing.html](http://linux-ip.net/html/tools-ip-routing.html)\n\n[http://www.study-area.org/tips/adv-route/Adv-Routing-HOWTO-4.html](http://www.study-area.org/tips/adv-route/Adv-Routing-HOWTO-4.html)","source":"_posts/rrys.md","raw":"---\ntitle: 人人影视\ndate: 2020-10-17 10:46:44\ntags: linux\ncategories: linux\nmp3:\ncover:\n---\n树莓派接入了两个isp(长城宽带，移动),由于长城宽带限制，使用人人影视时只想用移动的网。\n使用的方案可以用veth，使用不同的网路命名空间加iptables, 还有直接借用docker\n\n使用docker解决此问题\n```Dockerfile\nFROM ubuntu:18.04\nLABEL maintainer \"8de4732a\"\nEXPOSE 3001\nVOLUME [\"/opt/work/rrshareweb/data\"]\n\nWORKDIR /rrys\nRUN apt update && apt -y install wget && wget http://appdown.rrys.tv/rrshareweb_rpi.2.20.tar.gz && tar -zxf rrshareweb_rpi.2.20.tar.gz\nCMD [\"/rrys/rrshareweb_rpi/rrshareweb\"]\n```\n```shell\ndocker build . -t rrys:0.0.1\n```\nalpine启动不了，只能用ubuntu了\n\n启动\n```shell\ndocker run -it -v /mnt/sd/rrys:/opt/work/rrshareweb/data -p 3001:3001 -name rrys rrys:0.0.1\n```\n\n设置路由规则\n```\nip route add default via 192.168.1.1 dev wlan1 table 100\nip route add 192.168.99.0/24 via 192.168.1.1 dev eth0 table 100\nip rule add from 172.17.0.0/16 table 100\n\n或者利用MARK\niptables -A PREROUTING -t mangle -s 172.17.0.0/16 -j MARK --set-mark 3\nip rule add fwmark 3 table 100\n```\n\n\n参考\n\n[http://linux-ip.net/html/tools-ip-routing.html](http://linux-ip.net/html/tools-ip-routing.html)\n\n[http://www.study-area.org/tips/adv-route/Adv-Routing-HOWTO-4.html](http://www.study-area.org/tips/adv-route/Adv-Routing-HOWTO-4.html)","slug":"rrys","published":1,"updated":"2021-02-06T11:36:06.041Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckkttizgv000z4u85057wafbk","content":"<p>树莓派接入了两个isp(长城宽带，移动),由于长城宽带限制，使用人人影视时只想用移动的网。<br>使用的方案可以用veth，使用不同的网路命名空间加iptables, 还有直接借用docker</p>\n<p>使用docker解决此问题</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> ubuntu:<span class=\"number\">18.04</span></span><br><span class=\"line\"><span class=\"keyword\">LABEL</span><span class=\"bash\"> maintainer <span class=\"string\">&quot;8de4732a&quot;</span></span></span><br><span class=\"line\"><span class=\"keyword\">EXPOSE</span> <span class=\"number\">3001</span></span><br><span class=\"line\"><span class=\"keyword\">VOLUME</span><span class=\"bash\"> [<span class=\"string\">&quot;/opt/work/rrshareweb/data&quot;</span>]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"bash\"> /rrys</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> apt update &amp;&amp; apt -y install wget &amp;&amp; wget http://appdown.rrys.tv/rrshareweb_rpi.2.20.tar.gz &amp;&amp; tar -zxf rrshareweb_rpi.2.20.tar.gz</span></span><br><span class=\"line\"><span class=\"keyword\">CMD</span><span class=\"bash\"> [<span class=\"string\">&quot;/rrys/rrshareweb_rpi/rrshareweb&quot;</span>]</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker build . -t rrys:0.0.1</span><br></pre></td></tr></table></figure>\n<p>alpine启动不了，只能用ubuntu了</p>\n<p>启动</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -it -v /mnt/sd/rrys:/opt/work/rrshareweb/data -p 3001:3001 -name rrys rrys:0.0.1</span><br></pre></td></tr></table></figure>\n\n<p>设置路由规则</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ip route add default via 192.168.1.1 dev wlan1 table 100</span><br><span class=\"line\">ip route add 192.168.99.0&#x2F;24 via 192.168.1.1 dev eth0 table 100</span><br><span class=\"line\">ip rule add from 172.17.0.0&#x2F;16 table 100</span><br><span class=\"line\"></span><br><span class=\"line\">或者利用MARK</span><br><span class=\"line\">iptables -A PREROUTING -t mangle -s 172.17.0.0&#x2F;16 -j MARK --set-mark 3</span><br><span class=\"line\">ip rule add fwmark 3 table 100</span><br></pre></td></tr></table></figure>\n\n\n<p>参考</p>\n<p><a href=\"http://linux-ip.net/html/tools-ip-routing.html\">http://linux-ip.net/html/tools-ip-routing.html</a></p>\n<p><a href=\"http://www.study-area.org/tips/adv-route/Adv-Routing-HOWTO-4.html\">http://www.study-area.org/tips/adv-route/Adv-Routing-HOWTO-4.html</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>树莓派接入了两个isp(长城宽带，移动),由于长城宽带限制，使用人人影视时只想用移动的网。<br>使用的方案可以用veth，使用不同的网路命名空间加iptables, 还有直接借用docker</p>\n<p>使用docker解决此问题</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> ubuntu:<span class=\"number\">18.04</span></span><br><span class=\"line\"><span class=\"keyword\">LABEL</span><span class=\"bash\"> maintainer <span class=\"string\">&quot;8de4732a&quot;</span></span></span><br><span class=\"line\"><span class=\"keyword\">EXPOSE</span> <span class=\"number\">3001</span></span><br><span class=\"line\"><span class=\"keyword\">VOLUME</span><span class=\"bash\"> [<span class=\"string\">&quot;/opt/work/rrshareweb/data&quot;</span>]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"bash\"> /rrys</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> apt update &amp;&amp; apt -y install wget &amp;&amp; wget http://appdown.rrys.tv/rrshareweb_rpi.2.20.tar.gz &amp;&amp; tar -zxf rrshareweb_rpi.2.20.tar.gz</span></span><br><span class=\"line\"><span class=\"keyword\">CMD</span><span class=\"bash\"> [<span class=\"string\">&quot;/rrys/rrshareweb_rpi/rrshareweb&quot;</span>]</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker build . -t rrys:0.0.1</span><br></pre></td></tr></table></figure>\n<p>alpine启动不了，只能用ubuntu了</p>\n<p>启动</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -it -v /mnt/sd/rrys:/opt/work/rrshareweb/data -p 3001:3001 -name rrys rrys:0.0.1</span><br></pre></td></tr></table></figure>\n\n<p>设置路由规则</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ip route add default via 192.168.1.1 dev wlan1 table 100</span><br><span class=\"line\">ip route add 192.168.99.0&#x2F;24 via 192.168.1.1 dev eth0 table 100</span><br><span class=\"line\">ip rule add from 172.17.0.0&#x2F;16 table 100</span><br><span class=\"line\"></span><br><span class=\"line\">或者利用MARK</span><br><span class=\"line\">iptables -A PREROUTING -t mangle -s 172.17.0.0&#x2F;16 -j MARK --set-mark 3</span><br><span class=\"line\">ip rule add fwmark 3 table 100</span><br></pre></td></tr></table></figure>\n\n\n<p>参考</p>\n<p><a href=\"http://linux-ip.net/html/tools-ip-routing.html\">http://linux-ip.net/html/tools-ip-routing.html</a></p>\n<p><a href=\"http://www.study-area.org/tips/adv-route/Adv-Routing-HOWTO-4.html\">http://www.study-area.org/tips/adv-route/Adv-Routing-HOWTO-4.html</a></p>\n"},{"title":"tempermonkey","date":"2020-10-30T05:56:58.000Z","mp3":null,"cover":null,"_content":"恰到好处的油猴\n\n[http://woshicver.com/](http://woshicver.com/) 去除关注\n```javascript\n// ==UserScript==\n// @name         New Userscript\n// @namespace    http://tampermonkey.net/\n// @version      0.1\n// @description  try to take over the world!\n// @author       You\n// @match        http://woshicver.com/ThirdSection/*\n// @grant        none\n// ==/UserScript==\n\n(function() {\n    'use strict';\n    $('#read-more-mask').remove();\n    $('#read-more-wrap').remove();\n    var style = $('#main').first().attr(\"style\");\n    $('#main').attr(\"style\", style.replace(/hidden/, \"false\"));\n    $('footer').remove();\n})();\n```","source":"_posts/tempermonkey.md","raw":"---\ntitle: tempermonkey\ndate: 2020-10-30 13:56:58\ntags: js\ncategories: js\nmp3:\ncover:\n---\n恰到好处的油猴\n\n[http://woshicver.com/](http://woshicver.com/) 去除关注\n```javascript\n// ==UserScript==\n// @name         New Userscript\n// @namespace    http://tampermonkey.net/\n// @version      0.1\n// @description  try to take over the world!\n// @author       You\n// @match        http://woshicver.com/ThirdSection/*\n// @grant        none\n// ==/UserScript==\n\n(function() {\n    'use strict';\n    $('#read-more-mask').remove();\n    $('#read-more-wrap').remove();\n    var style = $('#main').first().attr(\"style\");\n    $('#main').attr(\"style\", style.replace(/hidden/, \"false\"));\n    $('footer').remove();\n})();\n```","slug":"tempermonkey","published":1,"updated":"2021-02-06T11:36:06.041Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckkttizgw00134u85aelccmq2","content":"<p>恰到好处的油猴</p>\n<p><a href=\"http://woshicver.com/\">http://woshicver.com/</a> 去除关注</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ==UserScript==</span></span><br><span class=\"line\"><span class=\"comment\">// @name         New Userscript</span></span><br><span class=\"line\"><span class=\"comment\">// @namespace    http://tampermonkey.net/</span></span><br><span class=\"line\"><span class=\"comment\">// @version      0.1</span></span><br><span class=\"line\"><span class=\"comment\">// @description  try to take over the world!</span></span><br><span class=\"line\"><span class=\"comment\">// @author       You</span></span><br><span class=\"line\"><span class=\"comment\">// @match        http://woshicver.com/ThirdSection/*</span></span><br><span class=\"line\"><span class=\"comment\">// @grant        none</span></span><br><span class=\"line\"><span class=\"comment\">// ==/UserScript==</span></span><br><span class=\"line\"></span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"><span class=\"meta\">    &#x27;use strict&#x27;</span>;</span><br><span class=\"line\">    $(<span class=\"string\">&#x27;#read-more-mask&#x27;</span>).remove();</span><br><span class=\"line\">    $(<span class=\"string\">&#x27;#read-more-wrap&#x27;</span>).remove();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> style = $(<span class=\"string\">&#x27;#main&#x27;</span>).first().attr(<span class=\"string\">&quot;style&quot;</span>);</span><br><span class=\"line\">    $(<span class=\"string\">&#x27;#main&#x27;</span>).attr(<span class=\"string\">&quot;style&quot;</span>, style.replace(<span class=\"regexp\">/hidden/</span>, <span class=\"string\">&quot;false&quot;</span>));</span><br><span class=\"line\">    $(<span class=\"string\">&#x27;footer&#x27;</span>).remove();</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>恰到好处的油猴</p>\n<p><a href=\"http://woshicver.com/\">http://woshicver.com/</a> 去除关注</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ==UserScript==</span></span><br><span class=\"line\"><span class=\"comment\">// @name         New Userscript</span></span><br><span class=\"line\"><span class=\"comment\">// @namespace    http://tampermonkey.net/</span></span><br><span class=\"line\"><span class=\"comment\">// @version      0.1</span></span><br><span class=\"line\"><span class=\"comment\">// @description  try to take over the world!</span></span><br><span class=\"line\"><span class=\"comment\">// @author       You</span></span><br><span class=\"line\"><span class=\"comment\">// @match        http://woshicver.com/ThirdSection/*</span></span><br><span class=\"line\"><span class=\"comment\">// @grant        none</span></span><br><span class=\"line\"><span class=\"comment\">// ==/UserScript==</span></span><br><span class=\"line\"></span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"><span class=\"meta\">    &#x27;use strict&#x27;</span>;</span><br><span class=\"line\">    $(<span class=\"string\">&#x27;#read-more-mask&#x27;</span>).remove();</span><br><span class=\"line\">    $(<span class=\"string\">&#x27;#read-more-wrap&#x27;</span>).remove();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> style = $(<span class=\"string\">&#x27;#main&#x27;</span>).first().attr(<span class=\"string\">&quot;style&quot;</span>);</span><br><span class=\"line\">    $(<span class=\"string\">&#x27;#main&#x27;</span>).attr(<span class=\"string\">&quot;style&quot;</span>, style.replace(<span class=\"regexp\">/hidden/</span>, <span class=\"string\">&quot;false&quot;</span>));</span><br><span class=\"line\">    $(<span class=\"string\">&#x27;footer&#x27;</span>).remove();</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[{"post_id":"ckfta33pw00007wuifz0o195y","category_id":"ckfta33q300017wui2sjbbsdl","_id":"ckfta33qa00047wuieytu6505"},{"post_id":"ckfueemdx000020uiem9r2f3i","category_id":"ckfueh1b2000320ui3ust4pq7","_id":"ckfueh1b3000420uic09h4kte"},{"post_id":"ckfuesjh00000rcuidi6e7xwh","category_id":"ckfuesjh70001rcui183mburi","_id":"ckfuesjhf0004rcui30hz1yfz"},{"post_id":"ckfuex9ou0000pkui62mx74c1","category_id":"ckfuesjh70001rcui183mburi","_id":"ckfuex9ps0002pkui347ed62i"},{"post_id":"ckfuy3nse0000t8ui4q033voa","category_id":"ckfta33q300017wui2sjbbsdl","_id":"ckfuy3nsj0002t8uicojta7rf"},{"post_id":"ckg30hkns0000z4mbghou5joa","category_id":"ckfuesjh70001rcui183mburi","_id":"ckg30hko80002z4mb3vtxbnom"},{"post_id":"ckkttizga000d4u85984gc7th","category_id":"ckg30hkof0004z4mb8i61c1kp","_id":"ckkttizge000h4u85dxvu89j1"},{"post_id":"ckkttizg9000c4u85efzu1bwp","category_id":"ckkttizgb000e4u8576w3fzd1","_id":"ckkttizgg000i4u85eybh8t4b"},{"post_id":"ckkttizgi000k4u856h8m934g","category_id":"ckkttizgj000m4u8532807m4t","_id":"ckkttizgp000v4u85h2wz7rn7"},{"post_id":"ckkttizgi000l4u859odlazbd","category_id":"ckkttizgm000r4u85hm563na9","_id":"ckkttizgv00104u853c9hh64c"},{"post_id":"ckkttizgk000o4u85evsk7e4x","category_id":"ckkttizgp000w4u859e844g1q","_id":"ckkttizgz00164u856yvl4s9q"},{"post_id":"ckkttizgv000z4u85057wafbk","category_id":"ckkttizgm000r4u85hm563na9","_id":"ckkttizh000194u85fyqa3fvr"},{"post_id":"ckkttizgl000p4u852wv3cbe1","category_id":"ckkttizgw00114u85ev58c3kt","_id":"ckkttizh0001b4u85dh264pkb"},{"post_id":"ckkttizgw00134u85aelccmq2","category_id":"ckkttizgz00174u85231fbl23","_id":"ckkttizh1001d4u859n6af6w5"}],"PostTag":[{"post_id":"ckfta33pw00007wuifz0o195y","tag_id":"ckfta33q500027wui5t5f8cry","_id":"ckfta33q600037wuiaie568rx"},{"post_id":"ckfud9zsa0000z0uidflc3ppm","tag_id":"ckftg8e7r0003dwuidjcecnnd","_id":"ckfud9zsh0001z0uiabxmgszw"},{"post_id":"ckfueemdx000020uiem9r2f3i","tag_id":"ckfueh5rr000520ui9u08him7","_id":"ckfueh5rs000620ui3z7zajee"},{"post_id":"ckfuesjh00000rcuidi6e7xwh","tag_id":"ckfuesjh90002rcuih8a75v73","_id":"ckfuesjhb0003rcui6sk5hdrv"},{"post_id":"ckfuex9ou0000pkui62mx74c1","tag_id":"ckfuesjh90002rcuih8a75v73","_id":"ckfuex9pq0001pkuid0wm2pai"},{"post_id":"ckfuy3nse0000t8ui4q033voa","tag_id":"ckfta33q500027wui5t5f8cry","_id":"ckfuy3nsi0001t8ui307ugupr"},{"post_id":"ckg30hkns0000z4mbghou5joa","tag_id":"ckfuesjh90002rcuih8a75v73","_id":"ckg30hko10001z4mb1v38e6cp"},{"post_id":"ckkttizg100054u851kxod133","tag_id":"ckkttizg300074u85g8ipf70f","_id":"ckkttizg9000b4u85g27x61ak"},{"post_id":"ckkttizg9000c4u85efzu1bwp","tag_id":"ckkttizg300074u85g8ipf70f","_id":"ckkttizgc000f4u85hqze8r4m"},{"post_id":"ckkttizga000d4u85984gc7th","tag_id":"ckg30hkok0005z4mb00pn1gl8","_id":"ckkttizgd000g4u859bnebab1"},{"post_id":"ckkttizgi000k4u856h8m934g","tag_id":"ckkttizgj000n4u853k8o9w86","_id":"ckkttizgn000t4u853glqc01k"},{"post_id":"ckkttizgm000q4u855bc03a06","tag_id":"ckfta33q500027wui5t5f8cry","_id":"ckkttizgo000u4u85d2a7fkfo"},{"post_id":"ckkttizgi000l4u859odlazbd","tag_id":"ckkttizgm000s4u856rbr03to","_id":"ckkttizgu000y4u850lls7jrg"},{"post_id":"ckkttizgk000o4u85evsk7e4x","tag_id":"ckkttizgq000x4u851bm3g41o","_id":"ckkttizgx00144u85ab185oiv"},{"post_id":"ckkttizgv000z4u85057wafbk","tag_id":"ckkttizgm000s4u856rbr03to","_id":"ckkttizgz00154u85hh9cc6d3"},{"post_id":"ckkttizgl000p4u852wv3cbe1","tag_id":"ckkttizgw00124u858htf9xz8","_id":"ckkttizh0001a4u85expv54h5"},{"post_id":"ckkttizgw00134u85aelccmq2","tag_id":"ckkttizgz00184u852g4b3rpa","_id":"ckkttizh1001c4u85bggm3816"}],"Tag":[{"name":"python","_id":"ckfta33q500027wui5t5f8cry"},{"name":"javascript","_id":"ckftg8e7r0003dwuidjcecnnd"},{"name":"raspberry","_id":"ckfueh5rr000520ui9u08him7"},{"name":"game","_id":"ckfuesjh90002rcuih8a75v73"},{"name":"old-computer","_id":"ckg30hkok0005z4mb00pn1gl8"},{"name":"java","_id":"ckkttizg300074u85g8ipf70f"},{"name":"mac","_id":"ckkttizgj000n4u853k8o9w86"},{"name":"linux","_id":"ckkttizgm000s4u856rbr03to"},{"name":"算法","_id":"ckkttizgq000x4u851bm3g41o"},{"name":"img","_id":"ckkttizgw00124u858htf9xz8"},{"name":"js","_id":"ckkttizgz00184u852g4b3rpa"}]}}