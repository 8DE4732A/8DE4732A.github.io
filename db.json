{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/diaspora/source/css/diaspora.css","path":"css/diaspora.css","modified":0,"renderable":1},{"_id":"themes/diaspora/source/img/cover.jpg","path":"img/cover.jpg","modified":0,"renderable":1},{"_id":"themes/diaspora/source/img/logo.png","path":"img/logo.png","modified":0,"renderable":1},{"_id":"themes/diaspora/source/img/welcome-cover.jpg","path":"img/welcome-cover.jpg","modified":0,"renderable":1},{"_id":"themes/diaspora/source/js/diaspora.js","path":"js/diaspora.js","modified":0,"renderable":1},{"_id":"themes/diaspora/source/js/jquery.min.js","path":"js/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/diaspora/source/js/plugin.js","path":"js/plugin.js","modified":0,"renderable":1},{"_id":"themes/diaspora/source/js/typed.js","path":"js/typed.js","modified":0,"renderable":1},{"_id":"themes/diaspora/source/photoswipe/photoswipe-ui-default.js","path":"photoswipe/photoswipe-ui-default.js","modified":0,"renderable":1},{"_id":"themes/diaspora/source/photoswipe/photoswipe-ui-default.min.js","path":"photoswipe/photoswipe-ui-default.min.js","modified":0,"renderable":1},{"_id":"themes/diaspora/source/photoswipe/photoswipe.css","path":"photoswipe/photoswipe.css","modified":0,"renderable":1},{"_id":"themes/diaspora/source/photoswipe/photoswipe.js","path":"photoswipe/photoswipe.js","modified":0,"renderable":1},{"_id":"themes/diaspora/source/photoswipe/photoswipe.min.js","path":"photoswipe/photoswipe.min.js","modified":0,"renderable":1},{"_id":"themes/diaspora/source/photoswipe/default-skin/default-skin.css","path":"photoswipe/default-skin/default-skin.css","modified":0,"renderable":1},{"_id":"themes/diaspora/source/photoswipe/default-skin/default-skin.png","path":"photoswipe/default-skin/default-skin.png","modified":0,"renderable":1},{"_id":"themes/diaspora/source/photoswipe/default-skin/default-skin.svg","path":"photoswipe/default-skin/default-skin.svg","modified":0,"renderable":1},{"_id":"themes/diaspora/source/photoswipe/default-skin/preloader.gif","path":"photoswipe/default-skin/preloader.gif","modified":0,"renderable":1},{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"themes/diaspora/source/audio/鸣小明 - 无人之岛.mp3","path":"audio/鸣小明 - 无人之岛.mp3","modified":0,"renderable":1},{"_id":"themes/diaspora/source/audio/片岡真央 - メインテーマ.mp3","path":"audio/片岡真央 - メインテーマ.mp3","modified":0,"renderable":1},{"_id":"themes/diaspora/source/img/cover1.jpeg","path":"img/cover1.jpeg","modified":0,"renderable":1},{"_id":"themes/diaspora/source/img/cover2.jpeg","path":"img/cover2.jpeg","modified":0,"renderable":1},{"_id":"themes/diaspora/source/img/cover3.jpeg","path":"img/cover3.jpeg","modified":0,"renderable":1},{"_id":"themes/diaspora/source/img/cover4.jpeg","path":"img/cover4.jpeg","modified":0,"renderable":1},{"_id":"themes/diaspora/source/img/cover5.jpeg","path":"img/cover5.jpeg","modified":0,"renderable":1},{"_id":"themes/diaspora/source/img/cover6.jpeg","path":"img/cover6.jpeg","modified":0,"renderable":1},{"_id":"themes/diaspora/source/img/cover7.jpeg","path":"img/cover7.jpeg","modified":0,"renderable":1},{"_id":"themes/diaspora/source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":1},{"_id":"source/assets/me.jpg","path":"assets/me.jpg","modified":0,"renderable":0},{"_id":"source/assets/me_cricle.jpg","path":"assets/me_cricle.jpg","modified":0,"renderable":0},{"_id":"source/assets/me_rect.jpg","path":"assets/me_rect.jpg","modified":0,"renderable":0},{"_id":"source/assets/Screenshot_1.png","path":"assets/Screenshot_1.png","modified":0,"renderable":0},{"_id":"source/assets/zuifuli.jpg","path":"assets/zuifuli.jpg","modified":0,"renderable":0},{"_id":"themes/diaspora/source/img/cover8.jpg","path":"img/cover8.jpg","modified":1,"renderable":1},{"_id":"themes/diaspora/source/img/cover9.jpg","path":"img/cover9.jpg","modified":1,"renderable":1}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"acad91ace80b80295b11a9b7ad4c29a2dcfdd8fb","modified":1601694708353},{"_id":"themes/landscape/.gitignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1601633928869},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1601633928869},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1601633928869},{"_id":"themes/landscape/README.md","hash":"37fae88639ef60d63bd0de22314d7cc4c5d94b07","modified":1601633928869},{"_id":"themes/landscape/_config.yml","hash":"79ac6b9ed6a4de5a21ea53fc3f5a3de92e2475ff","modified":1601633928869},{"_id":"themes/landscape/package.json","hash":"544f21a0b2c7034998b36ae94dba6e3e0f39f228","modified":1601633928869},{"_id":"themes/landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1601633928869},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1601633928869},{"_id":"themes/landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1601633928869},{"_id":"themes/landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1601633928869},{"_id":"themes/landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1601633928869},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1601633928869},{"_id":"themes/landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1601633928869},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1601633928869},{"_id":"themes/landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1601633928869},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1601633928869},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1601633928869},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1601633928869},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1601633928869},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1601633928869},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1601633928869},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1601633928869},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1601633928869},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1601633928869},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1601633928869},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1601633928869},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"d0d753d39038284d52b10e5075979cc97db9cd20","modified":1601633928869},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1601633928869},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"950ddd91db8718153b329b96dc14439ab8463ba5","modified":1601633928869},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"c4c835615d96a950d51fa2c3b5d64d0596534fed","modified":1601633928869},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"93518893cf91287e797ebac543c560e2a63b8d0e","modified":1601633928869},{"_id":"themes/landscape/layout/_partial/gauges-analytics.ejs","hash":"aad6312ac197d6c5aaf2104ac863d7eba46b772a","modified":1601633928869},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1601633928869},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"5abf77aec957d9445fc71a8310252f0013c84578","modified":1601633928869},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"7e749050be126eadbc42decfbea75124ae430413","modified":1601633928869},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1601633928869},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1601633928869},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1601633928869},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1601633928869},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1601633928869},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1601633928869},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1601633928869},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1601633928869},{"_id":"themes/landscape/source/css/_variables.styl","hash":"628e307579ea46b5928424313993f17b8d729e92","modified":1601633928873},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1601633928877},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1601633928877},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1601633928877},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1601633928877},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1601633928877},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1601633928877},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1601633928877},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1601633928881},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1601633928881},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1601633928881},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1601633928881},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1601633928869},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1601633928869},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1601633928869},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1601633928869},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1601633928869},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1601633928869},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1601633928869},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1601633928869},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1601633928869},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1601633928869},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1601633928869},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1601633928873},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1601633928873},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1601633928873},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1601633928873},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1601633928873},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1601633928873},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1601633928873},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1601633928873},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1601633928873},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1601633928877},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1601633928877},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1601633928877},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1601633928877},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1601633928877},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1601633928881},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1601633928881},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1601633928877},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1601633928873},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1601633928877},{"_id":"themes/diaspora/.gitignore","hash":"39e91775f38f3dbe2cf60219af92ecb8af58f783","modified":1601694708358},{"_id":"themes/diaspora/LICENSE","hash":"6d3068ec88faa33b77e425407a5bc050d96914dc","modified":1601694708358},{"_id":"themes/diaspora/README.md","hash":"49094b0783b5cbbc71aafeb09793fdfca6df1f89","modified":1601694708359},{"_id":"themes/diaspora/_config.yml","hash":"055c46b5133d87b0c34bc5c38b0386180a7150a4","modified":1601806964621},{"_id":"themes/diaspora/languages/default.yml","hash":"cb49d6c405ac17b25c8822bc0050fabdf03ae535","modified":1601694708360},{"_id":"themes/diaspora/languages/fr.yml","hash":"b4be1c1592a72012e48df2b3ec41cc9685573e50","modified":1601694708361},{"_id":"themes/diaspora/languages/it.yml","hash":"2b5323867169b25e52009696680a12811b226c1e","modified":1601694708361},{"_id":"themes/diaspora/languages/nl.yml","hash":"3d82ec703d0b3287739d7cb4750a715ae83bfcb3","modified":1601694708361},{"_id":"themes/diaspora/languages/no.yml","hash":"ddf2035e920a5ecb9076138c184257d9f51896a7","modified":1601694708362},{"_id":"themes/diaspora/languages/zh-CN.yml","hash":"a10d783759847b5c2fc460f3e99000588e76d7ea","modified":1601694708363},{"_id":"themes/diaspora/languages/ru.yml","hash":"2a476b4c6e04900914c81378941640ac5d58a1f0","modified":1601694708362},{"_id":"themes/diaspora/languages/zh-TW.yml","hash":"f5f0ca88185da7a8457760d84bf221781473bd7c","modified":1601694708363},{"_id":"themes/diaspora/layout/archive.ejs","hash":"29db3aacb5f7d11e52827b16aebef6467c014e5a","modified":1601694708374},{"_id":"themes/diaspora/layout/category.ejs","hash":"a0cfecbd3216ebeb7e252b5307dfa0f580742d8c","modified":1601694708374},{"_id":"themes/diaspora/layout/index.ejs","hash":"e30bff1d2aebed83d87517387c4750882d72873d","modified":1601694708375},{"_id":"themes/diaspora/layout/layout.ejs","hash":"a0042988c480d3f819c03622d408394a785b765c","modified":1601694708375},{"_id":"themes/diaspora/layout/page.ejs","hash":"d98ac21c2542e3d53c80adf987fa02a6c29ee919","modified":1601694708375},{"_id":"themes/diaspora/layout/post.ejs","hash":"a463095027c4f25ed44bb7dc9514b46d99e381c8","modified":1601694708376},{"_id":"themes/diaspora/layout/tag.ejs","hash":"e0c36bded984989c864227801dcd289207241f76","modified":1601634685313},{"_id":"themes/diaspora/scripts/page_title.js","hash":"3cf8cded8642f91782f226ea0fc4318b1859640c","modified":1601694708377},{"_id":"themes/diaspora/.github/ISSUE_TEMPLATE/issues-template.md","hash":"925b7524fadf7bb7f2c00684a8470af218c57ac1","modified":1601694708357},{"_id":"themes/diaspora/layout/_partial/categories.ejs","hash":"5d4017bc9fa2bf2aea5cf9536ba160446f2505f6","modified":1601694708365},{"_id":"themes/diaspora/layout/_partial/google-analytics.ejs","hash":"dd9caae578261402dc4b40b77972e907055a027d","modified":1601716715319},{"_id":"themes/diaspora/layout/_partial/head.ejs","hash":"2af07909918214c4c1bda7f74babca066b347080","modified":1601694708366},{"_id":"themes/diaspora/layout/_partial/list.ejs","hash":"3d01f5eead06f278ed51664ced705679d1248f7b","modified":1601694708366},{"_id":"themes/diaspora/layout/_partial/mathjax.ejs","hash":"0a584bce759ff70ab2b64f956ee9d724339c2166","modified":1601694708367},{"_id":"themes/diaspora/layout/_partial/menu.ejs","hash":"82ac09f31754496a22e9b834b5cf5c050125391e","modified":1601694708368},{"_id":"themes/diaspora/layout/_partial/pagination.ejs","hash":"f561e68e9dd10ae1cf2e79e8425f7e9b86ed723e","modified":1601694708368},{"_id":"themes/diaspora/layout/_partial/photoswipe.ejs","hash":"bb76ab13612d56211278c46746e6646034e9ee68","modified":1601694708368},{"_id":"themes/diaspora/layout/_partial/screen.ejs","hash":"18c946b1e2e04c2b9e90d73224a118c9bb6c7ae0","modified":1601730517340},{"_id":"themes/diaspora/layout/_partial/scripts.ejs","hash":"a165c681021d80b8ef0ede60ce9f13b322d3843b","modified":1601694708372},{"_id":"themes/diaspora/layout/_partial/search.ejs","hash":"d4e0816c1df9a407e73c1b776ef356c92977ee49","modified":1601694708373},{"_id":"themes/diaspora/layout/_partial/tags.ejs","hash":"01c5c058bc9da695a7e28b8924028a0b3fb255b2","modified":1601694708373},{"_id":"themes/diaspora/source/css/diaspora.css","hash":"cfa38a8c0cf06c396f4bd2f8840566be0d9e8ef8","modified":1601696571669},{"_id":"themes/diaspora/source/img/favicon.png","hash":"4bd0ead42912b788e2d414d34af3de7ad04fc501","modified":1601713465609},{"_id":"themes/diaspora/source/img/logo.png","hash":"8505ea8b5967daae75d139632663e3422b4b1baa","modified":1601640081877},{"_id":"themes/diaspora/source/js/diaspora.js","hash":"c956f734c81fa6ff7a2e0ac0e189e0166468bd4e","modified":1601705033388},{"_id":"themes/diaspora/source/js/plugin.js","hash":"2e2108dc052d5e96ace35f091d8dbecd5f587b65","modified":1601694708395},{"_id":"themes/diaspora/source/js/typed.js","hash":"b38bd626dce4a2190491c73b588809c13978a60c","modified":1601694708395},{"_id":"themes/diaspora/source/photoswipe/photoswipe-ui-default.js","hash":"2a606363f7ff46d67cd93fa0932dca8d5a48bd20","modified":1601694708399},{"_id":"themes/diaspora/source/photoswipe/photoswipe-ui-default.min.js","hash":"b34f592dc9765f1e6f91343197a623dfb7acfaab","modified":1601694708400},{"_id":"themes/diaspora/source/photoswipe/photoswipe.css","hash":"e6d93b786de172eca4fbd96527cc0dadd202aee6","modified":1601694708400},{"_id":"themes/diaspora/source/photoswipe/photoswipe.min.js","hash":"def03cfc3e7333b081e4cea1508bab3015e860c9","modified":1601694708403},{"_id":"themes/diaspora/layout/_partial/post/article.ejs","hash":"c1e1ad1b5d2f53988d4b123a23afe85d7b36c2a2","modified":1601704752518},{"_id":"themes/diaspora/layout/_partial/post/date.ejs","hash":"bb624f77d29594b8d3a7dd82f1aee6eead6b9b61","modified":1601694708370},{"_id":"themes/diaspora/layout/_partial/post/gitalk.ejs","hash":"c22a10fbeb319ab1131d91b1c976bdb181b45c6c","modified":1601694708370},{"_id":"themes/diaspora/layout/_partial/post/header.ejs","hash":"0a5a92c650371ca9501fc6e3d247dfcf3c2c641a","modified":1601694708370},{"_id":"themes/diaspora/layout/_partial/post/item.ejs","hash":"a554e57f5f7584ac49307b26bb453da39872f6ec","modified":1601694708370},{"_id":"themes/diaspora/layout/_partial/post/tag.ejs","hash":"00398c91d88a106301cac57f821a113b66f4fb2a","modified":1601694708371},{"_id":"themes/diaspora/layout/_partial/post/title.ejs","hash":"fc807200c48d99b510ca38699506af67df2d81e6","modified":1601694708371},{"_id":"themes/diaspora/source/photoswipe/default-skin/default-skin.css","hash":"9106e9fabb78ef1ce4cc896cfec003fcbd9e1256","modified":1601694708396},{"_id":"themes/diaspora/source/photoswipe/default-skin/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1601634685325},{"_id":"themes/diaspora/source/photoswipe/default-skin/default-skin.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1601634685325},{"_id":"themes/diaspora/source/photoswipe/default-skin/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1601634685325},{"_id":"themes/diaspora/source/js/jquery.min.js","hash":"cf9b759270c1c7c603d8d3879d2c5fabc621d004","modified":1601694708393},{"_id":"themes/diaspora/source/photoswipe/photoswipe.js","hash":"37db9dbd8d3a4025a817982fc02c0140d69ca6c4","modified":1601694708402},{"_id":"themes/diaspora/source/img/cover.jpg","hash":"dc7103d4c4e05650595712b3fa395b89726df32b","modified":1601634685317},{"_id":"themes/diaspora/source/img/welcome-cover.jpg","hash":"c393dfeb52aff20a9921c1f56e2ce127683ab35a","modified":1601634685321},{"_id":"source/CNAME","hash":"e5a6073819db5768e31d087664602bc0e8c499ae","modified":1601639098839},{"_id":"source/categories/index.md","hash":"79a6e809a8989f9024ede168cc72062a264ae80e","modified":1601694708354},{"_id":"source/search/index.md","hash":"9f91f407d34f40d6aaeb7d4e3e25bbf42ca7a0cc","modified":1601694708355},{"_id":"source/tags/index.md","hash":"3883e261ed0d2968b4491e6249668bc72863a713","modified":1601694708355},{"_id":"themes/diaspora/source/img/favicon.ico","hash":"81d96af1b493bbf83ee62b7ade88e3227b6a9ce8","modified":1597997096000},{"_id":"source/about/index.md","hash":"459f09ec4c424f53166ad47e7207b829be8bb235","modified":1601806007740},{"_id":"themes/diaspora/source/audio/片岡真央 - メインテーマ.mp3","hash":"894f1fd94bad786e9d4a7cb5a341c8bc31fb1ac0","modified":1601694497760},{"_id":"themes/diaspora/source/audio/鸣小明 - 无人之岛.mp3","hash":"d07a03c6529fc8f52632edc4549bd43d4470b43e","modified":1601436271146},{"_id":"themes/diaspora/source/img/cover2.jpeg","hash":"3bca8d45edfa5be01a162094b3bee97094f73c12","modified":1601723752105},{"_id":"themes/diaspora/source/img/cover3.jpeg","hash":"f80de2f2b9a12e7f9765918bdc909d1261dc56eb","modified":1601715394415},{"_id":"themes/diaspora/source/img/cover5.jpeg","hash":"14493a0c53b2049b48eb2ba996509b3e78806903","modified":1601715752635},{"_id":"themes/diaspora/source/img/cover6.jpeg","hash":"16ae9be802a18b1a8b70889e0619c186fb73b106","modified":1601724031010},{"_id":"themes/diaspora/source/img/cover1.jpeg","hash":"34c2427247d20e9488a70cee920d68d4e46109b0","modified":1601715427474},{"_id":"themes/diaspora/source/img/cover4.jpeg","hash":"f7c1180fca70c13e0c7865222621fb6a619387c5","modified":1601723910337},{"_id":"source/_posts/combain-image.md","hash":"d67e9f832a59ba5b0d9ec2e2db86a733579ca427","modified":1601705658603},{"_id":"source/_drafts/802-1-x.md","hash":"e31eb17222f0313151904ebdb27d1d9aeca5788a","modified":1601705916089},{"_id":"source/_drafts/android-webview.md","hash":"b7dd1e45c0c14744d07240f96cd49fdbdbe3597d","modified":1601806269937},{"_id":"source/_drafts/primitive.md","hash":"5e557aa2793dbeb80afd08036f2fe82300963109","modified":1601771239472},{"_id":"source/_drafts/rasp-ctl.md","hash":"b2a08dcb9d62f76a473e858e03ae27d19e86b0b5","modified":1601712968391},{"_id":"themes/diaspora/source/img/cover7.jpeg","hash":"97645eb2e8b9f0b2b1542a2a3f0ded4608c18215","modified":1601715506553},{"_id":"source/assets/me.jpg","hash":"537373be2bd36cb3316420ec8888224f221b743d","modified":1601771208270},{"_id":"source/_posts/primitive.md","hash":"862d79a3f487f7bba26d438f930a54683472e967","modified":1601771967368},{"_id":"source/images/me.jpg","hash":"537373be2bd36cb3316420ec8888224f221b743d","modified":1601771208270},{"_id":"source/_posts/802-1-x.md","hash":"98b2fb552fc980cef4aa5eb35f8eaeff05197dc0","modified":1601772300766},{"_id":"source/assets/me_rect.jpg","hash":"9424606b76a9df27900d24e0d2dfd13481d3c0b3","modified":1601771932305},{"_id":"source/assets/me_cricle.jpg","hash":"c4934887b1f26c9c3d732b8482fbd09eb55768df","modified":1601771894006},{"_id":"source/_posts/rasp-ctl.md","hash":"30383073fd6758df7835170cf3501384ef443f44","modified":1601773317477},{"_id":"source/assets/Screenshot_1.png","hash":"fd8bb762706113e3621ea21b0d8bc779e9a72a0d","modified":1601773161016},{"_id":"source/_posts/tic80.md","hash":"fcddf10fb11ea2e591ad76e11c5bbbdc0d1aac81","modified":1601773871948},{"_id":"source/_posts/doukutsu.md","hash":"1151c69cf40dd5cf2fa9a47ec2462c4df1292f9a","modified":1601784606152},{"_id":"source/_posts/china-weather.md","hash":"f13730a5132f3fcb1803fae51dc3e4240abe8809","modified":1601784525890},{"_id":"source/assets/zuifuli.jpg","hash":"e363d93665d54ec96e16225454b0511bfe189916","modified":1601806228001},{"_id":"source/_posts/android-webview.md","hash":"aa789981aff5ef92b3c867128119647644f10547","modified":1601806302986},{"_id":"themes/diaspora/source/img/cover8.jpg","hash":"259143b4d02bc40bd974175e364cad0a03a25c21","modified":1601806639757},{"_id":"themes/diaspora/source/img/cover9.jpg","hash":"3a9f3f857f3cdc40c0e019ae35916ac0bb3b3a70","modified":1601806745778}],"Category":[{"name":"python","_id":"ckfta33q300017wui2sjbbsdl"},{"name":"flask","_id":"ckfuegwe2000120uid1gdczh2"},{"name":"raspberry","_id":"ckfueh1b2000320ui3ust4pq7"},{"name":"game","_id":"ckfuesjh70001rcui183mburi"}],"Data":[],"Page":[{"title":"categories","date":"2020-10-02T11:26:14.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2020-10-02 19:26:14\ntype: \"categories\"\n---\n","updated":"2020-10-03T03:11:48.354Z","path":"categories/index.html","_id":"ckfs75ugq00007nwl0itughoq","comments":1,"layout":"page","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"search","date":"2020-10-02T11:28:45.000Z","type":"search","_content":"","source":"search/index.md","raw":"---\ntitle: search\ndate: 2020-10-02 19:28:45\ntype: \"search\"\n---\n","updated":"2020-10-03T03:11:48.355Z","path":"search/index.html","_id":"ckfs75ugt00017nwld3zxcq18","comments":1,"layout":"page","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2020-10-02T11:27:02.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2020-10-02 19:27:02\ntype: \"tags\"\n---\n","updated":"2020-10-03T03:11:48.355Z","path":"tags/index.html","_id":"ckfs75ugu00027nwl233jgen0","comments":1,"layout":"page","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"about","date":"2020-10-03T03:27:30.000Z","_content":"\n美好事物爱好者\n\n不断折腾 \n\n最后啥都不是\n\n但 生命不息 折腾不止","source":"about/index.md","raw":"---\ntitle: about\ndate: 2020-10-03 11:27:30\n---\n\n美好事物爱好者\n\n不断折腾 \n\n最后啥都不是\n\n但 生命不息 折腾不止","updated":"2020-10-04T10:06:47.740Z","path":"about/index.html","_id":"ckft4ecpr00000gui4aqvfocu","comments":1,"layout":"page","content":"<p>美好事物爱好者</p>\n<p>不断折腾 </p>\n<p>最后啥都不是</p>\n<p>但 生命不息 折腾不止</p>\n","site":{"data":{}},"excerpt":"","more":"<p>美好事物爱好者</p>\n<p>不断折腾 </p>\n<p>最后啥都不是</p>\n<p>但 生命不息 折腾不止</p>\n"}],"Post":[{"title":"合并图片","date":"2020-10-03T06:09:25.000Z","_content":"```python\nimport sys\nfrom PIL import Image\n\nwidth = 0\nheight = 0\nfor imageFile in sys.argv[1:]:\n    with Image.open(imageFile) as im2:\n        width = width + im2.size[0]\n        height = max(height, im2.size[1])\nim = Image.new('RGB', (width, height))\nwidth = 0\nheight = 0\nfor imageFile in sys.argv[1:]:\n    with Image.open(imageFile) as im2:\n        im2_width = im2.size[0]\n        im2_height = im2.size[1]\n        im.paste(im2.crop((0, 0, im2_width, im2_height)), (width, 0, width + im2_width, im2_height))\n        width = width + im2_width\nim.save('result.jpeg', 'JPEG')\n\n```","source":"_posts/combain-image.md","raw":"---\ntitle: 合并图片\ndate: 2020-10-03 14:09:25\ntags: python\ncategories: python\n---\n```python\nimport sys\nfrom PIL import Image\n\nwidth = 0\nheight = 0\nfor imageFile in sys.argv[1:]:\n    with Image.open(imageFile) as im2:\n        width = width + im2.size[0]\n        height = max(height, im2.size[1])\nim = Image.new('RGB', (width, height))\nwidth = 0\nheight = 0\nfor imageFile in sys.argv[1:]:\n    with Image.open(imageFile) as im2:\n        im2_width = im2.size[0]\n        im2_height = im2.size[1]\n        im.paste(im2.crop((0, 0, im2_width, im2_height)), (width, 0, width + im2_width, im2_height))\n        width = width + im2_width\nim.save('result.jpeg', 'JPEG')\n\n```","slug":"combain-image","published":1,"updated":"2020-10-03T06:14:18.603Z","_id":"ckfta33pw00007wuifz0o195y","comments":1,"layout":"post","photos":[],"link":"","content":"<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image</span><br><span class=\"line\"></span><br><span class=\"line\">width = <span class=\"number\">0</span></span><br><span class=\"line\">height = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> imageFile <span class=\"keyword\">in</span> sys.argv[<span class=\"number\">1</span>:]:</span><br><span class=\"line\">    <span class=\"keyword\">with</span> Image.open(imageFile) <span class=\"keyword\">as</span> im2:</span><br><span class=\"line\">        width = width + im2.size[<span class=\"number\">0</span>]</span><br><span class=\"line\">        height = max(height, im2.size[<span class=\"number\">1</span>])</span><br><span class=\"line\">im = Image.new(<span class=\"string\">&#x27;RGB&#x27;</span>, (width, height))</span><br><span class=\"line\">width = <span class=\"number\">0</span></span><br><span class=\"line\">height = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> imageFile <span class=\"keyword\">in</span> sys.argv[<span class=\"number\">1</span>:]:</span><br><span class=\"line\">    <span class=\"keyword\">with</span> Image.open(imageFile) <span class=\"keyword\">as</span> im2:</span><br><span class=\"line\">        im2_width = im2.size[<span class=\"number\">0</span>]</span><br><span class=\"line\">        im2_height = im2.size[<span class=\"number\">1</span>]</span><br><span class=\"line\">        im.paste(im2.crop((<span class=\"number\">0</span>, <span class=\"number\">0</span>, im2_width, im2_height)), (width, <span class=\"number\">0</span>, width + im2_width, im2_height))</span><br><span class=\"line\">        width = width + im2_width</span><br><span class=\"line\">im.save(<span class=\"string\">&#x27;result.jpeg&#x27;</span>, <span class=\"string\">&#x27;JPEG&#x27;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image</span><br><span class=\"line\"></span><br><span class=\"line\">width = <span class=\"number\">0</span></span><br><span class=\"line\">height = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> imageFile <span class=\"keyword\">in</span> sys.argv[<span class=\"number\">1</span>:]:</span><br><span class=\"line\">    <span class=\"keyword\">with</span> Image.open(imageFile) <span class=\"keyword\">as</span> im2:</span><br><span class=\"line\">        width = width + im2.size[<span class=\"number\">0</span>]</span><br><span class=\"line\">        height = max(height, im2.size[<span class=\"number\">1</span>])</span><br><span class=\"line\">im = Image.new(<span class=\"string\">&#x27;RGB&#x27;</span>, (width, height))</span><br><span class=\"line\">width = <span class=\"number\">0</span></span><br><span class=\"line\">height = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> imageFile <span class=\"keyword\">in</span> sys.argv[<span class=\"number\">1</span>:]:</span><br><span class=\"line\">    <span class=\"keyword\">with</span> Image.open(imageFile) <span class=\"keyword\">as</span> im2:</span><br><span class=\"line\">        im2_width = im2.size[<span class=\"number\">0</span>]</span><br><span class=\"line\">        im2_height = im2.size[<span class=\"number\">1</span>]</span><br><span class=\"line\">        im.paste(im2.crop((<span class=\"number\">0</span>, <span class=\"number\">0</span>, im2_width, im2_height)), (width, <span class=\"number\">0</span>, width + im2_width, im2_height))</span><br><span class=\"line\">        width = width + im2_width</span><br><span class=\"line\">im.save(<span class=\"string\">&#x27;result.jpeg&#x27;</span>, <span class=\"string\">&#x27;JPEG&#x27;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"用几何原语再现图像","date":"2020-10-04T00:28:13.000Z","mp3":null,"cover":null,"_content":"\n![](/assets/me_rect.jpg)\n![](/assets/me_cricle.jpg)\n\n```python\ndef draw_circle(startX, startY, radius, r, g, b):\n    pu()\n    colormode(255)\n    pencolor(r, g, b)\n    begin_fill()\n    fillcolor((r, g, b))\n    goto(startX, startY)\n    pd()\n    \n    circle(radius)\n    \n    end_fill()\n    pu()\n\ndef line(startX, startY, endX, endY, r, g, b):\n    colormode(255)\n    pencolor(r, g, b)\n    begin_fill()\n    fillcolor((r, g, b))\n    goto(startX, startY)\n    pd()\n    forward(abs(endX - startX))\n    right(90)\n    forward(abs(endY - startY))\n    right(90)\n    forward(abs(endX - startX))\n    right(90)\n    forward(abs(endY - startY))\n    right(90)\n    \n    end_fill()\n    pu()\n\ndef rect(startX, startY, endX, endY, r, g, b):\n    colormode(255)\n    pencolor(r, g, b)\n    begin_fill()\n    fillcolor((r, g, b))\n    goto(startX, startY)\n    pd()\n    forward(abs(endX - startX))\n    right(90)\n    forward(abs(endY - startY))\n    right(90)\n    forward(abs(endX - startX))\n    right(90)\n    forward(abs(endY - startY))\n    right(90)\n    \n    end_fill()\n    pu()\n\njson = json.loads(jsonStr)\ndata = json[\"shapes\"]\n\nspeed(0)\n\ns0 = data[0]\npos = s0[\"data\"]\ncolor = s0[\"color\"]\nrect(pos[0]  - 250 , -pos[1] + 300 , pos[2]  - 250 , -pos[3]  + 300 , color[0], color[1], color[2])\nfor s in data[1:]:\n    pos = s[\"data\"]\n    color = s[\"color\"]\n    draw_circle(pos[0] - 250 , -pos[1] + 300 - pos[2] , pos[2] , color[0], color[1], color[2])\n```\n![](/assets/me.jpg)\n```javascript\nvar drawing=document.getElementById(\"myCanvas\");\n\tif (drawing.getContext){\n\t\tvar ctx = drawing.getContext(\"2d\");\n        var index = 0;\n        function heart(){\n\t\tvar arrays = data[\"shapes\"];\n\t\tvar pos = arrays[index][\"data\"];\n\t\tvar color = arrays[index][\"color\"];\n\t\tvar type = arrays[index][\"type\"];\n\t\tswitch(type){\n\t\tcase 1: \n\t\tctx.fillStyle = \"rgba(\" + color[0] + \", \"+ color[1] + \",  \"+ color[2] + \", \" + color[3] / 255 + \")\";\n\t\tctx.fillRect (pos[0] , pos[1] ,(pos[2] - pos[0]) , (pos[3] - pos[1]));\n\t\tbreak;\n\t\tcase 32:\n          ctx.fillStyle = \"rgba(\" + color[0] + \", \"+ color[1] + \",  \"+ color[2] + \", \" + color[3] / 255 + \")\";\n\t\t   ctx.beginPath();\n\t\t   ctx.arc(pos[0] ,pos[1] ,pos[2] ,0,2*Math.PI);\n\t\t   ctx.fill();\n\t\t   break;\n\t\t   //case 64:\n\t\t   //ctx.strokeStyle=\"rgba(\" + color[0] + \", \"+ color[1] + \",  \"+ color[2] + \", \" + color[3] / 255 + \")\";\n\t\t   //ctx.beginPath();\n\t\t   //ctx.moveTo(n.get_x1(a),n.get_y1(a));\n\t\t   //ctx.lineTo(n.get_x2(a),n.get_y2(a));\n\t\t   //ctx.stroke();\n\t\t   //break; -->\n\t\t   }\n            index++;\n            if (index > arrays.length){\n                clearInterval(intervalId);\n            }\n        }\n        intervalId = setInterval(heart,25);\n\t}\n```\n\n[https://github.com/fogleman/primitive](https://github.com/fogleman/primitive)\n\n[https://www.samcodes.co.uk/project/geometrize-haxe-web/](https://www.samcodes.co.uk/project/geometrize-haxe-web/)","source":"_posts/primitive.md","raw":"---\ntitle: 用几何原语再现图像\ntags: javascript\ndate: 2020-10-04 08:28:13\ncategories:\nmp3:\ncover:\n---\n\n![](/assets/me_rect.jpg)\n![](/assets/me_cricle.jpg)\n\n```python\ndef draw_circle(startX, startY, radius, r, g, b):\n    pu()\n    colormode(255)\n    pencolor(r, g, b)\n    begin_fill()\n    fillcolor((r, g, b))\n    goto(startX, startY)\n    pd()\n    \n    circle(radius)\n    \n    end_fill()\n    pu()\n\ndef line(startX, startY, endX, endY, r, g, b):\n    colormode(255)\n    pencolor(r, g, b)\n    begin_fill()\n    fillcolor((r, g, b))\n    goto(startX, startY)\n    pd()\n    forward(abs(endX - startX))\n    right(90)\n    forward(abs(endY - startY))\n    right(90)\n    forward(abs(endX - startX))\n    right(90)\n    forward(abs(endY - startY))\n    right(90)\n    \n    end_fill()\n    pu()\n\ndef rect(startX, startY, endX, endY, r, g, b):\n    colormode(255)\n    pencolor(r, g, b)\n    begin_fill()\n    fillcolor((r, g, b))\n    goto(startX, startY)\n    pd()\n    forward(abs(endX - startX))\n    right(90)\n    forward(abs(endY - startY))\n    right(90)\n    forward(abs(endX - startX))\n    right(90)\n    forward(abs(endY - startY))\n    right(90)\n    \n    end_fill()\n    pu()\n\njson = json.loads(jsonStr)\ndata = json[\"shapes\"]\n\nspeed(0)\n\ns0 = data[0]\npos = s0[\"data\"]\ncolor = s0[\"color\"]\nrect(pos[0]  - 250 , -pos[1] + 300 , pos[2]  - 250 , -pos[3]  + 300 , color[0], color[1], color[2])\nfor s in data[1:]:\n    pos = s[\"data\"]\n    color = s[\"color\"]\n    draw_circle(pos[0] - 250 , -pos[1] + 300 - pos[2] , pos[2] , color[0], color[1], color[2])\n```\n![](/assets/me.jpg)\n```javascript\nvar drawing=document.getElementById(\"myCanvas\");\n\tif (drawing.getContext){\n\t\tvar ctx = drawing.getContext(\"2d\");\n        var index = 0;\n        function heart(){\n\t\tvar arrays = data[\"shapes\"];\n\t\tvar pos = arrays[index][\"data\"];\n\t\tvar color = arrays[index][\"color\"];\n\t\tvar type = arrays[index][\"type\"];\n\t\tswitch(type){\n\t\tcase 1: \n\t\tctx.fillStyle = \"rgba(\" + color[0] + \", \"+ color[1] + \",  \"+ color[2] + \", \" + color[3] / 255 + \")\";\n\t\tctx.fillRect (pos[0] , pos[1] ,(pos[2] - pos[0]) , (pos[3] - pos[1]));\n\t\tbreak;\n\t\tcase 32:\n          ctx.fillStyle = \"rgba(\" + color[0] + \", \"+ color[1] + \",  \"+ color[2] + \", \" + color[3] / 255 + \")\";\n\t\t   ctx.beginPath();\n\t\t   ctx.arc(pos[0] ,pos[1] ,pos[2] ,0,2*Math.PI);\n\t\t   ctx.fill();\n\t\t   break;\n\t\t   //case 64:\n\t\t   //ctx.strokeStyle=\"rgba(\" + color[0] + \", \"+ color[1] + \",  \"+ color[2] + \", \" + color[3] / 255 + \")\";\n\t\t   //ctx.beginPath();\n\t\t   //ctx.moveTo(n.get_x1(a),n.get_y1(a));\n\t\t   //ctx.lineTo(n.get_x2(a),n.get_y2(a));\n\t\t   //ctx.stroke();\n\t\t   //break; -->\n\t\t   }\n            index++;\n            if (index > arrays.length){\n                clearInterval(intervalId);\n            }\n        }\n        intervalId = setInterval(heart,25);\n\t}\n```\n\n[https://github.com/fogleman/primitive](https://github.com/fogleman/primitive)\n\n[https://www.samcodes.co.uk/project/geometrize-haxe-web/](https://www.samcodes.co.uk/project/geometrize-haxe-web/)","slug":"primitive","published":1,"updated":"2020-10-04T01:02:06.040Z","_id":"ckfud9zsa0000z0uidflc3ppm","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"/assets/me_rect.jpg\"><br><img src=\"/assets/me_cricle.jpg\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">draw_circle</span>(<span class=\"params\">startX, startY, radius, r, g, b</span>):</span></span><br><span class=\"line\">    pu()</span><br><span class=\"line\">    colormode(<span class=\"number\">255</span>)</span><br><span class=\"line\">    pencolor(r, g, b)</span><br><span class=\"line\">    begin_fill()</span><br><span class=\"line\">    fillcolor((r, g, b))</span><br><span class=\"line\">    goto(startX, startY)</span><br><span class=\"line\">    pd()</span><br><span class=\"line\">    </span><br><span class=\"line\">    circle(radius)</span><br><span class=\"line\">    </span><br><span class=\"line\">    end_fill()</span><br><span class=\"line\">    pu()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">line</span>(<span class=\"params\">startX, startY, endX, endY, r, g, b</span>):</span></span><br><span class=\"line\">    colormode(<span class=\"number\">255</span>)</span><br><span class=\"line\">    pencolor(r, g, b)</span><br><span class=\"line\">    begin_fill()</span><br><span class=\"line\">    fillcolor((r, g, b))</span><br><span class=\"line\">    goto(startX, startY)</span><br><span class=\"line\">    pd()</span><br><span class=\"line\">    forward(abs(endX - startX))</span><br><span class=\"line\">    right(<span class=\"number\">90</span>)</span><br><span class=\"line\">    forward(abs(endY - startY))</span><br><span class=\"line\">    right(<span class=\"number\">90</span>)</span><br><span class=\"line\">    forward(abs(endX - startX))</span><br><span class=\"line\">    right(<span class=\"number\">90</span>)</span><br><span class=\"line\">    forward(abs(endY - startY))</span><br><span class=\"line\">    right(<span class=\"number\">90</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    end_fill()</span><br><span class=\"line\">    pu()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">rect</span>(<span class=\"params\">startX, startY, endX, endY, r, g, b</span>):</span></span><br><span class=\"line\">    colormode(<span class=\"number\">255</span>)</span><br><span class=\"line\">    pencolor(r, g, b)</span><br><span class=\"line\">    begin_fill()</span><br><span class=\"line\">    fillcolor((r, g, b))</span><br><span class=\"line\">    goto(startX, startY)</span><br><span class=\"line\">    pd()</span><br><span class=\"line\">    forward(abs(endX - startX))</span><br><span class=\"line\">    right(<span class=\"number\">90</span>)</span><br><span class=\"line\">    forward(abs(endY - startY))</span><br><span class=\"line\">    right(<span class=\"number\">90</span>)</span><br><span class=\"line\">    forward(abs(endX - startX))</span><br><span class=\"line\">    right(<span class=\"number\">90</span>)</span><br><span class=\"line\">    forward(abs(endY - startY))</span><br><span class=\"line\">    right(<span class=\"number\">90</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    end_fill()</span><br><span class=\"line\">    pu()</span><br><span class=\"line\"></span><br><span class=\"line\">json = json.loads(jsonStr)</span><br><span class=\"line\">data = json[<span class=\"string\">&quot;shapes&quot;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">speed(<span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">s0 = data[<span class=\"number\">0</span>]</span><br><span class=\"line\">pos = s0[<span class=\"string\">&quot;data&quot;</span>]</span><br><span class=\"line\">color = s0[<span class=\"string\">&quot;color&quot;</span>]</span><br><span class=\"line\">rect(pos[<span class=\"number\">0</span>]  - <span class=\"number\">250</span> , -pos[<span class=\"number\">1</span>] + <span class=\"number\">300</span> , pos[<span class=\"number\">2</span>]  - <span class=\"number\">250</span> , -pos[<span class=\"number\">3</span>]  + <span class=\"number\">300</span> , color[<span class=\"number\">0</span>], color[<span class=\"number\">1</span>], color[<span class=\"number\">2</span>])</span><br><span class=\"line\"><span class=\"keyword\">for</span> s <span class=\"keyword\">in</span> data[<span class=\"number\">1</span>:]:</span><br><span class=\"line\">    pos = s[<span class=\"string\">&quot;data&quot;</span>]</span><br><span class=\"line\">    color = s[<span class=\"string\">&quot;color&quot;</span>]</span><br><span class=\"line\">    draw_circle(pos[<span class=\"number\">0</span>] - <span class=\"number\">250</span> , -pos[<span class=\"number\">1</span>] + <span class=\"number\">300</span> - pos[<span class=\"number\">2</span>] , pos[<span class=\"number\">2</span>] , color[<span class=\"number\">0</span>], color[<span class=\"number\">1</span>], color[<span class=\"number\">2</span>])</span><br></pre></td></tr></table></figure>\n<p><img src=\"/assets/me.jpg\"></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> drawing=<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&quot;myCanvas&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (drawing.getContext)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> ctx = drawing.getContext(<span class=\"string\">&quot;2d&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> index = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">heart</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> arrays = data[<span class=\"string\">&quot;shapes&quot;</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> pos = arrays[index][<span class=\"string\">&quot;data&quot;</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> color = arrays[index][<span class=\"string\">&quot;color&quot;</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> type = arrays[index][<span class=\"string\">&quot;type&quot;</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">switch</span>(type)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"number\">1</span>: </span><br><span class=\"line\">\t\tctx.fillStyle = <span class=\"string\">&quot;rgba(&quot;</span> + color[<span class=\"number\">0</span>] + <span class=\"string\">&quot;, &quot;</span>+ color[<span class=\"number\">1</span>] + <span class=\"string\">&quot;,  &quot;</span>+ color[<span class=\"number\">2</span>] + <span class=\"string\">&quot;, &quot;</span> + color[<span class=\"number\">3</span>] / <span class=\"number\">255</span> + <span class=\"string\">&quot;)&quot;</span>;</span><br><span class=\"line\">\t\tctx.fillRect (pos[<span class=\"number\">0</span>] , pos[<span class=\"number\">1</span>] ,(pos[<span class=\"number\">2</span>] - pos[<span class=\"number\">0</span>]) , (pos[<span class=\"number\">3</span>] - pos[<span class=\"number\">1</span>]));</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"number\">32</span>:</span><br><span class=\"line\">          ctx.fillStyle = <span class=\"string\">&quot;rgba(&quot;</span> + color[<span class=\"number\">0</span>] + <span class=\"string\">&quot;, &quot;</span>+ color[<span class=\"number\">1</span>] + <span class=\"string\">&quot;,  &quot;</span>+ color[<span class=\"number\">2</span>] + <span class=\"string\">&quot;, &quot;</span> + color[<span class=\"number\">3</span>] / <span class=\"number\">255</span> + <span class=\"string\">&quot;)&quot;</span>;</span><br><span class=\"line\">\t\t   ctx.beginPath();</span><br><span class=\"line\">\t\t   ctx.arc(pos[<span class=\"number\">0</span>] ,pos[<span class=\"number\">1</span>] ,pos[<span class=\"number\">2</span>] ,<span class=\"number\">0</span>,<span class=\"number\">2</span>*<span class=\"built_in\">Math</span>.PI);</span><br><span class=\"line\">\t\t   ctx.fill();</span><br><span class=\"line\">\t\t   <span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t   <span class=\"comment\">//case 64:</span></span><br><span class=\"line\">\t\t   <span class=\"comment\">//ctx.strokeStyle=&quot;rgba(&quot; + color[0] + &quot;, &quot;+ color[1] + &quot;,  &quot;+ color[2] + &quot;, &quot; + color[3] / 255 + &quot;)&quot;;</span></span><br><span class=\"line\">\t\t   <span class=\"comment\">//ctx.beginPath();</span></span><br><span class=\"line\">\t\t   <span class=\"comment\">//ctx.moveTo(n.get_x1(a),n.get_y1(a));</span></span><br><span class=\"line\">\t\t   <span class=\"comment\">//ctx.lineTo(n.get_x2(a),n.get_y2(a));</span></span><br><span class=\"line\">\t\t   <span class=\"comment\">//ctx.stroke();</span></span><br><span class=\"line\">\t\t   <span class=\"comment\">//break; --&gt;</span></span><br><span class=\"line\">\t\t   &#125;</span><br><span class=\"line\">            index++;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (index &gt; arrays.length)&#123;</span><br><span class=\"line\">                <span class=\"built_in\">clearInterval</span>(intervalId);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        intervalId = <span class=\"built_in\">setInterval</span>(heart,<span class=\"number\">25</span>);</span><br><span class=\"line\">\t&#125;</span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://github.com/fogleman/primitive\">https://github.com/fogleman/primitive</a></p>\n<p><a href=\"https://www.samcodes.co.uk/project/geometrize-haxe-web/\">https://www.samcodes.co.uk/project/geometrize-haxe-web/</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/assets/me_rect.jpg\"><br><img src=\"/assets/me_cricle.jpg\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">draw_circle</span>(<span class=\"params\">startX, startY, radius, r, g, b</span>):</span></span><br><span class=\"line\">    pu()</span><br><span class=\"line\">    colormode(<span class=\"number\">255</span>)</span><br><span class=\"line\">    pencolor(r, g, b)</span><br><span class=\"line\">    begin_fill()</span><br><span class=\"line\">    fillcolor((r, g, b))</span><br><span class=\"line\">    goto(startX, startY)</span><br><span class=\"line\">    pd()</span><br><span class=\"line\">    </span><br><span class=\"line\">    circle(radius)</span><br><span class=\"line\">    </span><br><span class=\"line\">    end_fill()</span><br><span class=\"line\">    pu()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">line</span>(<span class=\"params\">startX, startY, endX, endY, r, g, b</span>):</span></span><br><span class=\"line\">    colormode(<span class=\"number\">255</span>)</span><br><span class=\"line\">    pencolor(r, g, b)</span><br><span class=\"line\">    begin_fill()</span><br><span class=\"line\">    fillcolor((r, g, b))</span><br><span class=\"line\">    goto(startX, startY)</span><br><span class=\"line\">    pd()</span><br><span class=\"line\">    forward(abs(endX - startX))</span><br><span class=\"line\">    right(<span class=\"number\">90</span>)</span><br><span class=\"line\">    forward(abs(endY - startY))</span><br><span class=\"line\">    right(<span class=\"number\">90</span>)</span><br><span class=\"line\">    forward(abs(endX - startX))</span><br><span class=\"line\">    right(<span class=\"number\">90</span>)</span><br><span class=\"line\">    forward(abs(endY - startY))</span><br><span class=\"line\">    right(<span class=\"number\">90</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    end_fill()</span><br><span class=\"line\">    pu()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">rect</span>(<span class=\"params\">startX, startY, endX, endY, r, g, b</span>):</span></span><br><span class=\"line\">    colormode(<span class=\"number\">255</span>)</span><br><span class=\"line\">    pencolor(r, g, b)</span><br><span class=\"line\">    begin_fill()</span><br><span class=\"line\">    fillcolor((r, g, b))</span><br><span class=\"line\">    goto(startX, startY)</span><br><span class=\"line\">    pd()</span><br><span class=\"line\">    forward(abs(endX - startX))</span><br><span class=\"line\">    right(<span class=\"number\">90</span>)</span><br><span class=\"line\">    forward(abs(endY - startY))</span><br><span class=\"line\">    right(<span class=\"number\">90</span>)</span><br><span class=\"line\">    forward(abs(endX - startX))</span><br><span class=\"line\">    right(<span class=\"number\">90</span>)</span><br><span class=\"line\">    forward(abs(endY - startY))</span><br><span class=\"line\">    right(<span class=\"number\">90</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    end_fill()</span><br><span class=\"line\">    pu()</span><br><span class=\"line\"></span><br><span class=\"line\">json = json.loads(jsonStr)</span><br><span class=\"line\">data = json[<span class=\"string\">&quot;shapes&quot;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">speed(<span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">s0 = data[<span class=\"number\">0</span>]</span><br><span class=\"line\">pos = s0[<span class=\"string\">&quot;data&quot;</span>]</span><br><span class=\"line\">color = s0[<span class=\"string\">&quot;color&quot;</span>]</span><br><span class=\"line\">rect(pos[<span class=\"number\">0</span>]  - <span class=\"number\">250</span> , -pos[<span class=\"number\">1</span>] + <span class=\"number\">300</span> , pos[<span class=\"number\">2</span>]  - <span class=\"number\">250</span> , -pos[<span class=\"number\">3</span>]  + <span class=\"number\">300</span> , color[<span class=\"number\">0</span>], color[<span class=\"number\">1</span>], color[<span class=\"number\">2</span>])</span><br><span class=\"line\"><span class=\"keyword\">for</span> s <span class=\"keyword\">in</span> data[<span class=\"number\">1</span>:]:</span><br><span class=\"line\">    pos = s[<span class=\"string\">&quot;data&quot;</span>]</span><br><span class=\"line\">    color = s[<span class=\"string\">&quot;color&quot;</span>]</span><br><span class=\"line\">    draw_circle(pos[<span class=\"number\">0</span>] - <span class=\"number\">250</span> , -pos[<span class=\"number\">1</span>] + <span class=\"number\">300</span> - pos[<span class=\"number\">2</span>] , pos[<span class=\"number\">2</span>] , color[<span class=\"number\">0</span>], color[<span class=\"number\">1</span>], color[<span class=\"number\">2</span>])</span><br></pre></td></tr></table></figure>\n<p><img src=\"/assets/me.jpg\"></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> drawing=<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&quot;myCanvas&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (drawing.getContext)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> ctx = drawing.getContext(<span class=\"string\">&quot;2d&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> index = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">heart</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> arrays = data[<span class=\"string\">&quot;shapes&quot;</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> pos = arrays[index][<span class=\"string\">&quot;data&quot;</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> color = arrays[index][<span class=\"string\">&quot;color&quot;</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> type = arrays[index][<span class=\"string\">&quot;type&quot;</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">switch</span>(type)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"number\">1</span>: </span><br><span class=\"line\">\t\tctx.fillStyle = <span class=\"string\">&quot;rgba(&quot;</span> + color[<span class=\"number\">0</span>] + <span class=\"string\">&quot;, &quot;</span>+ color[<span class=\"number\">1</span>] + <span class=\"string\">&quot;,  &quot;</span>+ color[<span class=\"number\">2</span>] + <span class=\"string\">&quot;, &quot;</span> + color[<span class=\"number\">3</span>] / <span class=\"number\">255</span> + <span class=\"string\">&quot;)&quot;</span>;</span><br><span class=\"line\">\t\tctx.fillRect (pos[<span class=\"number\">0</span>] , pos[<span class=\"number\">1</span>] ,(pos[<span class=\"number\">2</span>] - pos[<span class=\"number\">0</span>]) , (pos[<span class=\"number\">3</span>] - pos[<span class=\"number\">1</span>]));</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"number\">32</span>:</span><br><span class=\"line\">          ctx.fillStyle = <span class=\"string\">&quot;rgba(&quot;</span> + color[<span class=\"number\">0</span>] + <span class=\"string\">&quot;, &quot;</span>+ color[<span class=\"number\">1</span>] + <span class=\"string\">&quot;,  &quot;</span>+ color[<span class=\"number\">2</span>] + <span class=\"string\">&quot;, &quot;</span> + color[<span class=\"number\">3</span>] / <span class=\"number\">255</span> + <span class=\"string\">&quot;)&quot;</span>;</span><br><span class=\"line\">\t\t   ctx.beginPath();</span><br><span class=\"line\">\t\t   ctx.arc(pos[<span class=\"number\">0</span>] ,pos[<span class=\"number\">1</span>] ,pos[<span class=\"number\">2</span>] ,<span class=\"number\">0</span>,<span class=\"number\">2</span>*<span class=\"built_in\">Math</span>.PI);</span><br><span class=\"line\">\t\t   ctx.fill();</span><br><span class=\"line\">\t\t   <span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t   <span class=\"comment\">//case 64:</span></span><br><span class=\"line\">\t\t   <span class=\"comment\">//ctx.strokeStyle=&quot;rgba(&quot; + color[0] + &quot;, &quot;+ color[1] + &quot;,  &quot;+ color[2] + &quot;, &quot; + color[3] / 255 + &quot;)&quot;;</span></span><br><span class=\"line\">\t\t   <span class=\"comment\">//ctx.beginPath();</span></span><br><span class=\"line\">\t\t   <span class=\"comment\">//ctx.moveTo(n.get_x1(a),n.get_y1(a));</span></span><br><span class=\"line\">\t\t   <span class=\"comment\">//ctx.lineTo(n.get_x2(a),n.get_y2(a));</span></span><br><span class=\"line\">\t\t   <span class=\"comment\">//ctx.stroke();</span></span><br><span class=\"line\">\t\t   <span class=\"comment\">//break; --&gt;</span></span><br><span class=\"line\">\t\t   &#125;</span><br><span class=\"line\">            index++;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (index &gt; arrays.length)&#123;</span><br><span class=\"line\">                <span class=\"built_in\">clearInterval</span>(intervalId);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        intervalId = <span class=\"built_in\">setInterval</span>(heart,<span class=\"number\">25</span>);</span><br><span class=\"line\">\t&#125;</span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://github.com/fogleman/primitive\">https://github.com/fogleman/primitive</a></p>\n<p><a href=\"https://www.samcodes.co.uk/project/geometrize-haxe-web/\">https://www.samcodes.co.uk/project/geometrize-haxe-web/</a></p>\n"},{"title":"802.1.x认证","date":"2020-10-04T00:45:00.000Z","mp3":null,"cover":null,"_content":"\n由于不清楚密码如何加密的，只能抓包获取认证的密钥。生成password.bin用于后面认证。\n```golang\npackage main\n\nimport (\n\t\"flag\"\n\t\"fmt\"\n\t\"github.com/google/gopacket\"\n\t\"github.com/google/gopacket/layers\"\n\t\"github.com/google/gopacket/pcap\"\n\t\"io/ioutil\"\n)\n\nvar iface = flag.String(\"i\", \"\\\\Device\\\\NPF_{540078E3-B5F2-4E7A-9D21-}\", \"Interface to read packets from\")\n\nfunc main() {\n\tflag.Parse()\n\tfilterStr := fmt.Sprintf(\"(ether proto 0x888e)\")\n\tfmt.Println(*iface)\n\thandle, err := pcap.OpenLive(*iface, 65536, true, pcap.BlockForever)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\terr = handle.SetBPFFilter(filterStr)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tdefer handle.Close()\n\n\tvar userName, passWord []byte\n\tfor userName == nil || passWord == nil {\n\t\tdata, _, err := handle.ReadPacketData()\n\t\tif err == pcap.NextErrorTimeoutExpired {\n\t\t\tcontinue\n\t\t} else if err != nil {\n\t\t\tpanic(err)\n\t\t}\n\t\tpacket := gopacket.NewPacket(data, layers.LayerTypeEthernet, gopacket.NoCopy)\n\t\tif eapLayer := packet.Layer(layers.LayerTypeEAP); eapLayer != nil {\n\t\t\teap := eapLayer.(*layers.EAP)\n\t\t\tswitch eap.Code {\n\t\t\tcase layers.EAPCodeResponse:\n\t\t\t\tswitch eap.Type {\n\t\t\t\tcase layers.EAPTypeIdentity:\n\t\t\t\t\tuserName = eap.TypeData\n\t\t\t\t\tfmt.Printf(\"%s\", string(userName))\n\t\t\t\tcase 0x66:\n\t\t\t\t\tpassWord = eap.TypeData\n\t\t\t\t\tfmt.Println()\n\t\t\t\t\tfmt.Printf(\"%x\", passWord)\n\t\t\t\tdefault:\n\t\t\t\t\tfmt.Println(\"unknown eap type:\", eap.Type)\n\t\t\t\t}\n\t\t\tcase layers.EAPCodeSuccess:\n\t\t\tcase layers.EAPCodeFailure:\n\t\t\t\treturn\n\t\t\tdefault:\n\t\t\t\tfmt.Println(\"unknown epa code:\", eap.Code)\n\t\t\t}\n\t\t}\n\t}\n\n\tuserName = append(userName, 0xff)\n\tuserName = append(userName, passWord...)\n\te := ioutil.WriteFile(\"password.bin\", userName, 0644)\n\tif e != nil {\n\t\tpanic(e)\n\t}\n}\n```\n认证\n```golang\npackage main\n\nimport (\n\t\"flag\"\n\t\"fmt\"\n\t\"github.com/google/gopacket\"\n\t\"github.com/google/gopacket/layers\"\n\t\"github.com/google/gopacket/pcap\"\n\t\"io/ioutil\"\n\t\"net\"\n\t\"sync\"\n\t\"time\"\n)\n\nvar (\n\tinterfaceName string\n\tlocalMac      string\n)\n\nfunc init() {\n\tflag.StringVar(&interfaceName, \"interface\", \"\", \"interface name\")\n\tflag.StringVar(&localMac, \"mac\", \"\", \"mac address\")\n}\n\n//https://github.com/google/gopacket/issues/456\nfunc main() {\n\tflag.Parse()\n\tauthentication(interfaceName, localMac)\n\n}\n\nfunc authentication(interfaceName string, localMac string) {\n\n\tfilterStr := fmt.Sprintf(\n\t\t\"(ether proto 0x888e) and (ether dst host %s)\", localMac)\n\thandle, err := pcap.OpenLive(interfaceName, 65536, true, pcap.BlockForever)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\terr = handle.SetBPFFilter(filterStr)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tdefer handle.Close()\n\n\tstop := make(chan int)\n\thwAddr, err := net.ParseMAC(localMac)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\tdata, err := ioutil.ReadFile(\"password.bin\")\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tvar index int\n\tfor i, v := range data {\n\t\tif v == byte(0xff) {\n\t\t\tindex = i\n\t\t}\n\t}\n\tusername := string(data[0:index])\n\tpasswd := data[index+1:]\n\n\tgo readEap(handle, hwAddr, stop, username, passwd)\n\tdefer close(stop)\n\n\ttime.Sleep(3000)\n\tgo broadcast(handle, hwAddr)\n\n\tvar wg sync.WaitGroup\n\twg.Add(1)\n\twg.Wait()\n}\n\nfunc readEap(handle *pcap.Handle, localMac net.HardwareAddr, stop chan int, username string, password []byte) {\n\tsrc := gopacket.NewPacketSource(handle, layers.LayerTypeEthernet)\n\tin := src.Packets()\n\tfor {\n\t\tvar packet gopacket.Packet\n\t\tselect {\n\t\tcase <-stop:\n\t\t\treturn\n\t\tcase packet = <-in:\n\t\t\tethLayer := packet.Layer(layers.LayerTypeEthernet)\n\t\t\tif ethLayer == nil {\n\t\t\t\treturn\n\t\t\t}\n\t\t\teth := ethLayer.(*layers.Ethernet)\n\t\t\tsrcMac := eth.SrcMAC\n\n\t\t\teapLayer := packet.Layer(layers.LayerTypeEAP)\n\t\t\tif eapLayer == nil {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\teap := eapLayer.(*layers.EAP)\n\t\t\tfmt.Println(\"eap data: \", eap)\n\n\t\t\tswitch eap.Code {\n\t\t\tcase layers.EAPCodeRequest:\n\t\t\t\tswitch eap.Type {\n\t\t\t\tcase layers.EAPTypeIdentity:\n\t\t\t\t\tsendUserName(handle, localMac, srcMac, eap.Id, username)\n\t\t\t\tcase 0x66:\n\t\t\t\t\tsendPassword(handle, localMac, srcMac, eap.Id, password)\n\t\t\t\tdefault:\n\t\t\t\t\tfmt.Println(\"unknown eap type:\", eap.Type)\n\t\t\t\t}\n\t\t\tcase layers.EAPCodeSuccess:\n\t\t\t\tstop <- 1\n\t\t\t\tfmt.Println(\"epa success\")\n\t\t\tcase layers.EAPCodeFailure:\n\t\t\t\tfmt.Println(\"eap failure\")\n\t\t\tdefault:\n\t\t\t\tfmt.Println(\"unknown epa code:\", eap.Code)\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunc broadcast(handle *pcap.Handle, localMac net.HardwareAddr) error {\n\teth := layers.Ethernet{\n\t\tSrcMAC:       localMac,\n\t\tDstMAC:       net.HardwareAddr{0xff, 0xff, 0xff, 0xff, 0xff, 0xff},\n\t\tEthernetType: 0x888e,\n\t}\n\teaPol := layers.EAPOL{\n\t\tVersion: 0x01,\n\t\tType:    layers.EAPOLTypeStart,\n\t\tLength:  0x00,\n\t}\n\n\tbuf := gopacket.NewSerializeBuffer()\n\topts := gopacket.SerializeOptions{\n\t\tFixLengths:       true,\n\t\tComputeChecksums: true,\n\t}\n\tgopacket.SerializeLayers(buf, opts, &eth, &eaPol)\n\tfmt.Println(\"broadcast \")\n\tif err := handle.WritePacketData(buf.Bytes()); err != nil {\n\t\treturn err\n\t}\n\treturn nil\n}\n\nfunc sendUserName(handle *pcap.Handle, srcMac net.HardwareAddr, destAddr net.HardwareAddr, id uint8, username string) error {\n\teth := layers.Ethernet{\n\t\tSrcMAC:       srcMac,\n\t\tDstMAC:       destAddr,\n\t\tEthernetType: 0x888e,\n\t}\n\teap := layers.EAP{\n\t\tCode:     layers.EAPCodeResponse,\n\t\tId:       id,\n\t\tLength:   uint16(len([]byte(username))),\n\t\tType:     layers.EAPTypeIdentity,\n\t\tTypeData: []byte(username),\n\t}\n\n\tbuf := gopacket.NewSerializeBuffer()\n\topts := gopacket.SerializeOptions{\n\t\tFixLengths:       true,\n\t\tComputeChecksums: true,\n\t}\n\tgopacket.SerializeLayers(buf, opts, &eth, &eap)\n\tfmt.Println(\"send username \", username)\n\tif err := handle.WritePacketData(buf.Bytes()); err != nil {\n\t\treturn err\n\t}\n\treturn nil\n\n}\n\nfunc sendPassword(handle *pcap.Handle, srcMac net.HardwareAddr, destAddr net.HardwareAddr, id uint8, password []byte) error {\n\teth := layers.Ethernet{\n\t\tSrcMAC:       srcMac,\n\t\tDstMAC:       destAddr,\n\t\tEthernetType: 0x888e,\n\t}\n\n\teap := layers.EAP{\n\t\tCode:     layers.EAPCodeResponse,\n\t\tId:       id,\n\t\tLength:   uint16(len(password)),\n\t\tType:     layers.EAPTypeIdentity,\n\t\tTypeData: password,\n\t}\n\n\tbuf := gopacket.NewSerializeBuffer()\n\topts := gopacket.SerializeOptions{\n\t\tFixLengths:       true,\n\t\tComputeChecksums: true,\n\t}\n\tgopacket.SerializeLayers(buf, opts, &eth, &eap)\n\tif err := handle.WritePacketData(buf.Bytes()); err != nil {\n\t\treturn err\n\t}\n\treturn nil\n}\n```\n","source":"_posts/802-1-x.md","raw":"---\ntitle: 802.1.x认证\ndate: 2020-10-04 08:45:00\ntags:\ncategories:\nmp3:\ncover:\n---\n\n由于不清楚密码如何加密的，只能抓包获取认证的密钥。生成password.bin用于后面认证。\n```golang\npackage main\n\nimport (\n\t\"flag\"\n\t\"fmt\"\n\t\"github.com/google/gopacket\"\n\t\"github.com/google/gopacket/layers\"\n\t\"github.com/google/gopacket/pcap\"\n\t\"io/ioutil\"\n)\n\nvar iface = flag.String(\"i\", \"\\\\Device\\\\NPF_{540078E3-B5F2-4E7A-9D21-}\", \"Interface to read packets from\")\n\nfunc main() {\n\tflag.Parse()\n\tfilterStr := fmt.Sprintf(\"(ether proto 0x888e)\")\n\tfmt.Println(*iface)\n\thandle, err := pcap.OpenLive(*iface, 65536, true, pcap.BlockForever)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\terr = handle.SetBPFFilter(filterStr)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tdefer handle.Close()\n\n\tvar userName, passWord []byte\n\tfor userName == nil || passWord == nil {\n\t\tdata, _, err := handle.ReadPacketData()\n\t\tif err == pcap.NextErrorTimeoutExpired {\n\t\t\tcontinue\n\t\t} else if err != nil {\n\t\t\tpanic(err)\n\t\t}\n\t\tpacket := gopacket.NewPacket(data, layers.LayerTypeEthernet, gopacket.NoCopy)\n\t\tif eapLayer := packet.Layer(layers.LayerTypeEAP); eapLayer != nil {\n\t\t\teap := eapLayer.(*layers.EAP)\n\t\t\tswitch eap.Code {\n\t\t\tcase layers.EAPCodeResponse:\n\t\t\t\tswitch eap.Type {\n\t\t\t\tcase layers.EAPTypeIdentity:\n\t\t\t\t\tuserName = eap.TypeData\n\t\t\t\t\tfmt.Printf(\"%s\", string(userName))\n\t\t\t\tcase 0x66:\n\t\t\t\t\tpassWord = eap.TypeData\n\t\t\t\t\tfmt.Println()\n\t\t\t\t\tfmt.Printf(\"%x\", passWord)\n\t\t\t\tdefault:\n\t\t\t\t\tfmt.Println(\"unknown eap type:\", eap.Type)\n\t\t\t\t}\n\t\t\tcase layers.EAPCodeSuccess:\n\t\t\tcase layers.EAPCodeFailure:\n\t\t\t\treturn\n\t\t\tdefault:\n\t\t\t\tfmt.Println(\"unknown epa code:\", eap.Code)\n\t\t\t}\n\t\t}\n\t}\n\n\tuserName = append(userName, 0xff)\n\tuserName = append(userName, passWord...)\n\te := ioutil.WriteFile(\"password.bin\", userName, 0644)\n\tif e != nil {\n\t\tpanic(e)\n\t}\n}\n```\n认证\n```golang\npackage main\n\nimport (\n\t\"flag\"\n\t\"fmt\"\n\t\"github.com/google/gopacket\"\n\t\"github.com/google/gopacket/layers\"\n\t\"github.com/google/gopacket/pcap\"\n\t\"io/ioutil\"\n\t\"net\"\n\t\"sync\"\n\t\"time\"\n)\n\nvar (\n\tinterfaceName string\n\tlocalMac      string\n)\n\nfunc init() {\n\tflag.StringVar(&interfaceName, \"interface\", \"\", \"interface name\")\n\tflag.StringVar(&localMac, \"mac\", \"\", \"mac address\")\n}\n\n//https://github.com/google/gopacket/issues/456\nfunc main() {\n\tflag.Parse()\n\tauthentication(interfaceName, localMac)\n\n}\n\nfunc authentication(interfaceName string, localMac string) {\n\n\tfilterStr := fmt.Sprintf(\n\t\t\"(ether proto 0x888e) and (ether dst host %s)\", localMac)\n\thandle, err := pcap.OpenLive(interfaceName, 65536, true, pcap.BlockForever)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\terr = handle.SetBPFFilter(filterStr)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tdefer handle.Close()\n\n\tstop := make(chan int)\n\thwAddr, err := net.ParseMAC(localMac)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\tdata, err := ioutil.ReadFile(\"password.bin\")\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tvar index int\n\tfor i, v := range data {\n\t\tif v == byte(0xff) {\n\t\t\tindex = i\n\t\t}\n\t}\n\tusername := string(data[0:index])\n\tpasswd := data[index+1:]\n\n\tgo readEap(handle, hwAddr, stop, username, passwd)\n\tdefer close(stop)\n\n\ttime.Sleep(3000)\n\tgo broadcast(handle, hwAddr)\n\n\tvar wg sync.WaitGroup\n\twg.Add(1)\n\twg.Wait()\n}\n\nfunc readEap(handle *pcap.Handle, localMac net.HardwareAddr, stop chan int, username string, password []byte) {\n\tsrc := gopacket.NewPacketSource(handle, layers.LayerTypeEthernet)\n\tin := src.Packets()\n\tfor {\n\t\tvar packet gopacket.Packet\n\t\tselect {\n\t\tcase <-stop:\n\t\t\treturn\n\t\tcase packet = <-in:\n\t\t\tethLayer := packet.Layer(layers.LayerTypeEthernet)\n\t\t\tif ethLayer == nil {\n\t\t\t\treturn\n\t\t\t}\n\t\t\teth := ethLayer.(*layers.Ethernet)\n\t\t\tsrcMac := eth.SrcMAC\n\n\t\t\teapLayer := packet.Layer(layers.LayerTypeEAP)\n\t\t\tif eapLayer == nil {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\teap := eapLayer.(*layers.EAP)\n\t\t\tfmt.Println(\"eap data: \", eap)\n\n\t\t\tswitch eap.Code {\n\t\t\tcase layers.EAPCodeRequest:\n\t\t\t\tswitch eap.Type {\n\t\t\t\tcase layers.EAPTypeIdentity:\n\t\t\t\t\tsendUserName(handle, localMac, srcMac, eap.Id, username)\n\t\t\t\tcase 0x66:\n\t\t\t\t\tsendPassword(handle, localMac, srcMac, eap.Id, password)\n\t\t\t\tdefault:\n\t\t\t\t\tfmt.Println(\"unknown eap type:\", eap.Type)\n\t\t\t\t}\n\t\t\tcase layers.EAPCodeSuccess:\n\t\t\t\tstop <- 1\n\t\t\t\tfmt.Println(\"epa success\")\n\t\t\tcase layers.EAPCodeFailure:\n\t\t\t\tfmt.Println(\"eap failure\")\n\t\t\tdefault:\n\t\t\t\tfmt.Println(\"unknown epa code:\", eap.Code)\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunc broadcast(handle *pcap.Handle, localMac net.HardwareAddr) error {\n\teth := layers.Ethernet{\n\t\tSrcMAC:       localMac,\n\t\tDstMAC:       net.HardwareAddr{0xff, 0xff, 0xff, 0xff, 0xff, 0xff},\n\t\tEthernetType: 0x888e,\n\t}\n\teaPol := layers.EAPOL{\n\t\tVersion: 0x01,\n\t\tType:    layers.EAPOLTypeStart,\n\t\tLength:  0x00,\n\t}\n\n\tbuf := gopacket.NewSerializeBuffer()\n\topts := gopacket.SerializeOptions{\n\t\tFixLengths:       true,\n\t\tComputeChecksums: true,\n\t}\n\tgopacket.SerializeLayers(buf, opts, &eth, &eaPol)\n\tfmt.Println(\"broadcast \")\n\tif err := handle.WritePacketData(buf.Bytes()); err != nil {\n\t\treturn err\n\t}\n\treturn nil\n}\n\nfunc sendUserName(handle *pcap.Handle, srcMac net.HardwareAddr, destAddr net.HardwareAddr, id uint8, username string) error {\n\teth := layers.Ethernet{\n\t\tSrcMAC:       srcMac,\n\t\tDstMAC:       destAddr,\n\t\tEthernetType: 0x888e,\n\t}\n\teap := layers.EAP{\n\t\tCode:     layers.EAPCodeResponse,\n\t\tId:       id,\n\t\tLength:   uint16(len([]byte(username))),\n\t\tType:     layers.EAPTypeIdentity,\n\t\tTypeData: []byte(username),\n\t}\n\n\tbuf := gopacket.NewSerializeBuffer()\n\topts := gopacket.SerializeOptions{\n\t\tFixLengths:       true,\n\t\tComputeChecksums: true,\n\t}\n\tgopacket.SerializeLayers(buf, opts, &eth, &eap)\n\tfmt.Println(\"send username \", username)\n\tif err := handle.WritePacketData(buf.Bytes()); err != nil {\n\t\treturn err\n\t}\n\treturn nil\n\n}\n\nfunc sendPassword(handle *pcap.Handle, srcMac net.HardwareAddr, destAddr net.HardwareAddr, id uint8, password []byte) error {\n\teth := layers.Ethernet{\n\t\tSrcMAC:       srcMac,\n\t\tDstMAC:       destAddr,\n\t\tEthernetType: 0x888e,\n\t}\n\n\teap := layers.EAP{\n\t\tCode:     layers.EAPCodeResponse,\n\t\tId:       id,\n\t\tLength:   uint16(len(password)),\n\t\tType:     layers.EAPTypeIdentity,\n\t\tTypeData: password,\n\t}\n\n\tbuf := gopacket.NewSerializeBuffer()\n\topts := gopacket.SerializeOptions{\n\t\tFixLengths:       true,\n\t\tComputeChecksums: true,\n\t}\n\tgopacket.SerializeLayers(buf, opts, &eth, &eap)\n\tif err := handle.WritePacketData(buf.Bytes()); err != nil {\n\t\treturn err\n\t}\n\treturn nil\n}\n```\n","slug":"802-1-x","published":1,"updated":"2020-10-04T00:45:00.766Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckfudvg920000bkui4x4z5cvl","content":"<p>由于不清楚密码如何加密的，只能抓包获取认证的密钥。生成password.bin用于后面认证。</p>\n<figure class=\"highlight golang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;flag&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;github.com/google/gopacket&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;github.com/google/gopacket/layers&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;github.com/google/gopacket/pcap&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;io/ioutil&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> iface = flag.String(<span class=\"string\">&quot;i&quot;</span>, <span class=\"string\">&quot;\\\\Device\\\\NPF_&#123;540078E3-B5F2-4E7A-9D21-&#125;&quot;</span>, <span class=\"string\">&quot;Interface to read packets from&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tflag.Parse()</span><br><span class=\"line\">\tfilterStr := fmt.Sprintf(<span class=\"string\">&quot;(ether proto 0x888e)&quot;</span>)</span><br><span class=\"line\">\tfmt.Println(*iface)</span><br><span class=\"line\">\thandle, err := pcap.OpenLive(*iface, <span class=\"number\">65536</span>, <span class=\"literal\">true</span>, pcap.BlockForever)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">panic</span>(err)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\terr = handle.SetBPFFilter(filterStr)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">panic</span>(err)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">defer</span> handle.Close()</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> userName, passWord []<span class=\"keyword\">byte</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> userName == <span class=\"literal\">nil</span> || passWord == <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\tdata, _, err := handle.ReadPacketData()</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> err == pcap.NextErrorTimeoutExpired &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">continue</span></span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">panic</span>(err)</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tpacket := gopacket.NewPacket(data, layers.LayerTypeEthernet, gopacket.NoCopy)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> eapLayer := packet.Layer(layers.LayerTypeEAP); eapLayer != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t\teap := eapLayer.(*layers.EAP)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">switch</span> eap.Code &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> layers.EAPCodeResponse:</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">switch</span> eap.Type &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">case</span> layers.EAPTypeIdentity:</span><br><span class=\"line\">\t\t\t\t\tuserName = eap.TypeData</span><br><span class=\"line\">\t\t\t\t\tfmt.Printf(<span class=\"string\">&quot;%s&quot;</span>, <span class=\"keyword\">string</span>(userName))</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">case</span> <span class=\"number\">0x66</span>:</span><br><span class=\"line\">\t\t\t\t\tpassWord = eap.TypeData</span><br><span class=\"line\">\t\t\t\t\tfmt.Println()</span><br><span class=\"line\">\t\t\t\t\tfmt.Printf(<span class=\"string\">&quot;%x&quot;</span>, passWord)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">default</span>:</span><br><span class=\"line\">\t\t\t\t\tfmt.Println(<span class=\"string\">&quot;unknown eap type:&quot;</span>, eap.Type)</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> layers.EAPCodeSuccess:</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> layers.EAPCodeFailure:</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">default</span>:</span><br><span class=\"line\">\t\t\t\tfmt.Println(<span class=\"string\">&quot;unknown epa code:&quot;</span>, eap.Code)</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tuserName = <span class=\"built_in\">append</span>(userName, <span class=\"number\">0xff</span>)</span><br><span class=\"line\">\tuserName = <span class=\"built_in\">append</span>(userName, passWord...)</span><br><span class=\"line\">\te := ioutil.WriteFile(<span class=\"string\">&quot;password.bin&quot;</span>, userName, <span class=\"number\">0644</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> e != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">panic</span>(e)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>认证</p>\n<figure class=\"highlight golang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;flag&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;github.com/google/gopacket&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;github.com/google/gopacket/layers&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;github.com/google/gopacket/pcap&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;io/ioutil&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;net&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;sync&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;time&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> (</span><br><span class=\"line\">\tinterfaceName <span class=\"keyword\">string</span></span><br><span class=\"line\">\tlocalMac      <span class=\"keyword\">string</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">init</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tflag.StringVar(&amp;interfaceName, <span class=\"string\">&quot;interface&quot;</span>, <span class=\"string\">&quot;&quot;</span>, <span class=\"string\">&quot;interface name&quot;</span>)</span><br><span class=\"line\">\tflag.StringVar(&amp;localMac, <span class=\"string\">&quot;mac&quot;</span>, <span class=\"string\">&quot;&quot;</span>, <span class=\"string\">&quot;mac address&quot;</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//https://github.com/google/gopacket/issues/456</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tflag.Parse()</span><br><span class=\"line\">\tauthentication(interfaceName, localMac)</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">authentication</span><span class=\"params\">(interfaceName <span class=\"keyword\">string</span>, localMac <span class=\"keyword\">string</span>)</span></span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tfilterStr := fmt.Sprintf(</span><br><span class=\"line\">\t\t<span class=\"string\">&quot;(ether proto 0x888e) and (ether dst host %s)&quot;</span>, localMac)</span><br><span class=\"line\">\thandle, err := pcap.OpenLive(interfaceName, <span class=\"number\">65536</span>, <span class=\"literal\">true</span>, pcap.BlockForever)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">panic</span>(err)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\terr = handle.SetBPFFilter(filterStr)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">panic</span>(err)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">defer</span> handle.Close()</span><br><span class=\"line\"></span><br><span class=\"line\">\tstop := <span class=\"built_in\">make</span>(<span class=\"keyword\">chan</span> <span class=\"keyword\">int</span>)</span><br><span class=\"line\">\thwAddr, err := net.ParseMAC(localMac)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">panic</span>(err)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tdata, err := ioutil.ReadFile(<span class=\"string\">&quot;password.bin&quot;</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">panic</span>(err)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> index <span class=\"keyword\">int</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i, v := <span class=\"keyword\">range</span> data &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> v == <span class=\"keyword\">byte</span>(<span class=\"number\">0xff</span>) &#123;</span><br><span class=\"line\">\t\t\tindex = i</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tusername := <span class=\"keyword\">string</span>(data[<span class=\"number\">0</span>:index])</span><br><span class=\"line\">\tpasswd := data[index+<span class=\"number\">1</span>:]</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">go</span> readEap(handle, hwAddr, stop, username, passwd)</span><br><span class=\"line\">\t<span class=\"keyword\">defer</span> <span class=\"built_in\">close</span>(stop)</span><br><span class=\"line\"></span><br><span class=\"line\">\ttime.Sleep(<span class=\"number\">3000</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">go</span> broadcast(handle, hwAddr)</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> wg sync.WaitGroup</span><br><span class=\"line\">\twg.Add(<span class=\"number\">1</span>)</span><br><span class=\"line\">\twg.Wait()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">readEap</span><span class=\"params\">(handle *pcap.Handle, localMac net.HardwareAddr, stop <span class=\"keyword\">chan</span> <span class=\"keyword\">int</span>, username <span class=\"keyword\">string</span>, password []<span class=\"keyword\">byte</span>)</span></span> &#123;</span><br><span class=\"line\">\tsrc := gopacket.NewPacketSource(handle, layers.LayerTypeEthernet)</span><br><span class=\"line\">\tin := src.Packets()</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> packet gopacket.Packet</span><br><span class=\"line\">\t\t<span class=\"keyword\">select</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> &lt;-stop:</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> packet = &lt;-in:</span><br><span class=\"line\">\t\t\tethLayer := packet.Layer(layers.LayerTypeEthernet)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> ethLayer == <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\teth := ethLayer.(*layers.Ethernet)</span><br><span class=\"line\">\t\t\tsrcMac := eth.SrcMAC</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\teapLayer := packet.Layer(layers.LayerTypeEAP)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> eapLayer == <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">continue</span></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\teap := eapLayer.(*layers.EAP)</span><br><span class=\"line\">\t\t\tfmt.Println(<span class=\"string\">&quot;eap data: &quot;</span>, eap)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">switch</span> eap.Code &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> layers.EAPCodeRequest:</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">switch</span> eap.Type &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">case</span> layers.EAPTypeIdentity:</span><br><span class=\"line\">\t\t\t\t\tsendUserName(handle, localMac, srcMac, eap.Id, username)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">case</span> <span class=\"number\">0x66</span>:</span><br><span class=\"line\">\t\t\t\t\tsendPassword(handle, localMac, srcMac, eap.Id, password)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">default</span>:</span><br><span class=\"line\">\t\t\t\t\tfmt.Println(<span class=\"string\">&quot;unknown eap type:&quot;</span>, eap.Type)</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> layers.EAPCodeSuccess:</span><br><span class=\"line\">\t\t\t\tstop &lt;- <span class=\"number\">1</span></span><br><span class=\"line\">\t\t\t\tfmt.Println(<span class=\"string\">&quot;epa success&quot;</span>)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> layers.EAPCodeFailure:</span><br><span class=\"line\">\t\t\t\tfmt.Println(<span class=\"string\">&quot;eap failure&quot;</span>)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">default</span>:</span><br><span class=\"line\">\t\t\t\tfmt.Println(<span class=\"string\">&quot;unknown epa code:&quot;</span>, eap.Code)</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">broadcast</span><span class=\"params\">(handle *pcap.Handle, localMac net.HardwareAddr)</span> <span class=\"title\">error</span></span> &#123;</span><br><span class=\"line\">\teth := layers.Ethernet&#123;</span><br><span class=\"line\">\t\tSrcMAC:       localMac,</span><br><span class=\"line\">\t\tDstMAC:       net.HardwareAddr&#123;<span class=\"number\">0xff</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0xff</span>&#125;,</span><br><span class=\"line\">\t\tEthernetType: <span class=\"number\">0x888e</span>,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\teaPol := layers.EAPOL&#123;</span><br><span class=\"line\">\t\tVersion: <span class=\"number\">0x01</span>,</span><br><span class=\"line\">\t\tType:    layers.EAPOLTypeStart,</span><br><span class=\"line\">\t\tLength:  <span class=\"number\">0x00</span>,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tbuf := gopacket.NewSerializeBuffer()</span><br><span class=\"line\">\topts := gopacket.SerializeOptions&#123;</span><br><span class=\"line\">\t\tFixLengths:       <span class=\"literal\">true</span>,</span><br><span class=\"line\">\t\tComputeChecksums: <span class=\"literal\">true</span>,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tgopacket.SerializeLayers(buf, opts, &amp;eth, &amp;eaPol)</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot;broadcast &quot;</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err := handle.WritePacketData(buf.Bytes()); err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> err</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">sendUserName</span><span class=\"params\">(handle *pcap.Handle, srcMac net.HardwareAddr, destAddr net.HardwareAddr, id <span class=\"keyword\">uint8</span>, username <span class=\"keyword\">string</span>)</span> <span class=\"title\">error</span></span> &#123;</span><br><span class=\"line\">\teth := layers.Ethernet&#123;</span><br><span class=\"line\">\t\tSrcMAC:       srcMac,</span><br><span class=\"line\">\t\tDstMAC:       destAddr,</span><br><span class=\"line\">\t\tEthernetType: <span class=\"number\">0x888e</span>,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\teap := layers.EAP&#123;</span><br><span class=\"line\">\t\tCode:     layers.EAPCodeResponse,</span><br><span class=\"line\">\t\tId:       id,</span><br><span class=\"line\">\t\tLength:   <span class=\"keyword\">uint16</span>(<span class=\"built_in\">len</span>([]<span class=\"keyword\">byte</span>(username))),</span><br><span class=\"line\">\t\tType:     layers.EAPTypeIdentity,</span><br><span class=\"line\">\t\tTypeData: []<span class=\"keyword\">byte</span>(username),</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tbuf := gopacket.NewSerializeBuffer()</span><br><span class=\"line\">\topts := gopacket.SerializeOptions&#123;</span><br><span class=\"line\">\t\tFixLengths:       <span class=\"literal\">true</span>,</span><br><span class=\"line\">\t\tComputeChecksums: <span class=\"literal\">true</span>,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tgopacket.SerializeLayers(buf, opts, &amp;eth, &amp;eap)</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot;send username &quot;</span>, username)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err := handle.WritePacketData(buf.Bytes()); err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> err</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">sendPassword</span><span class=\"params\">(handle *pcap.Handle, srcMac net.HardwareAddr, destAddr net.HardwareAddr, id <span class=\"keyword\">uint8</span>, password []<span class=\"keyword\">byte</span>)</span> <span class=\"title\">error</span></span> &#123;</span><br><span class=\"line\">\teth := layers.Ethernet&#123;</span><br><span class=\"line\">\t\tSrcMAC:       srcMac,</span><br><span class=\"line\">\t\tDstMAC:       destAddr,</span><br><span class=\"line\">\t\tEthernetType: <span class=\"number\">0x888e</span>,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\teap := layers.EAP&#123;</span><br><span class=\"line\">\t\tCode:     layers.EAPCodeResponse,</span><br><span class=\"line\">\t\tId:       id,</span><br><span class=\"line\">\t\tLength:   <span class=\"keyword\">uint16</span>(<span class=\"built_in\">len</span>(password)),</span><br><span class=\"line\">\t\tType:     layers.EAPTypeIdentity,</span><br><span class=\"line\">\t\tTypeData: password,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tbuf := gopacket.NewSerializeBuffer()</span><br><span class=\"line\">\topts := gopacket.SerializeOptions&#123;</span><br><span class=\"line\">\t\tFixLengths:       <span class=\"literal\">true</span>,</span><br><span class=\"line\">\t\tComputeChecksums: <span class=\"literal\">true</span>,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tgopacket.SerializeLayers(buf, opts, &amp;eth, &amp;eap)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err := handle.WritePacketData(buf.Bytes()); err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> err</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>由于不清楚密码如何加密的，只能抓包获取认证的密钥。生成password.bin用于后面认证。</p>\n<figure class=\"highlight golang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;flag&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;github.com/google/gopacket&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;github.com/google/gopacket/layers&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;github.com/google/gopacket/pcap&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;io/ioutil&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> iface = flag.String(<span class=\"string\">&quot;i&quot;</span>, <span class=\"string\">&quot;\\\\Device\\\\NPF_&#123;540078E3-B5F2-4E7A-9D21-&#125;&quot;</span>, <span class=\"string\">&quot;Interface to read packets from&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tflag.Parse()</span><br><span class=\"line\">\tfilterStr := fmt.Sprintf(<span class=\"string\">&quot;(ether proto 0x888e)&quot;</span>)</span><br><span class=\"line\">\tfmt.Println(*iface)</span><br><span class=\"line\">\thandle, err := pcap.OpenLive(*iface, <span class=\"number\">65536</span>, <span class=\"literal\">true</span>, pcap.BlockForever)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">panic</span>(err)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\terr = handle.SetBPFFilter(filterStr)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">panic</span>(err)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">defer</span> handle.Close()</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> userName, passWord []<span class=\"keyword\">byte</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> userName == <span class=\"literal\">nil</span> || passWord == <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\tdata, _, err := handle.ReadPacketData()</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> err == pcap.NextErrorTimeoutExpired &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">continue</span></span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">panic</span>(err)</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tpacket := gopacket.NewPacket(data, layers.LayerTypeEthernet, gopacket.NoCopy)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> eapLayer := packet.Layer(layers.LayerTypeEAP); eapLayer != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t\teap := eapLayer.(*layers.EAP)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">switch</span> eap.Code &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> layers.EAPCodeResponse:</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">switch</span> eap.Type &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">case</span> layers.EAPTypeIdentity:</span><br><span class=\"line\">\t\t\t\t\tuserName = eap.TypeData</span><br><span class=\"line\">\t\t\t\t\tfmt.Printf(<span class=\"string\">&quot;%s&quot;</span>, <span class=\"keyword\">string</span>(userName))</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">case</span> <span class=\"number\">0x66</span>:</span><br><span class=\"line\">\t\t\t\t\tpassWord = eap.TypeData</span><br><span class=\"line\">\t\t\t\t\tfmt.Println()</span><br><span class=\"line\">\t\t\t\t\tfmt.Printf(<span class=\"string\">&quot;%x&quot;</span>, passWord)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">default</span>:</span><br><span class=\"line\">\t\t\t\t\tfmt.Println(<span class=\"string\">&quot;unknown eap type:&quot;</span>, eap.Type)</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> layers.EAPCodeSuccess:</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> layers.EAPCodeFailure:</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">default</span>:</span><br><span class=\"line\">\t\t\t\tfmt.Println(<span class=\"string\">&quot;unknown epa code:&quot;</span>, eap.Code)</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tuserName = <span class=\"built_in\">append</span>(userName, <span class=\"number\">0xff</span>)</span><br><span class=\"line\">\tuserName = <span class=\"built_in\">append</span>(userName, passWord...)</span><br><span class=\"line\">\te := ioutil.WriteFile(<span class=\"string\">&quot;password.bin&quot;</span>, userName, <span class=\"number\">0644</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> e != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">panic</span>(e)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>认证</p>\n<figure class=\"highlight golang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;flag&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;github.com/google/gopacket&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;github.com/google/gopacket/layers&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;github.com/google/gopacket/pcap&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;io/ioutil&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;net&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;sync&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;time&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> (</span><br><span class=\"line\">\tinterfaceName <span class=\"keyword\">string</span></span><br><span class=\"line\">\tlocalMac      <span class=\"keyword\">string</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">init</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tflag.StringVar(&amp;interfaceName, <span class=\"string\">&quot;interface&quot;</span>, <span class=\"string\">&quot;&quot;</span>, <span class=\"string\">&quot;interface name&quot;</span>)</span><br><span class=\"line\">\tflag.StringVar(&amp;localMac, <span class=\"string\">&quot;mac&quot;</span>, <span class=\"string\">&quot;&quot;</span>, <span class=\"string\">&quot;mac address&quot;</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//https://github.com/google/gopacket/issues/456</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tflag.Parse()</span><br><span class=\"line\">\tauthentication(interfaceName, localMac)</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">authentication</span><span class=\"params\">(interfaceName <span class=\"keyword\">string</span>, localMac <span class=\"keyword\">string</span>)</span></span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tfilterStr := fmt.Sprintf(</span><br><span class=\"line\">\t\t<span class=\"string\">&quot;(ether proto 0x888e) and (ether dst host %s)&quot;</span>, localMac)</span><br><span class=\"line\">\thandle, err := pcap.OpenLive(interfaceName, <span class=\"number\">65536</span>, <span class=\"literal\">true</span>, pcap.BlockForever)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">panic</span>(err)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\terr = handle.SetBPFFilter(filterStr)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">panic</span>(err)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">defer</span> handle.Close()</span><br><span class=\"line\"></span><br><span class=\"line\">\tstop := <span class=\"built_in\">make</span>(<span class=\"keyword\">chan</span> <span class=\"keyword\">int</span>)</span><br><span class=\"line\">\thwAddr, err := net.ParseMAC(localMac)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">panic</span>(err)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tdata, err := ioutil.ReadFile(<span class=\"string\">&quot;password.bin&quot;</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">panic</span>(err)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> index <span class=\"keyword\">int</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i, v := <span class=\"keyword\">range</span> data &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> v == <span class=\"keyword\">byte</span>(<span class=\"number\">0xff</span>) &#123;</span><br><span class=\"line\">\t\t\tindex = i</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tusername := <span class=\"keyword\">string</span>(data[<span class=\"number\">0</span>:index])</span><br><span class=\"line\">\tpasswd := data[index+<span class=\"number\">1</span>:]</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">go</span> readEap(handle, hwAddr, stop, username, passwd)</span><br><span class=\"line\">\t<span class=\"keyword\">defer</span> <span class=\"built_in\">close</span>(stop)</span><br><span class=\"line\"></span><br><span class=\"line\">\ttime.Sleep(<span class=\"number\">3000</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">go</span> broadcast(handle, hwAddr)</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> wg sync.WaitGroup</span><br><span class=\"line\">\twg.Add(<span class=\"number\">1</span>)</span><br><span class=\"line\">\twg.Wait()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">readEap</span><span class=\"params\">(handle *pcap.Handle, localMac net.HardwareAddr, stop <span class=\"keyword\">chan</span> <span class=\"keyword\">int</span>, username <span class=\"keyword\">string</span>, password []<span class=\"keyword\">byte</span>)</span></span> &#123;</span><br><span class=\"line\">\tsrc := gopacket.NewPacketSource(handle, layers.LayerTypeEthernet)</span><br><span class=\"line\">\tin := src.Packets()</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> packet gopacket.Packet</span><br><span class=\"line\">\t\t<span class=\"keyword\">select</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> &lt;-stop:</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> packet = &lt;-in:</span><br><span class=\"line\">\t\t\tethLayer := packet.Layer(layers.LayerTypeEthernet)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> ethLayer == <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\teth := ethLayer.(*layers.Ethernet)</span><br><span class=\"line\">\t\t\tsrcMac := eth.SrcMAC</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\teapLayer := packet.Layer(layers.LayerTypeEAP)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> eapLayer == <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">continue</span></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\teap := eapLayer.(*layers.EAP)</span><br><span class=\"line\">\t\t\tfmt.Println(<span class=\"string\">&quot;eap data: &quot;</span>, eap)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">switch</span> eap.Code &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> layers.EAPCodeRequest:</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">switch</span> eap.Type &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">case</span> layers.EAPTypeIdentity:</span><br><span class=\"line\">\t\t\t\t\tsendUserName(handle, localMac, srcMac, eap.Id, username)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">case</span> <span class=\"number\">0x66</span>:</span><br><span class=\"line\">\t\t\t\t\tsendPassword(handle, localMac, srcMac, eap.Id, password)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">default</span>:</span><br><span class=\"line\">\t\t\t\t\tfmt.Println(<span class=\"string\">&quot;unknown eap type:&quot;</span>, eap.Type)</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> layers.EAPCodeSuccess:</span><br><span class=\"line\">\t\t\t\tstop &lt;- <span class=\"number\">1</span></span><br><span class=\"line\">\t\t\t\tfmt.Println(<span class=\"string\">&quot;epa success&quot;</span>)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> layers.EAPCodeFailure:</span><br><span class=\"line\">\t\t\t\tfmt.Println(<span class=\"string\">&quot;eap failure&quot;</span>)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">default</span>:</span><br><span class=\"line\">\t\t\t\tfmt.Println(<span class=\"string\">&quot;unknown epa code:&quot;</span>, eap.Code)</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">broadcast</span><span class=\"params\">(handle *pcap.Handle, localMac net.HardwareAddr)</span> <span class=\"title\">error</span></span> &#123;</span><br><span class=\"line\">\teth := layers.Ethernet&#123;</span><br><span class=\"line\">\t\tSrcMAC:       localMac,</span><br><span class=\"line\">\t\tDstMAC:       net.HardwareAddr&#123;<span class=\"number\">0xff</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0xff</span>&#125;,</span><br><span class=\"line\">\t\tEthernetType: <span class=\"number\">0x888e</span>,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\teaPol := layers.EAPOL&#123;</span><br><span class=\"line\">\t\tVersion: <span class=\"number\">0x01</span>,</span><br><span class=\"line\">\t\tType:    layers.EAPOLTypeStart,</span><br><span class=\"line\">\t\tLength:  <span class=\"number\">0x00</span>,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tbuf := gopacket.NewSerializeBuffer()</span><br><span class=\"line\">\topts := gopacket.SerializeOptions&#123;</span><br><span class=\"line\">\t\tFixLengths:       <span class=\"literal\">true</span>,</span><br><span class=\"line\">\t\tComputeChecksums: <span class=\"literal\">true</span>,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tgopacket.SerializeLayers(buf, opts, &amp;eth, &amp;eaPol)</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot;broadcast &quot;</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err := handle.WritePacketData(buf.Bytes()); err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> err</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">sendUserName</span><span class=\"params\">(handle *pcap.Handle, srcMac net.HardwareAddr, destAddr net.HardwareAddr, id <span class=\"keyword\">uint8</span>, username <span class=\"keyword\">string</span>)</span> <span class=\"title\">error</span></span> &#123;</span><br><span class=\"line\">\teth := layers.Ethernet&#123;</span><br><span class=\"line\">\t\tSrcMAC:       srcMac,</span><br><span class=\"line\">\t\tDstMAC:       destAddr,</span><br><span class=\"line\">\t\tEthernetType: <span class=\"number\">0x888e</span>,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\teap := layers.EAP&#123;</span><br><span class=\"line\">\t\tCode:     layers.EAPCodeResponse,</span><br><span class=\"line\">\t\tId:       id,</span><br><span class=\"line\">\t\tLength:   <span class=\"keyword\">uint16</span>(<span class=\"built_in\">len</span>([]<span class=\"keyword\">byte</span>(username))),</span><br><span class=\"line\">\t\tType:     layers.EAPTypeIdentity,</span><br><span class=\"line\">\t\tTypeData: []<span class=\"keyword\">byte</span>(username),</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tbuf := gopacket.NewSerializeBuffer()</span><br><span class=\"line\">\topts := gopacket.SerializeOptions&#123;</span><br><span class=\"line\">\t\tFixLengths:       <span class=\"literal\">true</span>,</span><br><span class=\"line\">\t\tComputeChecksums: <span class=\"literal\">true</span>,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tgopacket.SerializeLayers(buf, opts, &amp;eth, &amp;eap)</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot;send username &quot;</span>, username)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err := handle.WritePacketData(buf.Bytes()); err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> err</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">sendPassword</span><span class=\"params\">(handle *pcap.Handle, srcMac net.HardwareAddr, destAddr net.HardwareAddr, id <span class=\"keyword\">uint8</span>, password []<span class=\"keyword\">byte</span>)</span> <span class=\"title\">error</span></span> &#123;</span><br><span class=\"line\">\teth := layers.Ethernet&#123;</span><br><span class=\"line\">\t\tSrcMAC:       srcMac,</span><br><span class=\"line\">\t\tDstMAC:       destAddr,</span><br><span class=\"line\">\t\tEthernetType: <span class=\"number\">0x888e</span>,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\teap := layers.EAP&#123;</span><br><span class=\"line\">\t\tCode:     layers.EAPCodeResponse,</span><br><span class=\"line\">\t\tId:       id,</span><br><span class=\"line\">\t\tLength:   <span class=\"keyword\">uint16</span>(<span class=\"built_in\">len</span>(password)),</span><br><span class=\"line\">\t\tType:     layers.EAPTypeIdentity,</span><br><span class=\"line\">\t\tTypeData: password,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tbuf := gopacket.NewSerializeBuffer()</span><br><span class=\"line\">\topts := gopacket.SerializeOptions&#123;</span><br><span class=\"line\">\t\tFixLengths:       <span class=\"literal\">true</span>,</span><br><span class=\"line\">\t\tComputeChecksums: <span class=\"literal\">true</span>,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tgopacket.SerializeLayers(buf, opts, &amp;eth, &amp;eap)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err := handle.WritePacketData(buf.Bytes()); err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> err</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"控制树莓派","date":"2020-10-04T00:59:55.000Z","mp3":null,"cover":null,"_content":"\n找了一圈没找到一个比较好的能用web控制订阅的工具，自己做一个。中途发现一些比较好的能满足我需求的[项目](https://github.com/twotreesus/V2ray.FunPi)，又参考了一下\n目前树莓派用于\n* 主路由\n* hostapd实现全局代理，并且实现了90DNS用于switch\n* [人人影视](http://appdown.rrys.tv/rrshareweb_rpi.2.20.tar.gz)\n* 文件共享用于小米盒子等播放\n\n![](/assets/Screenshot_1.png)\n\n\n[https://github.com/8DE4732A/rasp_control](https://github.com/8DE4732A/rasp_control)","source":"_posts/rasp-ctl.md","raw":"---\ntitle: 控制树莓派\ndate: 2020-10-04 08:59:55\ntags: raspberry\ncategories: raspberry\nmp3:\ncover:\n---\n\n找了一圈没找到一个比较好的能用web控制订阅的工具，自己做一个。中途发现一些比较好的能满足我需求的[项目](https://github.com/twotreesus/V2ray.FunPi)，又参考了一下\n目前树莓派用于\n* 主路由\n* hostapd实现全局代理，并且实现了90DNS用于switch\n* [人人影视](http://appdown.rrys.tv/rrshareweb_rpi.2.20.tar.gz)\n* 文件共享用于小米盒子等播放\n\n![](/assets/Screenshot_1.png)\n\n\n[https://github.com/8DE4732A/rasp_control](https://github.com/8DE4732A/rasp_control)","slug":"rasp-ctl","published":1,"updated":"2020-10-04T01:01:57.477Z","_id":"ckfueemdx000020uiem9r2f3i","comments":1,"layout":"post","photos":[],"link":"","content":"<p>找了一圈没找到一个比较好的能用web控制订阅的工具，自己做一个。中途发现一些比较好的能满足我需求的<a href=\"https://github.com/twotreesus/V2ray.FunPi\">项目</a>，又参考了一下<br>目前树莓派用于</p>\n<ul>\n<li>主路由</li>\n<li>hostapd实现全局代理，并且实现了90DNS用于switch</li>\n<li><a href=\"http://appdown.rrys.tv/rrshareweb_rpi.2.20.tar.gz\">人人影视</a></li>\n<li>文件共享用于小米盒子等播放</li>\n</ul>\n<p><img src=\"/assets/Screenshot_1.png\"></p>\n<p><a href=\"https://github.com/8DE4732A/rasp_control\">https://github.com/8DE4732A/rasp_control</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>找了一圈没找到一个比较好的能用web控制订阅的工具，自己做一个。中途发现一些比较好的能满足我需求的<a href=\"https://github.com/twotreesus/V2ray.FunPi\">项目</a>，又参考了一下<br>目前树莓派用于</p>\n<ul>\n<li>主路由</li>\n<li>hostapd实现全局代理，并且实现了90DNS用于switch</li>\n<li><a href=\"http://appdown.rrys.tv/rrshareweb_rpi.2.20.tar.gz\">人人影视</a></li>\n<li>文件共享用于小米盒子等播放</li>\n</ul>\n<p><img src=\"/assets/Screenshot_1.png\"></p>\n<p><a href=\"https://github.com/8DE4732A/rasp_control\">https://github.com/8DE4732A/rasp_control</a></p>\n"},{"title":"tic80","date":"2020-10-04T01:07:20.000Z","mp3":null,"cover":null,"_content":"\ntic80好玩的游戏收集\n\n![](https://raw.githubusercontent.com/tasogare66/nibiruman/master/capture/s02.gif)\n[https://github.com/tasogare66/nibiruman](https://github.com/tasogare66/nibiruman)\n","source":"_posts/tic80.md","raw":"---\ntitle: tic80\ndate: 2020-10-04 09:07:20\ntags: game\ncategories: game\nmp3:\ncover:\n---\n\ntic80好玩的游戏收集\n\n![](https://raw.githubusercontent.com/tasogare66/nibiruman/master/capture/s02.gif)\n[https://github.com/tasogare66/nibiruman](https://github.com/tasogare66/nibiruman)\n","slug":"tic80","published":1,"updated":"2020-10-04T01:11:11.948Z","_id":"ckfuesjh00000rcuidi6e7xwh","comments":1,"layout":"post","photos":[],"link":"","content":"<p>tic80好玩的游戏收集</p>\n<p><img src=\"https://raw.githubusercontent.com/tasogare66/nibiruman/master/capture/s02.gif\"><br><a href=\"https://github.com/tasogare66/nibiruman\">https://github.com/tasogare66/nibiruman</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>tic80好玩的游戏收集</p>\n<p><img src=\"https://raw.githubusercontent.com/tasogare66/nibiruman/master/capture/s02.gif\"><br><a href=\"https://github.com/tasogare66/nibiruman\">https://github.com/tasogare66/nibiruman</a></p>\n"},{"title":"洞窟物语","date":"2020-10-04T01:12:09.000Z","mp3":null,"cover":null,"_content":"\nRemaking Cavestory in C++\n[https://www.youtube.com/watch?v=ETvApbD5xRo&list=PLNOBk_id22bw6LXhrGfhVwqQIa-M2MsLa](https://www.youtube.com/watch?v=ETvApbD5xRo&list=PLNOBk_id22bw6LXhrGfhVwqQIa-M2MsLa)\n\n\n我想用go语言写一个。。。","source":"_posts/doukutsu.md","raw":"---\ntitle: 洞窟物语\ndate: 2020-10-04 09:12:09\ntags: game\ncategories: game\nmp3:\ncover:\n---\n\nRemaking Cavestory in C++\n[https://www.youtube.com/watch?v=ETvApbD5xRo&list=PLNOBk_id22bw6LXhrGfhVwqQIa-M2MsLa](https://www.youtube.com/watch?v=ETvApbD5xRo&list=PLNOBk_id22bw6LXhrGfhVwqQIa-M2MsLa)\n\n\n我想用go语言写一个。。。","slug":"doukutsu","published":1,"updated":"2020-10-04T04:10:06.152Z","_id":"ckfuex9ou0000pkui62mx74c1","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Remaking Cavestory in C++<br><a href=\"https://www.youtube.com/watch?v=ETvApbD5xRo&list=PLNOBk_id22bw6LXhrGfhVwqQIa-M2MsLa\">https://www.youtube.com/watch?v=ETvApbD5xRo&amp;list=PLNOBk_id22bw6LXhrGfhVwqQIa-M2MsLa</a></p>\n<p>我想用go语言写一个。。。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Remaking Cavestory in C++<br><a href=\"https://www.youtube.com/watch?v=ETvApbD5xRo&list=PLNOBk_id22bw6LXhrGfhVwqQIa-M2MsLa\">https://www.youtube.com/watch?v=ETvApbD5xRo&amp;list=PLNOBk_id22bw6LXhrGfhVwqQIa-M2MsLa</a></p>\n<p>我想用go语言写一个。。。</p>\n"},{"title":"气象云图","date":"2020-10-04T04:04:15.000Z","mp3":null,"cover":null,"_content":"发现[中国天气网](http://www.weather.com.cn/satellite/)的气象云图挺好看的，vps上搞了个定时任务，抓取图片，生成视频\n\n定时抓取\n```python\nimport urllib.request\nimport json\nimport time\nreq = urllib.request.Request(\"http://d1.weather.com.cn/satellite2015/JC_YT_DL_WXZXCSYT_4A.html?jsoncallback=readSatellite&callback=jQuery18208455971171376718_\" + str(round(time.time() * 1000)) + \"&_=\" + str(round(time.time() * 1000)))\nreq.add_header('Referer', 'http://www.weather.com.cn/satellite/')\nreq.add_header('User-Agent', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36')\n\nwith urllib.request.urlopen(req) as f:\n    data = f.read().decode('utf-8')\n    data = data[14:-1]\n    j = json.loads(data.replace('\\'','\\\"'))\n    for a in j['radars']:\n        print(a['ft'])\n        urllib.request.urlretrieve(\"http://pi.weather.com.cn/i/product/pic/l/sevp_nsmc_\" + a['fn'] + \"_lno_py_\" + a['ft'] + \".jpg\", \"D://weather/\" + a['ft'] + \".jpg\")\n```\n\n生成图片\n先创建软链接用于ffmpeg\n```python\nfrom pathlib import Path\n\np = Path('D:\\weather')\nfile_names = [x.name for x in p.iterdir()]\nnums = sorted([x.split('.')[0] for x in file_names])\n\nfor i in range(len(nums)):\n    Path('D:\\weather-ffmpeg\\\\' + '{0:06d}'.format(i) + '.jpg').symlink_to('D:\\weather\\\\' + nums[i] + '.jpg')\n```\n\n```shell\n/root/ffmpeg/ffmpeg -f image2 -i /root/weather-ffmpeg/%06d.jpg -vcodec libx264 -r 10 /var/http/weather.mp4\n```\n\n\n[https://github.com/8DE4732A/china-weather](https://github.com/8DE4732A/china-weather)","source":"_posts/china-weather.md","raw":"---\ntitle: 气象云图\ndate: 2020-10-04 12:04:15\ntags: python\ncategories: python\nmp3:\ncover:\n---\n发现[中国天气网](http://www.weather.com.cn/satellite/)的气象云图挺好看的，vps上搞了个定时任务，抓取图片，生成视频\n\n定时抓取\n```python\nimport urllib.request\nimport json\nimport time\nreq = urllib.request.Request(\"http://d1.weather.com.cn/satellite2015/JC_YT_DL_WXZXCSYT_4A.html?jsoncallback=readSatellite&callback=jQuery18208455971171376718_\" + str(round(time.time() * 1000)) + \"&_=\" + str(round(time.time() * 1000)))\nreq.add_header('Referer', 'http://www.weather.com.cn/satellite/')\nreq.add_header('User-Agent', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36')\n\nwith urllib.request.urlopen(req) as f:\n    data = f.read().decode('utf-8')\n    data = data[14:-1]\n    j = json.loads(data.replace('\\'','\\\"'))\n    for a in j['radars']:\n        print(a['ft'])\n        urllib.request.urlretrieve(\"http://pi.weather.com.cn/i/product/pic/l/sevp_nsmc_\" + a['fn'] + \"_lno_py_\" + a['ft'] + \".jpg\", \"D://weather/\" + a['ft'] + \".jpg\")\n```\n\n生成图片\n先创建软链接用于ffmpeg\n```python\nfrom pathlib import Path\n\np = Path('D:\\weather')\nfile_names = [x.name for x in p.iterdir()]\nnums = sorted([x.split('.')[0] for x in file_names])\n\nfor i in range(len(nums)):\n    Path('D:\\weather-ffmpeg\\\\' + '{0:06d}'.format(i) + '.jpg').symlink_to('D:\\weather\\\\' + nums[i] + '.jpg')\n```\n\n```shell\n/root/ffmpeg/ffmpeg -f image2 -i /root/weather-ffmpeg/%06d.jpg -vcodec libx264 -r 10 /var/http/weather.mp4\n```\n\n\n[https://github.com/8DE4732A/china-weather](https://github.com/8DE4732A/china-weather)","slug":"china-weather","published":1,"updated":"2020-10-04T04:08:45.890Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckfuy3nse0000t8ui4q033voa","content":"<p>发现<a href=\"http://www.weather.com.cn/satellite/\">中国天气网</a>的气象云图挺好看的，vps上搞了个定时任务，抓取图片，生成视频</p>\n<p>定时抓取</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> urllib.request</span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\">req = urllib.request.Request(<span class=\"string\">&quot;http://d1.weather.com.cn/satellite2015/JC_YT_DL_WXZXCSYT_4A.html?jsoncallback=readSatellite&amp;callback=jQuery18208455971171376718_&quot;</span> + str(round(time.time() * <span class=\"number\">1000</span>)) + <span class=\"string\">&quot;&amp;_=&quot;</span> + str(round(time.time() * <span class=\"number\">1000</span>)))</span><br><span class=\"line\">req.add_header(<span class=\"string\">&#x27;Referer&#x27;</span>, <span class=\"string\">&#x27;http://www.weather.com.cn/satellite/&#x27;</span>)</span><br><span class=\"line\">req.add_header(<span class=\"string\">&#x27;User-Agent&#x27;</span>, <span class=\"string\">&#x27;Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> urllib.request.urlopen(req) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    data = f.read().decode(<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\">    data = data[<span class=\"number\">14</span>:<span class=\"number\">-1</span>]</span><br><span class=\"line\">    j = json.loads(data.replace(<span class=\"string\">&#x27;\\&#x27;&#x27;</span>,<span class=\"string\">&#x27;\\&quot;&#x27;</span>))</span><br><span class=\"line\">    <span class=\"keyword\">for</span> a <span class=\"keyword\">in</span> j[<span class=\"string\">&#x27;radars&#x27;</span>]:</span><br><span class=\"line\">        print(a[<span class=\"string\">&#x27;ft&#x27;</span>])</span><br><span class=\"line\">        urllib.request.urlretrieve(<span class=\"string\">&quot;http://pi.weather.com.cn/i/product/pic/l/sevp_nsmc_&quot;</span> + a[<span class=\"string\">&#x27;fn&#x27;</span>] + <span class=\"string\">&quot;_lno_py_&quot;</span> + a[<span class=\"string\">&#x27;ft&#x27;</span>] + <span class=\"string\">&quot;.jpg&quot;</span>, <span class=\"string\">&quot;D://weather/&quot;</span> + a[<span class=\"string\">&#x27;ft&#x27;</span>] + <span class=\"string\">&quot;.jpg&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>生成图片<br>先创建软链接用于ffmpeg</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pathlib <span class=\"keyword\">import</span> Path</span><br><span class=\"line\"></span><br><span class=\"line\">p = Path(<span class=\"string\">&#x27;D:\\weather&#x27;</span>)</span><br><span class=\"line\">file_names = [x.name <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> p.iterdir()]</span><br><span class=\"line\">nums = sorted([x.split(<span class=\"string\">&#x27;.&#x27;</span>)[<span class=\"number\">0</span>] <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> file_names])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(nums)):</span><br><span class=\"line\">    Path(<span class=\"string\">&#x27;D:\\weather-ffmpeg\\\\&#x27;</span> + <span class=\"string\">&#x27;&#123;0:06d&#125;&#x27;</span>.format(i) + <span class=\"string\">&#x27;.jpg&#x27;</span>).symlink_to(<span class=\"string\">&#x27;D:\\weather\\\\&#x27;</span> + nums[i] + <span class=\"string\">&#x27;.jpg&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/root/ffmpeg/ffmpeg -f image2 -i /root/weather-ffmpeg/%06d.jpg -vcodec libx264 -r 10 /var/http/weather.mp4</span><br></pre></td></tr></table></figure>\n\n\n<p><a href=\"https://github.com/8DE4732A/china-weather\">https://github.com/8DE4732A/china-weather</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>发现<a href=\"http://www.weather.com.cn/satellite/\">中国天气网</a>的气象云图挺好看的，vps上搞了个定时任务，抓取图片，生成视频</p>\n<p>定时抓取</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> urllib.request</span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\">req = urllib.request.Request(<span class=\"string\">&quot;http://d1.weather.com.cn/satellite2015/JC_YT_DL_WXZXCSYT_4A.html?jsoncallback=readSatellite&amp;callback=jQuery18208455971171376718_&quot;</span> + str(round(time.time() * <span class=\"number\">1000</span>)) + <span class=\"string\">&quot;&amp;_=&quot;</span> + str(round(time.time() * <span class=\"number\">1000</span>)))</span><br><span class=\"line\">req.add_header(<span class=\"string\">&#x27;Referer&#x27;</span>, <span class=\"string\">&#x27;http://www.weather.com.cn/satellite/&#x27;</span>)</span><br><span class=\"line\">req.add_header(<span class=\"string\">&#x27;User-Agent&#x27;</span>, <span class=\"string\">&#x27;Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> urllib.request.urlopen(req) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    data = f.read().decode(<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\">    data = data[<span class=\"number\">14</span>:<span class=\"number\">-1</span>]</span><br><span class=\"line\">    j = json.loads(data.replace(<span class=\"string\">&#x27;\\&#x27;&#x27;</span>,<span class=\"string\">&#x27;\\&quot;&#x27;</span>))</span><br><span class=\"line\">    <span class=\"keyword\">for</span> a <span class=\"keyword\">in</span> j[<span class=\"string\">&#x27;radars&#x27;</span>]:</span><br><span class=\"line\">        print(a[<span class=\"string\">&#x27;ft&#x27;</span>])</span><br><span class=\"line\">        urllib.request.urlretrieve(<span class=\"string\">&quot;http://pi.weather.com.cn/i/product/pic/l/sevp_nsmc_&quot;</span> + a[<span class=\"string\">&#x27;fn&#x27;</span>] + <span class=\"string\">&quot;_lno_py_&quot;</span> + a[<span class=\"string\">&#x27;ft&#x27;</span>] + <span class=\"string\">&quot;.jpg&quot;</span>, <span class=\"string\">&quot;D://weather/&quot;</span> + a[<span class=\"string\">&#x27;ft&#x27;</span>] + <span class=\"string\">&quot;.jpg&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>生成图片<br>先创建软链接用于ffmpeg</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pathlib <span class=\"keyword\">import</span> Path</span><br><span class=\"line\"></span><br><span class=\"line\">p = Path(<span class=\"string\">&#x27;D:\\weather&#x27;</span>)</span><br><span class=\"line\">file_names = [x.name <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> p.iterdir()]</span><br><span class=\"line\">nums = sorted([x.split(<span class=\"string\">&#x27;.&#x27;</span>)[<span class=\"number\">0</span>] <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> file_names])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(nums)):</span><br><span class=\"line\">    Path(<span class=\"string\">&#x27;D:\\weather-ffmpeg\\\\&#x27;</span> + <span class=\"string\">&#x27;&#123;0:06d&#125;&#x27;</span>.format(i) + <span class=\"string\">&#x27;.jpg&#x27;</span>).symlink_to(<span class=\"string\">&#x27;D:\\weather\\\\&#x27;</span> + nums[i] + <span class=\"string\">&#x27;.jpg&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/root/ffmpeg/ffmpeg -f image2 -i /root/weather-ffmpeg/%06d.jpg -vcodec libx264 -r 10 /var/http/weather.mp4</span><br></pre></td></tr></table></figure>\n\n\n<p><a href=\"https://github.com/8DE4732A/china-weather\">https://github.com/8DE4732A/china-weather</a></p>\n"},{"title":"最福利自动抢京东卡-android","date":"2020-10-04T10:11:42.000Z","mp3":null,"cover":null,"_content":"\n通过抓包获得h5页面地址，写了一个js可以自动下单。但是我希望晚上可以躺在床上抢，于是\n\n![](/assets/zuifuli.jpg)\n\n[https://github.com/8DE4732A/zufuli_jd](https://github.com/8DE4732A/zufuli_jd)","source":"_posts/android-webview.md","raw":"---\ntitle: 最福利自动抢京东卡-android\ndate: 2020-10-04 18:11:42\ntags:\ncategories:\nmp3:\ncover:\n---\n\n通过抓包获得h5页面地址，写了一个js可以自动下单。但是我希望晚上可以躺在床上抢，于是\n\n![](/assets/zuifuli.jpg)\n\n[https://github.com/8DE4732A/zufuli_jd](https://github.com/8DE4732A/zufuli_jd)","slug":"android-webview","published":1,"updated":"2020-10-04T10:11:42.986Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckfuy47z500006cuighxjcj4s","content":"<p>通过抓包获得h5页面地址，写了一个js可以自动下单。但是我希望晚上可以躺在床上抢，于是</p>\n<p><img src=\"/assets/zuifuli.jpg\"></p>\n<p><a href=\"https://github.com/8DE4732A/zufuli_jd\">https://github.com/8DE4732A/zufuli_jd</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>通过抓包获得h5页面地址，写了一个js可以自动下单。但是我希望晚上可以躺在床上抢，于是</p>\n<p><img src=\"/assets/zuifuli.jpg\"></p>\n<p><a href=\"https://github.com/8DE4732A/zufuli_jd\">https://github.com/8DE4732A/zufuli_jd</a></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ckfta33pw00007wuifz0o195y","category_id":"ckfta33q300017wui2sjbbsdl","_id":"ckfta33qa00047wuieytu6505"},{"post_id":"ckfueemdx000020uiem9r2f3i","category_id":"ckfueh1b2000320ui3ust4pq7","_id":"ckfueh1b3000420uic09h4kte"},{"post_id":"ckfuesjh00000rcuidi6e7xwh","category_id":"ckfuesjh70001rcui183mburi","_id":"ckfuesjhf0004rcui30hz1yfz"},{"post_id":"ckfuex9ou0000pkui62mx74c1","category_id":"ckfuesjh70001rcui183mburi","_id":"ckfuex9ps0002pkui347ed62i"},{"post_id":"ckfuy3nse0000t8ui4q033voa","category_id":"ckfta33q300017wui2sjbbsdl","_id":"ckfuy3nsj0002t8uicojta7rf"}],"PostTag":[{"post_id":"ckfta33pw00007wuifz0o195y","tag_id":"ckfta33q500027wui5t5f8cry","_id":"ckfta33q600037wuiaie568rx"},{"post_id":"ckfud9zsa0000z0uidflc3ppm","tag_id":"ckftg8e7r0003dwuidjcecnnd","_id":"ckfud9zsh0001z0uiabxmgszw"},{"post_id":"ckfueemdx000020uiem9r2f3i","tag_id":"ckfueh5rr000520ui9u08him7","_id":"ckfueh5rs000620ui3z7zajee"},{"post_id":"ckfuesjh00000rcuidi6e7xwh","tag_id":"ckfuesjh90002rcuih8a75v73","_id":"ckfuesjhb0003rcui6sk5hdrv"},{"post_id":"ckfuex9ou0000pkui62mx74c1","tag_id":"ckfuesjh90002rcuih8a75v73","_id":"ckfuex9pq0001pkuid0wm2pai"},{"post_id":"ckfuy3nse0000t8ui4q033voa","tag_id":"ckfta33q500027wui5t5f8cry","_id":"ckfuy3nsi0001t8ui307ugupr"}],"Tag":[{"name":"python","_id":"ckfta33q500027wui5t5f8cry"},{"name":"javascript","_id":"ckftg8e7r0003dwuidjcecnnd"},{"name":"raspberry","_id":"ckfueh5rr000520ui9u08him7"},{"name":"game","_id":"ckfuesjh90002rcuih8a75v73"}]}}